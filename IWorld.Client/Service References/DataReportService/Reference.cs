//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18051
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace IWorld.Client.DataReportService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportsType", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public enum ReportsType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        个人 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        团队 = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperateResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.DataReportService.PaginationListOfDataReportsResultL_PYu6_SAe))]
    public partial class OperateResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfDataReportsResultL_PYu6_SAe", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class PaginationListOfDataReportsResultL_PYu6_SAe : IWorld.Client.DataReportService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Client.DataReportService.DataReportsResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Client.DataReportService.DataReportsResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataReportsResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class DataReportsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double BalanceField;
        
        private double BetField;
        
        private double BonusField;
        
        private double ExpendituresField;
        
        private double ProfitField;
        
        private double RechargeField;
        
        private double ReturnPointsField;
        
        private string UserField;
        
        private int UserIdField;
        
        private double WithdrawalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Bet {
            get {
                return this.BetField;
            }
            set {
                if ((this.BetField.Equals(value) != true)) {
                    this.BetField = value;
                    this.RaisePropertyChanged("Bet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Bonus {
            get {
                return this.BonusField;
            }
            set {
                if ((this.BonusField.Equals(value) != true)) {
                    this.BonusField = value;
                    this.RaisePropertyChanged("Bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Expenditures {
            get {
                return this.ExpendituresField;
            }
            set {
                if ((this.ExpendituresField.Equals(value) != true)) {
                    this.ExpendituresField = value;
                    this.RaisePropertyChanged("Expenditures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Profit {
            get {
                return this.ProfitField;
            }
            set {
                if ((this.ProfitField.Equals(value) != true)) {
                    this.ProfitField = value;
                    this.RaisePropertyChanged("Profit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Recharge {
            get {
                return this.RechargeField;
            }
            set {
                if ((this.RechargeField.Equals(value) != true)) {
                    this.RechargeField = value;
                    this.RaisePropertyChanged("Recharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ReturnPoints {
            get {
                return this.ReturnPointsField;
            }
            set {
                if ((this.ReturnPointsField.Equals(value) != true)) {
                    this.ReturnPointsField = value;
                    this.RaisePropertyChanged("ReturnPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Withdrawal {
            get {
                return this.WithdrawalField;
            }
            set {
                if ((this.WithdrawalField.Equals(value) != true)) {
                    this.WithdrawalField = value;
                    this.RaisePropertyChanged("Withdrawal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataReportService.IDataReportService")]
    public interface IDataReportService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataReportService/GetReports", ReplyAction="http://tempuri.org/IDataReportService/GetReportsResponse")]
        System.IAsyncResult BeginGetReports(string beginTime, string endTime, IWorld.Client.DataReportService.ReportsType type, int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.DataReportService.PaginationListOfDataReportsResultL_PYu6_SAe EndGetReports(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataReportServiceChannel : IWorld.Client.DataReportService.IDataReportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.DataReportService.PaginationListOfDataReportsResultL_PYu6_SAe Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.DataReportService.PaginationListOfDataReportsResultL_PYu6_SAe)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataReportServiceClient : System.ServiceModel.ClientBase<IWorld.Client.DataReportService.IDataReportService>, IWorld.Client.DataReportService.IDataReportService {
        
        private BeginOperationDelegate onBeginGetReportsDelegate;
        
        private EndOperationDelegate onEndGetReportsDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DataReportServiceClient() {
        }
        
        public DataReportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataReportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataReportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataReportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetReportsCompletedEventArgs> GetReportsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.DataReportService.IDataReportService.BeginGetReports(string beginTime, string endTime, IWorld.Client.DataReportService.ReportsType type, int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReports(beginTime, endTime, type, page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.DataReportService.PaginationListOfDataReportsResultL_PYu6_SAe IWorld.Client.DataReportService.IDataReportService.EndGetReports(System.IAsyncResult result) {
            return base.Channel.EndGetReports(result);
        }
        
        private System.IAsyncResult OnBeginGetReports(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string beginTime = ((string)(inValues[0]));
            string endTime = ((string)(inValues[1]));
            IWorld.Client.DataReportService.ReportsType type = ((IWorld.Client.DataReportService.ReportsType)(inValues[2]));
            int page = ((int)(inValues[3]));
            string token = ((string)(inValues[4]));
            return ((IWorld.Client.DataReportService.IDataReportService)(this)).BeginGetReports(beginTime, endTime, type, page, token, callback, asyncState);
        }
        
        private object[] OnEndGetReports(System.IAsyncResult result) {
            IWorld.Client.DataReportService.PaginationListOfDataReportsResultL_PYu6_SAe retVal = ((IWorld.Client.DataReportService.IDataReportService)(this)).EndGetReports(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReportsCompleted(object state) {
            if ((this.GetReportsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportsCompleted(this, new GetReportsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportsAsync(string beginTime, string endTime, IWorld.Client.DataReportService.ReportsType type, int page, string token) {
            this.GetReportsAsync(beginTime, endTime, type, page, token, null);
        }
        
        public void GetReportsAsync(string beginTime, string endTime, IWorld.Client.DataReportService.ReportsType type, int page, string token, object userState) {
            if ((this.onBeginGetReportsDelegate == null)) {
                this.onBeginGetReportsDelegate = new BeginOperationDelegate(this.OnBeginGetReports);
            }
            if ((this.onEndGetReportsDelegate == null)) {
                this.onEndGetReportsDelegate = new EndOperationDelegate(this.OnEndGetReports);
            }
            if ((this.onGetReportsCompletedDelegate == null)) {
                this.onGetReportsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportsCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportsDelegate, new object[] {
                        beginTime,
                        endTime,
                        type,
                        page,
                        token}, this.onEndGetReportsDelegate, this.onGetReportsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IWorld.Client.DataReportService.IDataReportService CreateChannel() {
            return new DataReportServiceClientChannel(this);
        }
        
        private class DataReportServiceClientChannel : ChannelBase<IWorld.Client.DataReportService.IDataReportService>, IWorld.Client.DataReportService.IDataReportService {
            
            public DataReportServiceClientChannel(System.ServiceModel.ClientBase<IWorld.Client.DataReportService.IDataReportService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetReports(string beginTime, string endTime, IWorld.Client.DataReportService.ReportsType type, int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = beginTime;
                _args[1] = endTime;
                _args[2] = type;
                _args[3] = page;
                _args[4] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetReports", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.DataReportService.PaginationListOfDataReportsResultL_PYu6_SAe EndGetReports(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.DataReportService.PaginationListOfDataReportsResultL_PYu6_SAe _result = ((IWorld.Client.DataReportService.PaginationListOfDataReportsResultL_PYu6_SAe)(base.EndInvoke("GetReports", _args, result)));
                return _result;
            }
        }
    }
}
