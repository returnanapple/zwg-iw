//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18051
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace IWorld.Client.GamingService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperateResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.GamingService.BettingActionResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.GamingService.PaginationListOfBettingDetailsResultL_PYu6_SAe))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.GamingService.NormalListOfRankingResultL_PYu6_SAe))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.GamingService.NormalListOfHistoryOfLotteryResultL_PYu6_SAe))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.GamingService.AddBettingValuesResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe))]
    public partial class OperateResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BettingActionResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class BettingActionResult : IWorld.Client.GamingService.OperateResult {
        
        private int BettingIdField;
        
        private string HowToPlayField;
        
        private double MoneyField;
        
        private double MultipleField;
        
        private string ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BettingId {
            get {
                return this.BettingIdField;
            }
            set {
                if ((this.BettingIdField.Equals(value) != true)) {
                    this.BettingIdField = value;
                    this.RaisePropertyChanged("BettingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HowToPlay {
            get {
                return this.HowToPlayField;
            }
            set {
                if ((object.ReferenceEquals(this.HowToPlayField, value) != true)) {
                    this.HowToPlayField = value;
                    this.RaisePropertyChanged("HowToPlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Money {
            get {
                return this.MoneyField;
            }
            set {
                if ((this.MoneyField.Equals(value) != true)) {
                    this.MoneyField = value;
                    this.RaisePropertyChanged("Money");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Multiple {
            get {
                return this.MultipleField;
            }
            set {
                if ((this.MultipleField.Equals(value) != true)) {
                    this.MultipleField = value;
                    this.RaisePropertyChanged("Multiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfBettingDetailsResultL_PYu6_SAe", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class PaginationListOfBettingDetailsResultL_PYu6_SAe : IWorld.Client.GamingService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Client.GamingService.BettingDetailsResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Client.GamingService.BettingDetailsResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NormalListOfRankingResultL_PYu6_SAe", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class NormalListOfRankingResultL_PYu6_SAe : IWorld.Client.GamingService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Client.GamingService.RankingResult> ContentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Client.GamingService.RankingResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NormalListOfHistoryOfLotteryResultL_PYu6_SAe", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class NormalListOfHistoryOfLotteryResultL_PYu6_SAe : IWorld.Client.GamingService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Client.GamingService.HistoryOfLotteryResult> ContentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Client.GamingService.HistoryOfLotteryResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddBettingValuesResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class AddBettingValuesResult : IWorld.Client.GamingService.OperateResult {
        
        private string CodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NormalListOfLotteryTicketResultL_PYu6_SAe", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class NormalListOfLotteryTicketResultL_PYu6_SAe : IWorld.Client.GamingService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Client.GamingService.LotteryTicketResult> ContentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Client.GamingService.LotteryTicketResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LotteryTicketResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class LotteryTicketResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private string NextPhasesField;
        
        private int OrderField;
        
        private string PhasesField;
        
        private System.DateTime SurplusTimeField;
        
        private System.Collections.Generic.List<IWorld.Client.GamingService.PlayTagResult> TagsField;
        
        private int TicketIdField;
        
        private System.DateTime TimeAtServerField;
        
        private System.Collections.Generic.List<string> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextPhases {
            get {
                return this.NextPhasesField;
            }
            set {
                if ((object.ReferenceEquals(this.NextPhasesField, value) != true)) {
                    this.NextPhasesField = value;
                    this.RaisePropertyChanged("NextPhases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phases {
            get {
                return this.PhasesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhasesField, value) != true)) {
                    this.PhasesField = value;
                    this.RaisePropertyChanged("Phases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SurplusTime {
            get {
                return this.SurplusTimeField;
            }
            set {
                if ((this.SurplusTimeField.Equals(value) != true)) {
                    this.SurplusTimeField = value;
                    this.RaisePropertyChanged("SurplusTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Client.GamingService.PlayTagResult> Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeAtServer {
            get {
                return this.TimeAtServerField;
            }
            set {
                if ((this.TimeAtServerField.Equals(value) != true)) {
                    this.TimeAtServerField = value;
                    this.RaisePropertyChanged("TimeAtServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BettingDetailsResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class BettingDetailsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int BettingIdField;
        
        private double BonusField;
        
        private string HowToPlayField;
        
        private string LotteryValuesField;
        
        private double MultipleField;
        
        private string OwnerField;
        
        private double PayField;
        
        private string PhasesField;
        
        private string PlayTagField;
        
        private string RetutnPointsField;
        
        private IWorld.Client.GamingService.BettingStatus StatusField;
        
        private int SumField;
        
        private string TicketField;
        
        private System.DateTime TimeField;
        
        private string ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BettingId {
            get {
                return this.BettingIdField;
            }
            set {
                if ((this.BettingIdField.Equals(value) != true)) {
                    this.BettingIdField = value;
                    this.RaisePropertyChanged("BettingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Bonus {
            get {
                return this.BonusField;
            }
            set {
                if ((this.BonusField.Equals(value) != true)) {
                    this.BonusField = value;
                    this.RaisePropertyChanged("Bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HowToPlay {
            get {
                return this.HowToPlayField;
            }
            set {
                if ((object.ReferenceEquals(this.HowToPlayField, value) != true)) {
                    this.HowToPlayField = value;
                    this.RaisePropertyChanged("HowToPlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotteryValues {
            get {
                return this.LotteryValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.LotteryValuesField, value) != true)) {
                    this.LotteryValuesField = value;
                    this.RaisePropertyChanged("LotteryValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Multiple {
            get {
                return this.MultipleField;
            }
            set {
                if ((this.MultipleField.Equals(value) != true)) {
                    this.MultipleField = value;
                    this.RaisePropertyChanged("Multiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Pay {
            get {
                return this.PayField;
            }
            set {
                if ((this.PayField.Equals(value) != true)) {
                    this.PayField = value;
                    this.RaisePropertyChanged("Pay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phases {
            get {
                return this.PhasesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhasesField, value) != true)) {
                    this.PhasesField = value;
                    this.RaisePropertyChanged("Phases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayTag {
            get {
                return this.PlayTagField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayTagField, value) != true)) {
                    this.PlayTagField = value;
                    this.RaisePropertyChanged("PlayTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RetutnPoints {
            get {
                return this.RetutnPointsField;
            }
            set {
                if ((object.ReferenceEquals(this.RetutnPointsField, value) != true)) {
                    this.RetutnPointsField = value;
                    this.RaisePropertyChanged("RetutnPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.GamingService.BettingStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sum {
            get {
                return this.SumField;
            }
            set {
                if ((this.SumField.Equals(value) != true)) {
                    this.SumField = value;
                    this.RaisePropertyChanged("Sum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticket {
            get {
                return this.TicketField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketField, value) != true)) {
                    this.TicketField = value;
                    this.RaisePropertyChanged("Ticket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BettingStatus", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Model")]
    public enum BettingStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        用户撤单 = -2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        未中奖 = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        等待开奖 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        即将开奖 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中奖 = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RankingResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class RankingResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double BonusField;
        
        private int IdField;
        
        private bool IsRealBettingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Bonus {
            get {
                return this.BonusField;
            }
            set {
                if ((this.BonusField.Equals(value) != true)) {
                    this.BonusField = value;
                    this.RaisePropertyChanged("Bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRealBetting {
            get {
                return this.IsRealBettingField;
            }
            set {
                if ((this.IsRealBettingField.Equals(value) != true)) {
                    this.IsRealBettingField = value;
                    this.RaisePropertyChanged("IsRealBetting");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoryOfLotteryResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class HistoryOfLotteryResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string PhasesField;
        
        private System.Collections.Generic.List<string> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phases {
            get {
                return this.PhasesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhasesField, value) != true)) {
                    this.PhasesField = value;
                    this.RaisePropertyChanged("Phases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayTagResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class PlayTagResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.List<IWorld.Client.GamingService.HowToPlayResult> HowToPlaysField;
        
        private string NameField;
        
        private int PlayTagIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Client.GamingService.HowToPlayResult> HowToPlays {
            get {
                return this.HowToPlaysField;
            }
            set {
                if ((object.ReferenceEquals(this.HowToPlaysField, value) != true)) {
                    this.HowToPlaysField = value;
                    this.RaisePropertyChanged("HowToPlays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayTagId {
            get {
                return this.PlayTagIdField;
            }
            set {
                if ((this.PlayTagIdField.Equals(value) != true)) {
                    this.PlayTagIdField = value;
                    this.RaisePropertyChanged("PlayTagId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HowToPlayResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class HowToPlayResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private int HowToPlayIdField;
        
        private IWorld.Client.GamingService.LotteryInterface InterfaceField;
        
        private bool IsSingleField;
        
        private bool IsStackedBitField;
        
        private string NameField;
        
        private double OddsField;
        
        private string RuleField;
        
        private System.Collections.Generic.List<IWorld.Client.GamingService.OptionalSeatResult> SeatsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HowToPlayId {
            get {
                return this.HowToPlayIdField;
            }
            set {
                if ((this.HowToPlayIdField.Equals(value) != true)) {
                    this.HowToPlayIdField = value;
                    this.RaisePropertyChanged("HowToPlayId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.GamingService.LotteryInterface Interface {
            get {
                return this.InterfaceField;
            }
            set {
                if ((this.InterfaceField.Equals(value) != true)) {
                    this.InterfaceField = value;
                    this.RaisePropertyChanged("Interface");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSingle {
            get {
                return this.IsSingleField;
            }
            set {
                if ((this.IsSingleField.Equals(value) != true)) {
                    this.IsSingleField = value;
                    this.RaisePropertyChanged("IsSingle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsStackedBit {
            get {
                return this.IsStackedBitField;
            }
            set {
                if ((this.IsStackedBitField.Equals(value) != true)) {
                    this.IsStackedBitField = value;
                    this.RaisePropertyChanged("IsStackedBit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Odds {
            get {
                return this.OddsField;
            }
            set {
                if ((this.OddsField.Equals(value) != true)) {
                    this.OddsField = value;
                    this.RaisePropertyChanged("Odds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rule {
            get {
                return this.RuleField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleField, value) != true)) {
                    this.RuleField = value;
                    this.RaisePropertyChanged("Rule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Client.GamingService.OptionalSeatResult> Seats {
            get {
                return this.SeatsField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatsField, value) != true)) {
                    this.SeatsField = value;
                    this.RaisePropertyChanged("Seats");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LotteryInterface", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Model")]
    public enum LotteryInterface : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        任N直选 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        任N组选 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        任N不定位 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        任N定位胆 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        大小单双 = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OptionalSeatResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class OptionalSeatResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int LimitOfPickField;
        
        private string NameField;
        
        private int OrderField;
        
        private int UpperOfPickField;
        
        private System.Collections.Generic.List<string> ValuesField;
        
        private System.Collections.Generic.List<string> ValuesForDoubleField;
        
        private System.Collections.Generic.List<string> ValuesForLargeField;
        
        private System.Collections.Generic.List<string> ValuesForSingleField;
        
        private System.Collections.Generic.List<string> ValuesForSmallField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LimitOfPick {
            get {
                return this.LimitOfPickField;
            }
            set {
                if ((this.LimitOfPickField.Equals(value) != true)) {
                    this.LimitOfPickField = value;
                    this.RaisePropertyChanged("LimitOfPick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpperOfPick {
            get {
                return this.UpperOfPickField;
            }
            set {
                if ((this.UpperOfPickField.Equals(value) != true)) {
                    this.UpperOfPickField = value;
                    this.RaisePropertyChanged("UpperOfPick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> ValuesForDouble {
            get {
                return this.ValuesForDoubleField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesForDoubleField, value) != true)) {
                    this.ValuesForDoubleField = value;
                    this.RaisePropertyChanged("ValuesForDouble");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> ValuesForLarge {
            get {
                return this.ValuesForLargeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesForLargeField, value) != true)) {
                    this.ValuesForLargeField = value;
                    this.RaisePropertyChanged("ValuesForLarge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> ValuesForSingle {
            get {
                return this.ValuesForSingleField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesForSingleField, value) != true)) {
                    this.ValuesForSingleField = value;
                    this.RaisePropertyChanged("ValuesForSingle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> ValuesForSmall {
            get {
                return this.ValuesForSmallField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesForSmallField, value) != true)) {
                    this.ValuesForSmallField = value;
                    this.RaisePropertyChanged("ValuesForSmall");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BettingImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class BettingImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private IWorld.Client.GamingService.BettingInfoImport BettingInfoField;
        
        private IWorld.Client.GamingService.ChasingInfoImport ChasingInfoField;
        
        private System.Collections.Generic.List<string> CodesField;
        
        private System.Collections.Generic.List<IWorld.Client.GamingService.BettingValuesImport> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.GamingService.BettingInfoImport BettingInfo {
            get {
                return this.BettingInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.BettingInfoField, value) != true)) {
                    this.BettingInfoField = value;
                    this.RaisePropertyChanged("BettingInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.GamingService.ChasingInfoImport ChasingInfo {
            get {
                return this.ChasingInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChasingInfoField, value) != true)) {
                    this.ChasingInfoField = value;
                    this.RaisePropertyChanged("ChasingInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Codes {
            get {
                return this.CodesField;
            }
            set {
                if ((object.ReferenceEquals(this.CodesField, value) != true)) {
                    this.CodesField = value;
                    this.RaisePropertyChanged("Codes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Client.GamingService.BettingValuesImport> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BettingInfoImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class BettingInfoImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int HowToPlayIdField;
        
        private double MultipleField;
        
        private string PhasesField;
        
        private double PointsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HowToPlayId {
            get {
                return this.HowToPlayIdField;
            }
            set {
                if ((this.HowToPlayIdField.Equals(value) != true)) {
                    this.HowToPlayIdField = value;
                    this.RaisePropertyChanged("HowToPlayId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Multiple {
            get {
                return this.MultipleField;
            }
            set {
                if ((this.MultipleField.Equals(value) != true)) {
                    this.MultipleField = value;
                    this.RaisePropertyChanged("Multiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phases {
            get {
                return this.PhasesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhasesField, value) != true)) {
                    this.PhasesField = value;
                    this.RaisePropertyChanged("Phases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChasingInfoImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class ChasingInfoImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.List<IWorld.Client.GamingService.BettingForChasingInfo> BettingsField;
        
        private int ContinuanceField;
        
        private bool EndIfLotteryAtGoingField;
        
        private bool EndIfLotteryBeforeBeginField;
        
        private bool IsChasingField;
        
        private int PostponeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Client.GamingService.BettingForChasingInfo> Bettings {
            get {
                return this.BettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.BettingsField, value) != true)) {
                    this.BettingsField = value;
                    this.RaisePropertyChanged("Bettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Continuance {
            get {
                return this.ContinuanceField;
            }
            set {
                if ((this.ContinuanceField.Equals(value) != true)) {
                    this.ContinuanceField = value;
                    this.RaisePropertyChanged("Continuance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EndIfLotteryAtGoing {
            get {
                return this.EndIfLotteryAtGoingField;
            }
            set {
                if ((this.EndIfLotteryAtGoingField.Equals(value) != true)) {
                    this.EndIfLotteryAtGoingField = value;
                    this.RaisePropertyChanged("EndIfLotteryAtGoing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EndIfLotteryBeforeBegin {
            get {
                return this.EndIfLotteryBeforeBeginField;
            }
            set {
                if ((this.EndIfLotteryBeforeBeginField.Equals(value) != true)) {
                    this.EndIfLotteryBeforeBeginField = value;
                    this.RaisePropertyChanged("EndIfLotteryBeforeBegin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChasing {
            get {
                return this.IsChasingField;
            }
            set {
                if ((this.IsChasingField.Equals(value) != true)) {
                    this.IsChasingField = value;
                    this.RaisePropertyChanged("IsChasing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Postpone {
            get {
                return this.PostponeField;
            }
            set {
                if ((this.PostponeField.Equals(value) != true)) {
                    this.PostponeField = value;
                    this.RaisePropertyChanged("Postpone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BettingValuesImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class BettingValuesImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string SeatField;
        
        private System.Collections.Generic.List<string> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Seat {
            get {
                return this.SeatField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatField, value) != true)) {
                    this.SeatField = value;
                    this.RaisePropertyChanged("Seat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BettingForChasingInfo", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class BettingForChasingInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double ExponentField;
        
        private string PhasesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Exponent {
            get {
                return this.ExponentField;
            }
            set {
                if ((this.ExponentField.Equals(value) != true)) {
                    this.ExponentField = value;
                    this.RaisePropertyChanged("Exponent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phases {
            get {
                return this.PhasesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhasesField, value) != true)) {
                    this.PhasesField = value;
                    this.RaisePropertyChanged("Phases");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BettingDetailsSelectType", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public enum BettingDetailsSelectType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        个人 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        团队 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        直属下级 = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GamingService.IGamingService")]
    public interface IGamingService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGamingService/GetLotteryTickets", ReplyAction="http://tempuri.org/IGamingService/GetLotteryTicketsResponse")]
        System.IAsyncResult BeginGetLotteryTickets(System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe EndGetLotteryTickets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGamingService/GetHowToPlays", ReplyAction="http://tempuri.org/IGamingService/GetHowToPlaysResponse")]
        System.IAsyncResult BeginGetHowToPlays(System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe EndGetHowToPlays(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGamingService/Betting", ReplyAction="http://tempuri.org/IGamingService/BettingResponse")]
        System.IAsyncResult BeginBetting(IWorld.Client.GamingService.BettingImport bettingImport, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.GamingService.BettingActionResult EndBetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGamingService/RemoveBetting", ReplyAction="http://tempuri.org/IGamingService/RemoveBettingResponse")]
        System.IAsyncResult BeginRemoveBetting(int bettingId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.GamingService.OperateResult EndRemoveBetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGamingService/GetBettingDetails", ReplyAction="http://tempuri.org/IGamingService/GetBettingDetailsResponse")]
        System.IAsyncResult BeginGetBettingDetails(IWorld.Client.GamingService.BettingDetailsSelectType selectType, string beginTime, string endTime, int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.GamingService.PaginationListOfBettingDetailsResultL_PYu6_SAe EndGetBettingDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGamingService/GetRanking", ReplyAction="http://tempuri.org/IGamingService/GetRankingResponse")]
        System.IAsyncResult BeginGetRanking(int ticketId, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.GamingService.NormalListOfRankingResultL_PYu6_SAe EndGetRanking(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGamingService/GetHistoryOfLottery", ReplyAction="http://tempuri.org/IGamingService/GetHistoryOfLotteryResponse")]
        System.IAsyncResult BeginGetHistoryOfLottery(int ticketId, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.GamingService.NormalListOfHistoryOfLotteryResultL_PYu6_SAe EndGetHistoryOfLottery(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGamingService/AddBettingValues", ReplyAction="http://tempuri.org/IGamingService/AddBettingValuesResponse")]
        System.IAsyncResult BeginAddBettingValues(System.Collections.Generic.List<string> values, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.GamingService.AddBettingValuesResult EndAddBettingValues(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGamingServiceChannel : IWorld.Client.GamingService.IGamingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLotteryTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLotteryTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHowToPlaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHowToPlaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.GamingService.BettingActionResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.GamingService.BettingActionResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveBettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveBettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.GamingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.GamingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBettingDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBettingDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.GamingService.PaginationListOfBettingDetailsResultL_PYu6_SAe Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.GamingService.PaginationListOfBettingDetailsResultL_PYu6_SAe)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRankingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRankingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.GamingService.NormalListOfRankingResultL_PYu6_SAe Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.GamingService.NormalListOfRankingResultL_PYu6_SAe)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHistoryOfLotteryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHistoryOfLotteryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.GamingService.NormalListOfHistoryOfLotteryResultL_PYu6_SAe Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.GamingService.NormalListOfHistoryOfLotteryResultL_PYu6_SAe)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddBettingValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddBettingValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.GamingService.AddBettingValuesResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.GamingService.AddBettingValuesResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GamingServiceClient : System.ServiceModel.ClientBase<IWorld.Client.GamingService.IGamingService>, IWorld.Client.GamingService.IGamingService {
        
        private BeginOperationDelegate onBeginGetLotteryTicketsDelegate;
        
        private EndOperationDelegate onEndGetLotteryTicketsDelegate;
        
        private System.Threading.SendOrPostCallback onGetLotteryTicketsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHowToPlaysDelegate;
        
        private EndOperationDelegate onEndGetHowToPlaysDelegate;
        
        private System.Threading.SendOrPostCallback onGetHowToPlaysCompletedDelegate;
        
        private BeginOperationDelegate onBeginBettingDelegate;
        
        private EndOperationDelegate onEndBettingDelegate;
        
        private System.Threading.SendOrPostCallback onBettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveBettingDelegate;
        
        private EndOperationDelegate onEndRemoveBettingDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveBettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBettingDetailsDelegate;
        
        private EndOperationDelegate onEndGetBettingDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetBettingDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRankingDelegate;
        
        private EndOperationDelegate onEndGetRankingDelegate;
        
        private System.Threading.SendOrPostCallback onGetRankingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHistoryOfLotteryDelegate;
        
        private EndOperationDelegate onEndGetHistoryOfLotteryDelegate;
        
        private System.Threading.SendOrPostCallback onGetHistoryOfLotteryCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddBettingValuesDelegate;
        
        private EndOperationDelegate onEndAddBettingValuesDelegate;
        
        private System.Threading.SendOrPostCallback onAddBettingValuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public GamingServiceClient() {
        }
        
        public GamingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GamingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GamingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GamingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetLotteryTicketsCompletedEventArgs> GetLotteryTicketsCompleted;
        
        public event System.EventHandler<GetHowToPlaysCompletedEventArgs> GetHowToPlaysCompleted;
        
        public event System.EventHandler<BettingCompletedEventArgs> BettingCompleted;
        
        public event System.EventHandler<RemoveBettingCompletedEventArgs> RemoveBettingCompleted;
        
        public event System.EventHandler<GetBettingDetailsCompletedEventArgs> GetBettingDetailsCompleted;
        
        public event System.EventHandler<GetRankingCompletedEventArgs> GetRankingCompleted;
        
        public event System.EventHandler<GetHistoryOfLotteryCompletedEventArgs> GetHistoryOfLotteryCompleted;
        
        public event System.EventHandler<AddBettingValuesCompletedEventArgs> AddBettingValuesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.GamingService.IGamingService.BeginGetLotteryTickets(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLotteryTickets(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe IWorld.Client.GamingService.IGamingService.EndGetLotteryTickets(System.IAsyncResult result) {
            return base.Channel.EndGetLotteryTickets(result);
        }
        
        private System.IAsyncResult OnBeginGetLotteryTickets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((IWorld.Client.GamingService.IGamingService)(this)).BeginGetLotteryTickets(callback, asyncState);
        }
        
        private object[] OnEndGetLotteryTickets(System.IAsyncResult result) {
            IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe retVal = ((IWorld.Client.GamingService.IGamingService)(this)).EndGetLotteryTickets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLotteryTicketsCompleted(object state) {
            if ((this.GetLotteryTicketsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLotteryTicketsCompleted(this, new GetLotteryTicketsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLotteryTicketsAsync() {
            this.GetLotteryTicketsAsync(null);
        }
        
        public void GetLotteryTicketsAsync(object userState) {
            if ((this.onBeginGetLotteryTicketsDelegate == null)) {
                this.onBeginGetLotteryTicketsDelegate = new BeginOperationDelegate(this.OnBeginGetLotteryTickets);
            }
            if ((this.onEndGetLotteryTicketsDelegate == null)) {
                this.onEndGetLotteryTicketsDelegate = new EndOperationDelegate(this.OnEndGetLotteryTickets);
            }
            if ((this.onGetLotteryTicketsCompletedDelegate == null)) {
                this.onGetLotteryTicketsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLotteryTicketsCompleted);
            }
            base.InvokeAsync(this.onBeginGetLotteryTicketsDelegate, null, this.onEndGetLotteryTicketsDelegate, this.onGetLotteryTicketsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.GamingService.IGamingService.BeginGetHowToPlays(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHowToPlays(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe IWorld.Client.GamingService.IGamingService.EndGetHowToPlays(System.IAsyncResult result) {
            return base.Channel.EndGetHowToPlays(result);
        }
        
        private System.IAsyncResult OnBeginGetHowToPlays(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((IWorld.Client.GamingService.IGamingService)(this)).BeginGetHowToPlays(callback, asyncState);
        }
        
        private object[] OnEndGetHowToPlays(System.IAsyncResult result) {
            IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe retVal = ((IWorld.Client.GamingService.IGamingService)(this)).EndGetHowToPlays(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHowToPlaysCompleted(object state) {
            if ((this.GetHowToPlaysCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHowToPlaysCompleted(this, new GetHowToPlaysCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHowToPlaysAsync() {
            this.GetHowToPlaysAsync(null);
        }
        
        public void GetHowToPlaysAsync(object userState) {
            if ((this.onBeginGetHowToPlaysDelegate == null)) {
                this.onBeginGetHowToPlaysDelegate = new BeginOperationDelegate(this.OnBeginGetHowToPlays);
            }
            if ((this.onEndGetHowToPlaysDelegate == null)) {
                this.onEndGetHowToPlaysDelegate = new EndOperationDelegate(this.OnEndGetHowToPlays);
            }
            if ((this.onGetHowToPlaysCompletedDelegate == null)) {
                this.onGetHowToPlaysCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHowToPlaysCompleted);
            }
            base.InvokeAsync(this.onBeginGetHowToPlaysDelegate, null, this.onEndGetHowToPlaysDelegate, this.onGetHowToPlaysCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.GamingService.IGamingService.BeginBetting(IWorld.Client.GamingService.BettingImport bettingImport, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBetting(bettingImport, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.GamingService.BettingActionResult IWorld.Client.GamingService.IGamingService.EndBetting(System.IAsyncResult result) {
            return base.Channel.EndBetting(result);
        }
        
        private System.IAsyncResult OnBeginBetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Client.GamingService.BettingImport bettingImport = ((IWorld.Client.GamingService.BettingImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Client.GamingService.IGamingService)(this)).BeginBetting(bettingImport, token, callback, asyncState);
        }
        
        private object[] OnEndBetting(System.IAsyncResult result) {
            IWorld.Client.GamingService.BettingActionResult retVal = ((IWorld.Client.GamingService.IGamingService)(this)).EndBetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBettingCompleted(object state) {
            if ((this.BettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BettingCompleted(this, new BettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BettingAsync(IWorld.Client.GamingService.BettingImport bettingImport, string token) {
            this.BettingAsync(bettingImport, token, null);
        }
        
        public void BettingAsync(IWorld.Client.GamingService.BettingImport bettingImport, string token, object userState) {
            if ((this.onBeginBettingDelegate == null)) {
                this.onBeginBettingDelegate = new BeginOperationDelegate(this.OnBeginBetting);
            }
            if ((this.onEndBettingDelegate == null)) {
                this.onEndBettingDelegate = new EndOperationDelegate(this.OnEndBetting);
            }
            if ((this.onBettingCompletedDelegate == null)) {
                this.onBettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBettingCompleted);
            }
            base.InvokeAsync(this.onBeginBettingDelegate, new object[] {
                        bettingImport,
                        token}, this.onEndBettingDelegate, this.onBettingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.GamingService.IGamingService.BeginRemoveBetting(int bettingId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveBetting(bettingId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.GamingService.OperateResult IWorld.Client.GamingService.IGamingService.EndRemoveBetting(System.IAsyncResult result) {
            return base.Channel.EndRemoveBetting(result);
        }
        
        private System.IAsyncResult OnBeginRemoveBetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int bettingId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Client.GamingService.IGamingService)(this)).BeginRemoveBetting(bettingId, token, callback, asyncState);
        }
        
        private object[] OnEndRemoveBetting(System.IAsyncResult result) {
            IWorld.Client.GamingService.OperateResult retVal = ((IWorld.Client.GamingService.IGamingService)(this)).EndRemoveBetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveBettingCompleted(object state) {
            if ((this.RemoveBettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveBettingCompleted(this, new RemoveBettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveBettingAsync(int bettingId, string token) {
            this.RemoveBettingAsync(bettingId, token, null);
        }
        
        public void RemoveBettingAsync(int bettingId, string token, object userState) {
            if ((this.onBeginRemoveBettingDelegate == null)) {
                this.onBeginRemoveBettingDelegate = new BeginOperationDelegate(this.OnBeginRemoveBetting);
            }
            if ((this.onEndRemoveBettingDelegate == null)) {
                this.onEndRemoveBettingDelegate = new EndOperationDelegate(this.OnEndRemoveBetting);
            }
            if ((this.onRemoveBettingCompletedDelegate == null)) {
                this.onRemoveBettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveBettingCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveBettingDelegate, new object[] {
                        bettingId,
                        token}, this.onEndRemoveBettingDelegate, this.onRemoveBettingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.GamingService.IGamingService.BeginGetBettingDetails(IWorld.Client.GamingService.BettingDetailsSelectType selectType, string beginTime, string endTime, int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBettingDetails(selectType, beginTime, endTime, page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.GamingService.PaginationListOfBettingDetailsResultL_PYu6_SAe IWorld.Client.GamingService.IGamingService.EndGetBettingDetails(System.IAsyncResult result) {
            return base.Channel.EndGetBettingDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetBettingDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Client.GamingService.BettingDetailsSelectType selectType = ((IWorld.Client.GamingService.BettingDetailsSelectType)(inValues[0]));
            string beginTime = ((string)(inValues[1]));
            string endTime = ((string)(inValues[2]));
            int page = ((int)(inValues[3]));
            string token = ((string)(inValues[4]));
            return ((IWorld.Client.GamingService.IGamingService)(this)).BeginGetBettingDetails(selectType, beginTime, endTime, page, token, callback, asyncState);
        }
        
        private object[] OnEndGetBettingDetails(System.IAsyncResult result) {
            IWorld.Client.GamingService.PaginationListOfBettingDetailsResultL_PYu6_SAe retVal = ((IWorld.Client.GamingService.IGamingService)(this)).EndGetBettingDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBettingDetailsCompleted(object state) {
            if ((this.GetBettingDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBettingDetailsCompleted(this, new GetBettingDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBettingDetailsAsync(IWorld.Client.GamingService.BettingDetailsSelectType selectType, string beginTime, string endTime, int page, string token) {
            this.GetBettingDetailsAsync(selectType, beginTime, endTime, page, token, null);
        }
        
        public void GetBettingDetailsAsync(IWorld.Client.GamingService.BettingDetailsSelectType selectType, string beginTime, string endTime, int page, string token, object userState) {
            if ((this.onBeginGetBettingDetailsDelegate == null)) {
                this.onBeginGetBettingDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetBettingDetails);
            }
            if ((this.onEndGetBettingDetailsDelegate == null)) {
                this.onEndGetBettingDetailsDelegate = new EndOperationDelegate(this.OnEndGetBettingDetails);
            }
            if ((this.onGetBettingDetailsCompletedDelegate == null)) {
                this.onGetBettingDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBettingDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetBettingDetailsDelegate, new object[] {
                        selectType,
                        beginTime,
                        endTime,
                        page,
                        token}, this.onEndGetBettingDetailsDelegate, this.onGetBettingDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.GamingService.IGamingService.BeginGetRanking(int ticketId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRanking(ticketId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.GamingService.NormalListOfRankingResultL_PYu6_SAe IWorld.Client.GamingService.IGamingService.EndGetRanking(System.IAsyncResult result) {
            return base.Channel.EndGetRanking(result);
        }
        
        private System.IAsyncResult OnBeginGetRanking(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ticketId = ((int)(inValues[0]));
            return ((IWorld.Client.GamingService.IGamingService)(this)).BeginGetRanking(ticketId, callback, asyncState);
        }
        
        private object[] OnEndGetRanking(System.IAsyncResult result) {
            IWorld.Client.GamingService.NormalListOfRankingResultL_PYu6_SAe retVal = ((IWorld.Client.GamingService.IGamingService)(this)).EndGetRanking(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRankingCompleted(object state) {
            if ((this.GetRankingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRankingCompleted(this, new GetRankingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRankingAsync(int ticketId) {
            this.GetRankingAsync(ticketId, null);
        }
        
        public void GetRankingAsync(int ticketId, object userState) {
            if ((this.onBeginGetRankingDelegate == null)) {
                this.onBeginGetRankingDelegate = new BeginOperationDelegate(this.OnBeginGetRanking);
            }
            if ((this.onEndGetRankingDelegate == null)) {
                this.onEndGetRankingDelegate = new EndOperationDelegate(this.OnEndGetRanking);
            }
            if ((this.onGetRankingCompletedDelegate == null)) {
                this.onGetRankingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRankingCompleted);
            }
            base.InvokeAsync(this.onBeginGetRankingDelegate, new object[] {
                        ticketId}, this.onEndGetRankingDelegate, this.onGetRankingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.GamingService.IGamingService.BeginGetHistoryOfLottery(int ticketId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHistoryOfLottery(ticketId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.GamingService.NormalListOfHistoryOfLotteryResultL_PYu6_SAe IWorld.Client.GamingService.IGamingService.EndGetHistoryOfLottery(System.IAsyncResult result) {
            return base.Channel.EndGetHistoryOfLottery(result);
        }
        
        private System.IAsyncResult OnBeginGetHistoryOfLottery(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ticketId = ((int)(inValues[0]));
            return ((IWorld.Client.GamingService.IGamingService)(this)).BeginGetHistoryOfLottery(ticketId, callback, asyncState);
        }
        
        private object[] OnEndGetHistoryOfLottery(System.IAsyncResult result) {
            IWorld.Client.GamingService.NormalListOfHistoryOfLotteryResultL_PYu6_SAe retVal = ((IWorld.Client.GamingService.IGamingService)(this)).EndGetHistoryOfLottery(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHistoryOfLotteryCompleted(object state) {
            if ((this.GetHistoryOfLotteryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHistoryOfLotteryCompleted(this, new GetHistoryOfLotteryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHistoryOfLotteryAsync(int ticketId) {
            this.GetHistoryOfLotteryAsync(ticketId, null);
        }
        
        public void GetHistoryOfLotteryAsync(int ticketId, object userState) {
            if ((this.onBeginGetHistoryOfLotteryDelegate == null)) {
                this.onBeginGetHistoryOfLotteryDelegate = new BeginOperationDelegate(this.OnBeginGetHistoryOfLottery);
            }
            if ((this.onEndGetHistoryOfLotteryDelegate == null)) {
                this.onEndGetHistoryOfLotteryDelegate = new EndOperationDelegate(this.OnEndGetHistoryOfLottery);
            }
            if ((this.onGetHistoryOfLotteryCompletedDelegate == null)) {
                this.onGetHistoryOfLotteryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHistoryOfLotteryCompleted);
            }
            base.InvokeAsync(this.onBeginGetHistoryOfLotteryDelegate, new object[] {
                        ticketId}, this.onEndGetHistoryOfLotteryDelegate, this.onGetHistoryOfLotteryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.GamingService.IGamingService.BeginAddBettingValues(System.Collections.Generic.List<string> values, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddBettingValues(values, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.GamingService.AddBettingValuesResult IWorld.Client.GamingService.IGamingService.EndAddBettingValues(System.IAsyncResult result) {
            return base.Channel.EndAddBettingValues(result);
        }
        
        private System.IAsyncResult OnBeginAddBettingValues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<string> values = ((System.Collections.Generic.List<string>)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Client.GamingService.IGamingService)(this)).BeginAddBettingValues(values, token, callback, asyncState);
        }
        
        private object[] OnEndAddBettingValues(System.IAsyncResult result) {
            IWorld.Client.GamingService.AddBettingValuesResult retVal = ((IWorld.Client.GamingService.IGamingService)(this)).EndAddBettingValues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddBettingValuesCompleted(object state) {
            if ((this.AddBettingValuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddBettingValuesCompleted(this, new AddBettingValuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddBettingValuesAsync(System.Collections.Generic.List<string> values, string token) {
            this.AddBettingValuesAsync(values, token, null);
        }
        
        public void AddBettingValuesAsync(System.Collections.Generic.List<string> values, string token, object userState) {
            if ((this.onBeginAddBettingValuesDelegate == null)) {
                this.onBeginAddBettingValuesDelegate = new BeginOperationDelegate(this.OnBeginAddBettingValues);
            }
            if ((this.onEndAddBettingValuesDelegate == null)) {
                this.onEndAddBettingValuesDelegate = new EndOperationDelegate(this.OnEndAddBettingValues);
            }
            if ((this.onAddBettingValuesCompletedDelegate == null)) {
                this.onAddBettingValuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddBettingValuesCompleted);
            }
            base.InvokeAsync(this.onBeginAddBettingValuesDelegate, new object[] {
                        values,
                        token}, this.onEndAddBettingValuesDelegate, this.onAddBettingValuesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IWorld.Client.GamingService.IGamingService CreateChannel() {
            return new GamingServiceClientChannel(this);
        }
        
        private class GamingServiceClientChannel : ChannelBase<IWorld.Client.GamingService.IGamingService>, IWorld.Client.GamingService.IGamingService {
            
            public GamingServiceClientChannel(System.ServiceModel.ClientBase<IWorld.Client.GamingService.IGamingService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetLotteryTickets(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLotteryTickets", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe EndGetLotteryTickets(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe _result = ((IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe)(base.EndInvoke("GetLotteryTickets", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHowToPlays(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetHowToPlays", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe EndGetHowToPlays(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe _result = ((IWorld.Client.GamingService.NormalListOfLotteryTicketResultL_PYu6_SAe)(base.EndInvoke("GetHowToPlays", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBetting(IWorld.Client.GamingService.BettingImport bettingImport, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = bettingImport;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("Betting", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.GamingService.BettingActionResult EndBetting(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.GamingService.BettingActionResult _result = ((IWorld.Client.GamingService.BettingActionResult)(base.EndInvoke("Betting", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveBetting(int bettingId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = bettingId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("RemoveBetting", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.GamingService.OperateResult EndRemoveBetting(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.GamingService.OperateResult _result = ((IWorld.Client.GamingService.OperateResult)(base.EndInvoke("RemoveBetting", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBettingDetails(IWorld.Client.GamingService.BettingDetailsSelectType selectType, string beginTime, string endTime, int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = selectType;
                _args[1] = beginTime;
                _args[2] = endTime;
                _args[3] = page;
                _args[4] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetBettingDetails", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.GamingService.PaginationListOfBettingDetailsResultL_PYu6_SAe EndGetBettingDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.GamingService.PaginationListOfBettingDetailsResultL_PYu6_SAe _result = ((IWorld.Client.GamingService.PaginationListOfBettingDetailsResultL_PYu6_SAe)(base.EndInvoke("GetBettingDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRanking(int ticketId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ticketId;
                System.IAsyncResult _result = base.BeginInvoke("GetRanking", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.GamingService.NormalListOfRankingResultL_PYu6_SAe EndGetRanking(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.GamingService.NormalListOfRankingResultL_PYu6_SAe _result = ((IWorld.Client.GamingService.NormalListOfRankingResultL_PYu6_SAe)(base.EndInvoke("GetRanking", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHistoryOfLottery(int ticketId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ticketId;
                System.IAsyncResult _result = base.BeginInvoke("GetHistoryOfLottery", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.GamingService.NormalListOfHistoryOfLotteryResultL_PYu6_SAe EndGetHistoryOfLottery(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.GamingService.NormalListOfHistoryOfLotteryResultL_PYu6_SAe _result = ((IWorld.Client.GamingService.NormalListOfHistoryOfLotteryResultL_PYu6_SAe)(base.EndInvoke("GetHistoryOfLottery", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddBettingValues(System.Collections.Generic.List<string> values, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = values;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("AddBettingValues", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.GamingService.AddBettingValuesResult EndAddBettingValues(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.GamingService.AddBettingValuesResult _result = ((IWorld.Client.GamingService.AddBettingValuesResult)(base.EndInvoke("AddBettingValues", _args, result)));
                return _result;
            }
        }
    }
}
