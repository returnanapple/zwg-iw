//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18051
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace IWorld.Client.FundsService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperateResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.FundsService.PaginationListOfRechargeDetailsResultL_PYu6_SAe))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.FundsService.PaginationListOfWithdrawDetailsResultL_PYu6_SAe))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.FundsService.RechargeResult))]
    public partial class OperateResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfRechargeDetailsResultL_PYu6_SAe", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class PaginationListOfRechargeDetailsResultL_PYu6_SAe : IWorld.Client.FundsService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Client.FundsService.RechargeDetailsResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Client.FundsService.RechargeDetailsResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfWithdrawDetailsResultL_PYu6_SAe", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class PaginationListOfWithdrawDetailsResultL_PYu6_SAe : IWorld.Client.FundsService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Client.FundsService.WithdrawDetailsResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Client.FundsService.WithdrawDetailsResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RechargeResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class RechargeResult : IWorld.Client.FundsService.OperateResult {
        
        private IWorld.Client.FundsService.Bank BankField;
        
        private string CardField;
        
        private string CodeField;
        
        private string HolderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.FundsService.Bank Bank {
            get {
                return this.BankField;
            }
            set {
                if ((this.BankField.Equals(value) != true)) {
                    this.BankField = value;
                    this.RaisePropertyChanged("Bank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Holder {
            get {
                return this.HolderField;
            }
            set {
                if ((object.ReferenceEquals(this.HolderField, value) != true)) {
                    this.HolderField = value;
                    this.RaisePropertyChanged("Holder");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bank", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Model")]
    public enum Bank : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        无 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国工商银行 = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国农业银行 = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国银行 = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国建设银行 = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        交通银行 = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        财付通 = 201,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RechargeDetailsResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class RechargeDetailsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeField;
        
        private string FromField;
        
        private int RechargeIdField;
        
        private string RemarkField;
        
        private IWorld.Client.FundsService.RechargeStatus StatusField;
        
        private double SumField;
        
        private System.DateTime TimeField;
        
        private string ToField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RechargeId {
            get {
                return this.RechargeIdField;
            }
            set {
                if ((this.RechargeIdField.Equals(value) != true)) {
                    this.RechargeIdField = value;
                    this.RaisePropertyChanged("RechargeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.FundsService.RechargeStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Sum {
            get {
                return this.SumField;
            }
            set {
                if ((this.SumField.Equals(value) != true)) {
                    this.SumField = value;
                    this.RaisePropertyChanged("Sum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string To {
            get {
                return this.ToField;
            }
            set {
                if ((object.ReferenceEquals(this.ToField, value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RechargeStatus", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Model")]
    public enum RechargeStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        失败 = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        等待支付 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        充值成功 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        用户已经支付 = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WithdrawDetailsResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class WithdrawDetailsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private IWorld.Client.FundsService.Bank BankField;
        
        private string CardField;
        
        private string HolderField;
        
        private string RemarkField;
        
        private IWorld.Client.FundsService.WithdrawalsStatus StatusField;
        
        private double SumField;
        
        private System.DateTime TimeField;
        
        private int WithdrawalsIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.FundsService.Bank Bank {
            get {
                return this.BankField;
            }
            set {
                if ((this.BankField.Equals(value) != true)) {
                    this.BankField = value;
                    this.RaisePropertyChanged("Bank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Holder {
            get {
                return this.HolderField;
            }
            set {
                if ((object.ReferenceEquals(this.HolderField, value) != true)) {
                    this.HolderField = value;
                    this.RaisePropertyChanged("Holder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.FundsService.WithdrawalsStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Sum {
            get {
                return this.SumField;
            }
            set {
                if ((this.SumField.Equals(value) != true)) {
                    this.SumField = value;
                    this.RaisePropertyChanged("Sum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WithdrawalsId {
            get {
                return this.WithdrawalsIdField;
            }
            set {
                if ((this.WithdrawalsIdField.Equals(value) != true)) {
                    this.WithdrawalsIdField = value;
                    this.RaisePropertyChanged("WithdrawalsId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WithdrawalsStatus", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Model")]
    public enum WithdrawalsStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        失败 = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        处理中 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        提现成功 = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FundsService.IFundsService")]
    public interface IFundsService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFundsService/Recharge", ReplyAction="http://tempuri.org/IFundsService/RechargeResponse")]
        System.IAsyncResult BeginRecharge(int userId, double sum, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.FundsService.RechargeResult EndRecharge(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFundsService/GetRechargeDetails", ReplyAction="http://tempuri.org/IFundsService/GetRechargeDetailsResponse")]
        System.IAsyncResult BeginGetRechargeDetails(int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.FundsService.PaginationListOfRechargeDetailsResultL_PYu6_SAe EndGetRechargeDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFundsService/Withdraw", ReplyAction="http://tempuri.org/IFundsService/WithdrawResponse")]
        System.IAsyncResult BeginWithdraw(double sum, string safeWord, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.FundsService.OperateResult EndWithdraw(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFundsService/GetWithdrawDetails", ReplyAction="http://tempuri.org/IFundsService/GetWithdrawDetailsResponse")]
        System.IAsyncResult BeginGetWithdrawDetails(int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.FundsService.PaginationListOfWithdrawDetailsResultL_PYu6_SAe EndGetWithdrawDetails(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFundsServiceChannel : IWorld.Client.FundsService.IFundsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RechargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RechargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.FundsService.RechargeResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.FundsService.RechargeResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRechargeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRechargeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.FundsService.PaginationListOfRechargeDetailsResultL_PYu6_SAe Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.FundsService.PaginationListOfRechargeDetailsResultL_PYu6_SAe)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WithdrawCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WithdrawCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.FundsService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.FundsService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWithdrawDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWithdrawDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.FundsService.PaginationListOfWithdrawDetailsResultL_PYu6_SAe Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.FundsService.PaginationListOfWithdrawDetailsResultL_PYu6_SAe)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FundsServiceClient : System.ServiceModel.ClientBase<IWorld.Client.FundsService.IFundsService>, IWorld.Client.FundsService.IFundsService {
        
        private BeginOperationDelegate onBeginRechargeDelegate;
        
        private EndOperationDelegate onEndRechargeDelegate;
        
        private System.Threading.SendOrPostCallback onRechargeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRechargeDetailsDelegate;
        
        private EndOperationDelegate onEndGetRechargeDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetRechargeDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginWithdrawDelegate;
        
        private EndOperationDelegate onEndWithdrawDelegate;
        
        private System.Threading.SendOrPostCallback onWithdrawCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWithdrawDetailsDelegate;
        
        private EndOperationDelegate onEndGetWithdrawDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetWithdrawDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public FundsServiceClient() {
        }
        
        public FundsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FundsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FundsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FundsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<RechargeCompletedEventArgs> RechargeCompleted;
        
        public event System.EventHandler<GetRechargeDetailsCompletedEventArgs> GetRechargeDetailsCompleted;
        
        public event System.EventHandler<WithdrawCompletedEventArgs> WithdrawCompleted;
        
        public event System.EventHandler<GetWithdrawDetailsCompletedEventArgs> GetWithdrawDetailsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.FundsService.IFundsService.BeginRecharge(int userId, double sum, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecharge(userId, sum, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.FundsService.RechargeResult IWorld.Client.FundsService.IFundsService.EndRecharge(System.IAsyncResult result) {
            return base.Channel.EndRecharge(result);
        }
        
        private System.IAsyncResult OnBeginRecharge(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            double sum = ((double)(inValues[1]));
            string token = ((string)(inValues[2]));
            return ((IWorld.Client.FundsService.IFundsService)(this)).BeginRecharge(userId, sum, token, callback, asyncState);
        }
        
        private object[] OnEndRecharge(System.IAsyncResult result) {
            IWorld.Client.FundsService.RechargeResult retVal = ((IWorld.Client.FundsService.IFundsService)(this)).EndRecharge(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRechargeCompleted(object state) {
            if ((this.RechargeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RechargeCompleted(this, new RechargeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RechargeAsync(int userId, double sum, string token) {
            this.RechargeAsync(userId, sum, token, null);
        }
        
        public void RechargeAsync(int userId, double sum, string token, object userState) {
            if ((this.onBeginRechargeDelegate == null)) {
                this.onBeginRechargeDelegate = new BeginOperationDelegate(this.OnBeginRecharge);
            }
            if ((this.onEndRechargeDelegate == null)) {
                this.onEndRechargeDelegate = new EndOperationDelegate(this.OnEndRecharge);
            }
            if ((this.onRechargeCompletedDelegate == null)) {
                this.onRechargeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRechargeCompleted);
            }
            base.InvokeAsync(this.onBeginRechargeDelegate, new object[] {
                        userId,
                        sum,
                        token}, this.onEndRechargeDelegate, this.onRechargeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.FundsService.IFundsService.BeginGetRechargeDetails(int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRechargeDetails(page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.FundsService.PaginationListOfRechargeDetailsResultL_PYu6_SAe IWorld.Client.FundsService.IFundsService.EndGetRechargeDetails(System.IAsyncResult result) {
            return base.Channel.EndGetRechargeDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetRechargeDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int page = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Client.FundsService.IFundsService)(this)).BeginGetRechargeDetails(page, token, callback, asyncState);
        }
        
        private object[] OnEndGetRechargeDetails(System.IAsyncResult result) {
            IWorld.Client.FundsService.PaginationListOfRechargeDetailsResultL_PYu6_SAe retVal = ((IWorld.Client.FundsService.IFundsService)(this)).EndGetRechargeDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRechargeDetailsCompleted(object state) {
            if ((this.GetRechargeDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRechargeDetailsCompleted(this, new GetRechargeDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRechargeDetailsAsync(int page, string token) {
            this.GetRechargeDetailsAsync(page, token, null);
        }
        
        public void GetRechargeDetailsAsync(int page, string token, object userState) {
            if ((this.onBeginGetRechargeDetailsDelegate == null)) {
                this.onBeginGetRechargeDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetRechargeDetails);
            }
            if ((this.onEndGetRechargeDetailsDelegate == null)) {
                this.onEndGetRechargeDetailsDelegate = new EndOperationDelegate(this.OnEndGetRechargeDetails);
            }
            if ((this.onGetRechargeDetailsCompletedDelegate == null)) {
                this.onGetRechargeDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRechargeDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetRechargeDetailsDelegate, new object[] {
                        page,
                        token}, this.onEndGetRechargeDetailsDelegate, this.onGetRechargeDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.FundsService.IFundsService.BeginWithdraw(double sum, string safeWord, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWithdraw(sum, safeWord, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.FundsService.OperateResult IWorld.Client.FundsService.IFundsService.EndWithdraw(System.IAsyncResult result) {
            return base.Channel.EndWithdraw(result);
        }
        
        private System.IAsyncResult OnBeginWithdraw(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double sum = ((double)(inValues[0]));
            string safeWord = ((string)(inValues[1]));
            string token = ((string)(inValues[2]));
            return ((IWorld.Client.FundsService.IFundsService)(this)).BeginWithdraw(sum, safeWord, token, callback, asyncState);
        }
        
        private object[] OnEndWithdraw(System.IAsyncResult result) {
            IWorld.Client.FundsService.OperateResult retVal = ((IWorld.Client.FundsService.IFundsService)(this)).EndWithdraw(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWithdrawCompleted(object state) {
            if ((this.WithdrawCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WithdrawCompleted(this, new WithdrawCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WithdrawAsync(double sum, string safeWord, string token) {
            this.WithdrawAsync(sum, safeWord, token, null);
        }
        
        public void WithdrawAsync(double sum, string safeWord, string token, object userState) {
            if ((this.onBeginWithdrawDelegate == null)) {
                this.onBeginWithdrawDelegate = new BeginOperationDelegate(this.OnBeginWithdraw);
            }
            if ((this.onEndWithdrawDelegate == null)) {
                this.onEndWithdrawDelegate = new EndOperationDelegate(this.OnEndWithdraw);
            }
            if ((this.onWithdrawCompletedDelegate == null)) {
                this.onWithdrawCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWithdrawCompleted);
            }
            base.InvokeAsync(this.onBeginWithdrawDelegate, new object[] {
                        sum,
                        safeWord,
                        token}, this.onEndWithdrawDelegate, this.onWithdrawCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.FundsService.IFundsService.BeginGetWithdrawDetails(int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWithdrawDetails(page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.FundsService.PaginationListOfWithdrawDetailsResultL_PYu6_SAe IWorld.Client.FundsService.IFundsService.EndGetWithdrawDetails(System.IAsyncResult result) {
            return base.Channel.EndGetWithdrawDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetWithdrawDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int page = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Client.FundsService.IFundsService)(this)).BeginGetWithdrawDetails(page, token, callback, asyncState);
        }
        
        private object[] OnEndGetWithdrawDetails(System.IAsyncResult result) {
            IWorld.Client.FundsService.PaginationListOfWithdrawDetailsResultL_PYu6_SAe retVal = ((IWorld.Client.FundsService.IFundsService)(this)).EndGetWithdrawDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWithdrawDetailsCompleted(object state) {
            if ((this.GetWithdrawDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWithdrawDetailsCompleted(this, new GetWithdrawDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWithdrawDetailsAsync(int page, string token) {
            this.GetWithdrawDetailsAsync(page, token, null);
        }
        
        public void GetWithdrawDetailsAsync(int page, string token, object userState) {
            if ((this.onBeginGetWithdrawDetailsDelegate == null)) {
                this.onBeginGetWithdrawDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetWithdrawDetails);
            }
            if ((this.onEndGetWithdrawDetailsDelegate == null)) {
                this.onEndGetWithdrawDetailsDelegate = new EndOperationDelegate(this.OnEndGetWithdrawDetails);
            }
            if ((this.onGetWithdrawDetailsCompletedDelegate == null)) {
                this.onGetWithdrawDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWithdrawDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetWithdrawDetailsDelegate, new object[] {
                        page,
                        token}, this.onEndGetWithdrawDetailsDelegate, this.onGetWithdrawDetailsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IWorld.Client.FundsService.IFundsService CreateChannel() {
            return new FundsServiceClientChannel(this);
        }
        
        private class FundsServiceClientChannel : ChannelBase<IWorld.Client.FundsService.IFundsService>, IWorld.Client.FundsService.IFundsService {
            
            public FundsServiceClientChannel(System.ServiceModel.ClientBase<IWorld.Client.FundsService.IFundsService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginRecharge(int userId, double sum, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userId;
                _args[1] = sum;
                _args[2] = token;
                System.IAsyncResult _result = base.BeginInvoke("Recharge", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.FundsService.RechargeResult EndRecharge(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.FundsService.RechargeResult _result = ((IWorld.Client.FundsService.RechargeResult)(base.EndInvoke("Recharge", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRechargeDetails(int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = page;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetRechargeDetails", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.FundsService.PaginationListOfRechargeDetailsResultL_PYu6_SAe EndGetRechargeDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.FundsService.PaginationListOfRechargeDetailsResultL_PYu6_SAe _result = ((IWorld.Client.FundsService.PaginationListOfRechargeDetailsResultL_PYu6_SAe)(base.EndInvoke("GetRechargeDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWithdraw(double sum, string safeWord, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = sum;
                _args[1] = safeWord;
                _args[2] = token;
                System.IAsyncResult _result = base.BeginInvoke("Withdraw", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.FundsService.OperateResult EndWithdraw(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.FundsService.OperateResult _result = ((IWorld.Client.FundsService.OperateResult)(base.EndInvoke("Withdraw", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWithdrawDetails(int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = page;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetWithdrawDetails", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.FundsService.PaginationListOfWithdrawDetailsResultL_PYu6_SAe EndGetWithdrawDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.FundsService.PaginationListOfWithdrawDetailsResultL_PYu6_SAe _result = ((IWorld.Client.FundsService.PaginationListOfWithdrawDetailsResultL_PYu6_SAe)(base.EndInvoke("GetWithdrawDetails", _args, result)));
                return _result;
            }
        }
    }
}
