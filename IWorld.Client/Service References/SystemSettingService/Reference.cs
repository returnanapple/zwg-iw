//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18051
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace IWorld.Client.SystemSettingService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperateResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.SystemSettingService.BankAccountResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.SystemSettingService.WebSettingResult))]
    public partial class OperateResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BankAccountResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class BankAccountResult : IWorld.Client.SystemSettingService.OperateResult {
        
        private IWorld.Client.SystemSettingService.Bank BankField;
        
        private string CardField;
        
        private string HolderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.SystemSettingService.Bank Bank {
            get {
                return this.BankField;
            }
            set {
                if ((this.BankField.Equals(value) != true)) {
                    this.BankField = value;
                    this.RaisePropertyChanged("Bank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Holder {
            get {
                return this.HolderField;
            }
            set {
                if ((object.ReferenceEquals(this.HolderField, value) != true)) {
                    this.HolderField = value;
                    this.RaisePropertyChanged("Holder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebSettingResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class WebSettingResult : IWorld.Client.SystemSettingService.OperateResult {
        
        private string BanksField;
        
        private double BonusModeScaleField;
        
        private int ClosureSingleTimeField;
        
        private bool CollectionRunningField;
        
        private double ConversionRatesField;
        
        private string DescriptionField;
        
        private int HeartbeatIntervalField;
        
        private string KeywordsField;
        
        private int LineForProhibitBettingField;
        
        private int MaximumBetsNumberField;
        
        private int MaximumBonusModeField;
        
        private int MaximumPayoutField;
        
        private double MaximumRechargeAmountField;
        
        private double MaximumReturnPointsField;
        
        private double MaximumWithdrawalAmountField;
        
        private int MinimumBonusModeField;
        
        private double MinimumRechargeAmountField;
        
        private double MinimumReturnPointsField;
        
        private double MinimumWithdrawalAmountField;
        
        private string NameField;
        
        private int PageSizeForAdminField;
        
        private int PageSizeForClientField;
        
        private int PayoutBaseField;
        
        private int ReferenceBonusModeField;
        
        private double ReturnPointsDifferenceField;
        
        private double ReturnPointsScaleField;
        
        private string RootpathField;
        
        private int SpreadKeepTimeField;
        
        private int SubordinateField;
        
        private int TimeOfNoticeShowField;
        
        private string TitleField;
        
        private double UnitPriceField;
        
        private int UserInTimeField;
        
        private int VirtualQueuingField;
        
        private string WithdrawalInstructionsField;
        
        private int WithdrawalsField;
        
        private string WorkingHour_BeginField;
        
        private string WorkingHour_EndField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Banks {
            get {
                return this.BanksField;
            }
            set {
                if ((object.ReferenceEquals(this.BanksField, value) != true)) {
                    this.BanksField = value;
                    this.RaisePropertyChanged("Banks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BonusModeScale {
            get {
                return this.BonusModeScaleField;
            }
            set {
                if ((this.BonusModeScaleField.Equals(value) != true)) {
                    this.BonusModeScaleField = value;
                    this.RaisePropertyChanged("BonusModeScale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClosureSingleTime {
            get {
                return this.ClosureSingleTimeField;
            }
            set {
                if ((this.ClosureSingleTimeField.Equals(value) != true)) {
                    this.ClosureSingleTimeField = value;
                    this.RaisePropertyChanged("ClosureSingleTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CollectionRunning {
            get {
                return this.CollectionRunningField;
            }
            set {
                if ((this.CollectionRunningField.Equals(value) != true)) {
                    this.CollectionRunningField = value;
                    this.RaisePropertyChanged("CollectionRunning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ConversionRates {
            get {
                return this.ConversionRatesField;
            }
            set {
                if ((this.ConversionRatesField.Equals(value) != true)) {
                    this.ConversionRatesField = value;
                    this.RaisePropertyChanged("ConversionRates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeartbeatInterval {
            get {
                return this.HeartbeatIntervalField;
            }
            set {
                if ((this.HeartbeatIntervalField.Equals(value) != true)) {
                    this.HeartbeatIntervalField = value;
                    this.RaisePropertyChanged("HeartbeatInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keywords {
            get {
                return this.KeywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordsField, value) != true)) {
                    this.KeywordsField = value;
                    this.RaisePropertyChanged("Keywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LineForProhibitBetting {
            get {
                return this.LineForProhibitBettingField;
            }
            set {
                if ((this.LineForProhibitBettingField.Equals(value) != true)) {
                    this.LineForProhibitBettingField = value;
                    this.RaisePropertyChanged("LineForProhibitBetting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumBetsNumber {
            get {
                return this.MaximumBetsNumberField;
            }
            set {
                if ((this.MaximumBetsNumberField.Equals(value) != true)) {
                    this.MaximumBetsNumberField = value;
                    this.RaisePropertyChanged("MaximumBetsNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumBonusMode {
            get {
                return this.MaximumBonusModeField;
            }
            set {
                if ((this.MaximumBonusModeField.Equals(value) != true)) {
                    this.MaximumBonusModeField = value;
                    this.RaisePropertyChanged("MaximumBonusMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumPayout {
            get {
                return this.MaximumPayoutField;
            }
            set {
                if ((this.MaximumPayoutField.Equals(value) != true)) {
                    this.MaximumPayoutField = value;
                    this.RaisePropertyChanged("MaximumPayout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumRechargeAmount {
            get {
                return this.MaximumRechargeAmountField;
            }
            set {
                if ((this.MaximumRechargeAmountField.Equals(value) != true)) {
                    this.MaximumRechargeAmountField = value;
                    this.RaisePropertyChanged("MaximumRechargeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumReturnPoints {
            get {
                return this.MaximumReturnPointsField;
            }
            set {
                if ((this.MaximumReturnPointsField.Equals(value) != true)) {
                    this.MaximumReturnPointsField = value;
                    this.RaisePropertyChanged("MaximumReturnPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumWithdrawalAmount {
            get {
                return this.MaximumWithdrawalAmountField;
            }
            set {
                if ((this.MaximumWithdrawalAmountField.Equals(value) != true)) {
                    this.MaximumWithdrawalAmountField = value;
                    this.RaisePropertyChanged("MaximumWithdrawalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinimumBonusMode {
            get {
                return this.MinimumBonusModeField;
            }
            set {
                if ((this.MinimumBonusModeField.Equals(value) != true)) {
                    this.MinimumBonusModeField = value;
                    this.RaisePropertyChanged("MinimumBonusMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumRechargeAmount {
            get {
                return this.MinimumRechargeAmountField;
            }
            set {
                if ((this.MinimumRechargeAmountField.Equals(value) != true)) {
                    this.MinimumRechargeAmountField = value;
                    this.RaisePropertyChanged("MinimumRechargeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumReturnPoints {
            get {
                return this.MinimumReturnPointsField;
            }
            set {
                if ((this.MinimumReturnPointsField.Equals(value) != true)) {
                    this.MinimumReturnPointsField = value;
                    this.RaisePropertyChanged("MinimumReturnPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumWithdrawalAmount {
            get {
                return this.MinimumWithdrawalAmountField;
            }
            set {
                if ((this.MinimumWithdrawalAmountField.Equals(value) != true)) {
                    this.MinimumWithdrawalAmountField = value;
                    this.RaisePropertyChanged("MinimumWithdrawalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSizeForAdmin {
            get {
                return this.PageSizeForAdminField;
            }
            set {
                if ((this.PageSizeForAdminField.Equals(value) != true)) {
                    this.PageSizeForAdminField = value;
                    this.RaisePropertyChanged("PageSizeForAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSizeForClient {
            get {
                return this.PageSizeForClientField;
            }
            set {
                if ((this.PageSizeForClientField.Equals(value) != true)) {
                    this.PageSizeForClientField = value;
                    this.RaisePropertyChanged("PageSizeForClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayoutBase {
            get {
                return this.PayoutBaseField;
            }
            set {
                if ((this.PayoutBaseField.Equals(value) != true)) {
                    this.PayoutBaseField = value;
                    this.RaisePropertyChanged("PayoutBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferenceBonusMode {
            get {
                return this.ReferenceBonusModeField;
            }
            set {
                if ((this.ReferenceBonusModeField.Equals(value) != true)) {
                    this.ReferenceBonusModeField = value;
                    this.RaisePropertyChanged("ReferenceBonusMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ReturnPointsDifference {
            get {
                return this.ReturnPointsDifferenceField;
            }
            set {
                if ((this.ReturnPointsDifferenceField.Equals(value) != true)) {
                    this.ReturnPointsDifferenceField = value;
                    this.RaisePropertyChanged("ReturnPointsDifference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ReturnPointsScale {
            get {
                return this.ReturnPointsScaleField;
            }
            set {
                if ((this.ReturnPointsScaleField.Equals(value) != true)) {
                    this.ReturnPointsScaleField = value;
                    this.RaisePropertyChanged("ReturnPointsScale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rootpath {
            get {
                return this.RootpathField;
            }
            set {
                if ((object.ReferenceEquals(this.RootpathField, value) != true)) {
                    this.RootpathField = value;
                    this.RaisePropertyChanged("Rootpath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpreadKeepTime {
            get {
                return this.SpreadKeepTimeField;
            }
            set {
                if ((this.SpreadKeepTimeField.Equals(value) != true)) {
                    this.SpreadKeepTimeField = value;
                    this.RaisePropertyChanged("SpreadKeepTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Subordinate {
            get {
                return this.SubordinateField;
            }
            set {
                if ((this.SubordinateField.Equals(value) != true)) {
                    this.SubordinateField = value;
                    this.RaisePropertyChanged("Subordinate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeOfNoticeShow {
            get {
                return this.TimeOfNoticeShowField;
            }
            set {
                if ((this.TimeOfNoticeShowField.Equals(value) != true)) {
                    this.TimeOfNoticeShowField = value;
                    this.RaisePropertyChanged("TimeOfNoticeShow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserInTime {
            get {
                return this.UserInTimeField;
            }
            set {
                if ((this.UserInTimeField.Equals(value) != true)) {
                    this.UserInTimeField = value;
                    this.RaisePropertyChanged("UserInTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VirtualQueuing {
            get {
                return this.VirtualQueuingField;
            }
            set {
                if ((this.VirtualQueuingField.Equals(value) != true)) {
                    this.VirtualQueuingField = value;
                    this.RaisePropertyChanged("VirtualQueuing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WithdrawalInstructions {
            get {
                return this.WithdrawalInstructionsField;
            }
            set {
                if ((object.ReferenceEquals(this.WithdrawalInstructionsField, value) != true)) {
                    this.WithdrawalInstructionsField = value;
                    this.RaisePropertyChanged("WithdrawalInstructions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Withdrawals {
            get {
                return this.WithdrawalsField;
            }
            set {
                if ((this.WithdrawalsField.Equals(value) != true)) {
                    this.WithdrawalsField = value;
                    this.RaisePropertyChanged("Withdrawals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkingHour_Begin {
            get {
                return this.WorkingHour_BeginField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkingHour_BeginField, value) != true)) {
                    this.WorkingHour_BeginField = value;
                    this.RaisePropertyChanged("WorkingHour_Begin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkingHour_End {
            get {
                return this.WorkingHour_EndField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkingHour_EndField, value) != true)) {
                    this.WorkingHour_EndField = value;
                    this.RaisePropertyChanged("WorkingHour_End");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bank", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Model")]
    public enum Bank : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        无 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国工商银行 = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国农业银行 = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国银行 = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国建设银行 = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        交通银行 = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        财付通 = 201,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SystemSettingService.ISystemSettingService")]
    public interface ISystemSettingService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/GetWebSetting", ReplyAction="http://tempuri.org/ISystemSettingService/GetWebSettingResponse")]
        System.IAsyncResult BeginGetWebSetting(System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.SystemSettingService.WebSettingResult EndGetWebSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/GetBankAccount", ReplyAction="http://tempuri.org/ISystemSettingService/GetBankAccountResponse")]
        System.IAsyncResult BeginGetBankAccount(System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.SystemSettingService.BankAccountResult EndGetBankAccount(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISystemSettingServiceChannel : IWorld.Client.SystemSettingService.ISystemSettingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWebSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWebSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.SystemSettingService.WebSettingResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.SystemSettingService.WebSettingResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.SystemSettingService.BankAccountResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.SystemSettingService.BankAccountResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SystemSettingServiceClient : System.ServiceModel.ClientBase<IWorld.Client.SystemSettingService.ISystemSettingService>, IWorld.Client.SystemSettingService.ISystemSettingService {
        
        private BeginOperationDelegate onBeginGetWebSettingDelegate;
        
        private EndOperationDelegate onEndGetWebSettingDelegate;
        
        private System.Threading.SendOrPostCallback onGetWebSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBankAccountDelegate;
        
        private EndOperationDelegate onEndGetBankAccountDelegate;
        
        private System.Threading.SendOrPostCallback onGetBankAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SystemSettingServiceClient() {
        }
        
        public SystemSettingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SystemSettingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystemSettingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystemSettingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetWebSettingCompletedEventArgs> GetWebSettingCompleted;
        
        public event System.EventHandler<GetBankAccountCompletedEventArgs> GetBankAccountCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.SystemSettingService.ISystemSettingService.BeginGetWebSetting(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWebSetting(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.SystemSettingService.WebSettingResult IWorld.Client.SystemSettingService.ISystemSettingService.EndGetWebSetting(System.IAsyncResult result) {
            return base.Channel.EndGetWebSetting(result);
        }
        
        private System.IAsyncResult OnBeginGetWebSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((IWorld.Client.SystemSettingService.ISystemSettingService)(this)).BeginGetWebSetting(callback, asyncState);
        }
        
        private object[] OnEndGetWebSetting(System.IAsyncResult result) {
            IWorld.Client.SystemSettingService.WebSettingResult retVal = ((IWorld.Client.SystemSettingService.ISystemSettingService)(this)).EndGetWebSetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWebSettingCompleted(object state) {
            if ((this.GetWebSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWebSettingCompleted(this, new GetWebSettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWebSettingAsync() {
            this.GetWebSettingAsync(null);
        }
        
        public void GetWebSettingAsync(object userState) {
            if ((this.onBeginGetWebSettingDelegate == null)) {
                this.onBeginGetWebSettingDelegate = new BeginOperationDelegate(this.OnBeginGetWebSetting);
            }
            if ((this.onEndGetWebSettingDelegate == null)) {
                this.onEndGetWebSettingDelegate = new EndOperationDelegate(this.OnEndGetWebSetting);
            }
            if ((this.onGetWebSettingCompletedDelegate == null)) {
                this.onGetWebSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWebSettingCompleted);
            }
            base.InvokeAsync(this.onBeginGetWebSettingDelegate, null, this.onEndGetWebSettingDelegate, this.onGetWebSettingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.SystemSettingService.ISystemSettingService.BeginGetBankAccount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBankAccount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.SystemSettingService.BankAccountResult IWorld.Client.SystemSettingService.ISystemSettingService.EndGetBankAccount(System.IAsyncResult result) {
            return base.Channel.EndGetBankAccount(result);
        }
        
        private System.IAsyncResult OnBeginGetBankAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((IWorld.Client.SystemSettingService.ISystemSettingService)(this)).BeginGetBankAccount(callback, asyncState);
        }
        
        private object[] OnEndGetBankAccount(System.IAsyncResult result) {
            IWorld.Client.SystemSettingService.BankAccountResult retVal = ((IWorld.Client.SystemSettingService.ISystemSettingService)(this)).EndGetBankAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBankAccountCompleted(object state) {
            if ((this.GetBankAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBankAccountCompleted(this, new GetBankAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBankAccountAsync() {
            this.GetBankAccountAsync(null);
        }
        
        public void GetBankAccountAsync(object userState) {
            if ((this.onBeginGetBankAccountDelegate == null)) {
                this.onBeginGetBankAccountDelegate = new BeginOperationDelegate(this.OnBeginGetBankAccount);
            }
            if ((this.onEndGetBankAccountDelegate == null)) {
                this.onEndGetBankAccountDelegate = new EndOperationDelegate(this.OnEndGetBankAccount);
            }
            if ((this.onGetBankAccountCompletedDelegate == null)) {
                this.onGetBankAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBankAccountCompleted);
            }
            base.InvokeAsync(this.onBeginGetBankAccountDelegate, null, this.onEndGetBankAccountDelegate, this.onGetBankAccountCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IWorld.Client.SystemSettingService.ISystemSettingService CreateChannel() {
            return new SystemSettingServiceClientChannel(this);
        }
        
        private class SystemSettingServiceClientChannel : ChannelBase<IWorld.Client.SystemSettingService.ISystemSettingService>, IWorld.Client.SystemSettingService.ISystemSettingService {
            
            public SystemSettingServiceClientChannel(System.ServiceModel.ClientBase<IWorld.Client.SystemSettingService.ISystemSettingService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetWebSetting(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetWebSetting", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.SystemSettingService.WebSettingResult EndGetWebSetting(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.SystemSettingService.WebSettingResult _result = ((IWorld.Client.SystemSettingService.WebSettingResult)(base.EndInvoke("GetWebSetting", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBankAccount(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetBankAccount", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.SystemSettingService.BankAccountResult EndGetBankAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.SystemSettingService.BankAccountResult _result = ((IWorld.Client.SystemSettingService.BankAccountResult)(base.EndInvoke("GetBankAccount", _args, result)));
                return _result;
            }
        }
    }
}
