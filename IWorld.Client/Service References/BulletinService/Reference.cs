//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18051
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace IWorld.Client.BulletinService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperateResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.BulletinService.NormalListOfBulletinResultL_PYu6_SAe))]
    public partial class OperateResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NormalListOfBulletinResultL_PYu6_SAe", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class NormalListOfBulletinResultL_PYu6_SAe : IWorld.Client.BulletinService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Client.BulletinService.BulletinResult> ContentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Client.BulletinService.BulletinResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BulletinResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class BulletinResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int BulletinIdField;
        
        private string ContextField;
        
        private System.DateTime TimeField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BulletinId {
            get {
                return this.BulletinIdField;
            }
            set {
                if ((this.BulletinIdField.Equals(value) != true)) {
                    this.BulletinIdField = value;
                    this.RaisePropertyChanged("BulletinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoticeResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class NoticeResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private IWorld.Client.BulletinService.BettingDetailsResult BettingDetailsField;
        
        private string ContextField;
        
        private int NoticeIdField;
        
        private IWorld.Client.BulletinService.RechargeDetailsResult RechargeDetailsField;
        
        private IWorld.Client.BulletinService.NoticeType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.BulletinService.BettingDetailsResult BettingDetails {
            get {
                return this.BettingDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.BettingDetailsField, value) != true)) {
                    this.BettingDetailsField = value;
                    this.RaisePropertyChanged("BettingDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoticeId {
            get {
                return this.NoticeIdField;
            }
            set {
                if ((this.NoticeIdField.Equals(value) != true)) {
                    this.NoticeIdField = value;
                    this.RaisePropertyChanged("NoticeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.BulletinService.RechargeDetailsResult RechargeDetails {
            get {
                return this.RechargeDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.RechargeDetailsField, value) != true)) {
                    this.RechargeDetailsField = value;
                    this.RaisePropertyChanged("RechargeDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.BulletinService.NoticeType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BettingDetailsResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class BettingDetailsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int BettingIdField;
        
        private double BonusField;
        
        private string HowToPlayField;
        
        private string LotteryValuesField;
        
        private double MultipleField;
        
        private string OwnerField;
        
        private double PayField;
        
        private string PhasesField;
        
        private string PlayTagField;
        
        private string RetutnPointsField;
        
        private IWorld.Client.BulletinService.BettingStatus StatusField;
        
        private int SumField;
        
        private string TicketField;
        
        private System.DateTime TimeField;
        
        private string ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BettingId {
            get {
                return this.BettingIdField;
            }
            set {
                if ((this.BettingIdField.Equals(value) != true)) {
                    this.BettingIdField = value;
                    this.RaisePropertyChanged("BettingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Bonus {
            get {
                return this.BonusField;
            }
            set {
                if ((this.BonusField.Equals(value) != true)) {
                    this.BonusField = value;
                    this.RaisePropertyChanged("Bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HowToPlay {
            get {
                return this.HowToPlayField;
            }
            set {
                if ((object.ReferenceEquals(this.HowToPlayField, value) != true)) {
                    this.HowToPlayField = value;
                    this.RaisePropertyChanged("HowToPlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotteryValues {
            get {
                return this.LotteryValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.LotteryValuesField, value) != true)) {
                    this.LotteryValuesField = value;
                    this.RaisePropertyChanged("LotteryValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Multiple {
            get {
                return this.MultipleField;
            }
            set {
                if ((this.MultipleField.Equals(value) != true)) {
                    this.MultipleField = value;
                    this.RaisePropertyChanged("Multiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Pay {
            get {
                return this.PayField;
            }
            set {
                if ((this.PayField.Equals(value) != true)) {
                    this.PayField = value;
                    this.RaisePropertyChanged("Pay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phases {
            get {
                return this.PhasesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhasesField, value) != true)) {
                    this.PhasesField = value;
                    this.RaisePropertyChanged("Phases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayTag {
            get {
                return this.PlayTagField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayTagField, value) != true)) {
                    this.PlayTagField = value;
                    this.RaisePropertyChanged("PlayTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RetutnPoints {
            get {
                return this.RetutnPointsField;
            }
            set {
                if ((object.ReferenceEquals(this.RetutnPointsField, value) != true)) {
                    this.RetutnPointsField = value;
                    this.RaisePropertyChanged("RetutnPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.BulletinService.BettingStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sum {
            get {
                return this.SumField;
            }
            set {
                if ((this.SumField.Equals(value) != true)) {
                    this.SumField = value;
                    this.RaisePropertyChanged("Sum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticket {
            get {
                return this.TicketField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketField, value) != true)) {
                    this.TicketField = value;
                    this.RaisePropertyChanged("Ticket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RechargeDetailsResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class RechargeDetailsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeField;
        
        private string FromField;
        
        private int RechargeIdField;
        
        private string RemarkField;
        
        private IWorld.Client.BulletinService.RechargeStatus StatusField;
        
        private double SumField;
        
        private System.DateTime TimeField;
        
        private string ToField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RechargeId {
            get {
                return this.RechargeIdField;
            }
            set {
                if ((this.RechargeIdField.Equals(value) != true)) {
                    this.RechargeIdField = value;
                    this.RaisePropertyChanged("RechargeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.BulletinService.RechargeStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Sum {
            get {
                return this.SumField;
            }
            set {
                if ((this.SumField.Equals(value) != true)) {
                    this.SumField = value;
                    this.RaisePropertyChanged("Sum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string To {
            get {
                return this.ToField;
            }
            set {
                if ((object.ReferenceEquals(this.ToField, value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoticeType", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Model")]
    public enum NoticeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        开奖提醒 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        充值反馈 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        提现反馈 = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BettingStatus", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Model")]
    public enum BettingStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        用户撤单 = -2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        未中奖 = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        等待开奖 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        即将开奖 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中奖 = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RechargeStatus", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Model")]
    public enum RechargeStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        失败 = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        等待支付 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        充值成功 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        用户已经支付 = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BulletinService.IBulletinService")]
    public interface IBulletinService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBulletinService/GetBulletins", ReplyAction="http://tempuri.org/IBulletinService/GetBulletinsResponse")]
        System.IAsyncResult BeginGetBulletins(System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.BulletinService.NormalListOfBulletinResultL_PYu6_SAe EndGetBulletins(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBulletinService/GetNotice", ReplyAction="http://tempuri.org/IBulletinService/GetNoticeResponse")]
        System.IAsyncResult BeginGetNotice(string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.BulletinService.NoticeResult EndGetNotice(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBulletinServiceChannel : IWorld.Client.BulletinService.IBulletinService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBulletinsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBulletinsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.BulletinService.NormalListOfBulletinResultL_PYu6_SAe Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.BulletinService.NormalListOfBulletinResultL_PYu6_SAe)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNoticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNoticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.BulletinService.NoticeResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.BulletinService.NoticeResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BulletinServiceClient : System.ServiceModel.ClientBase<IWorld.Client.BulletinService.IBulletinService>, IWorld.Client.BulletinService.IBulletinService {
        
        private BeginOperationDelegate onBeginGetBulletinsDelegate;
        
        private EndOperationDelegate onEndGetBulletinsDelegate;
        
        private System.Threading.SendOrPostCallback onGetBulletinsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNoticeDelegate;
        
        private EndOperationDelegate onEndGetNoticeDelegate;
        
        private System.Threading.SendOrPostCallback onGetNoticeCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public BulletinServiceClient() {
        }
        
        public BulletinServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BulletinServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BulletinServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BulletinServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetBulletinsCompletedEventArgs> GetBulletinsCompleted;
        
        public event System.EventHandler<GetNoticeCompletedEventArgs> GetNoticeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.BulletinService.IBulletinService.BeginGetBulletins(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBulletins(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.BulletinService.NormalListOfBulletinResultL_PYu6_SAe IWorld.Client.BulletinService.IBulletinService.EndGetBulletins(System.IAsyncResult result) {
            return base.Channel.EndGetBulletins(result);
        }
        
        private System.IAsyncResult OnBeginGetBulletins(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((IWorld.Client.BulletinService.IBulletinService)(this)).BeginGetBulletins(callback, asyncState);
        }
        
        private object[] OnEndGetBulletins(System.IAsyncResult result) {
            IWorld.Client.BulletinService.NormalListOfBulletinResultL_PYu6_SAe retVal = ((IWorld.Client.BulletinService.IBulletinService)(this)).EndGetBulletins(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBulletinsCompleted(object state) {
            if ((this.GetBulletinsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBulletinsCompleted(this, new GetBulletinsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBulletinsAsync() {
            this.GetBulletinsAsync(null);
        }
        
        public void GetBulletinsAsync(object userState) {
            if ((this.onBeginGetBulletinsDelegate == null)) {
                this.onBeginGetBulletinsDelegate = new BeginOperationDelegate(this.OnBeginGetBulletins);
            }
            if ((this.onEndGetBulletinsDelegate == null)) {
                this.onEndGetBulletinsDelegate = new EndOperationDelegate(this.OnEndGetBulletins);
            }
            if ((this.onGetBulletinsCompletedDelegate == null)) {
                this.onGetBulletinsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBulletinsCompleted);
            }
            base.InvokeAsync(this.onBeginGetBulletinsDelegate, null, this.onEndGetBulletinsDelegate, this.onGetBulletinsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.BulletinService.IBulletinService.BeginGetNotice(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNotice(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.BulletinService.NoticeResult IWorld.Client.BulletinService.IBulletinService.EndGetNotice(System.IAsyncResult result) {
            return base.Channel.EndGetNotice(result);
        }
        
        private System.IAsyncResult OnBeginGetNotice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((IWorld.Client.BulletinService.IBulletinService)(this)).BeginGetNotice(token, callback, asyncState);
        }
        
        private object[] OnEndGetNotice(System.IAsyncResult result) {
            IWorld.Client.BulletinService.NoticeResult retVal = ((IWorld.Client.BulletinService.IBulletinService)(this)).EndGetNotice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNoticeCompleted(object state) {
            if ((this.GetNoticeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNoticeCompleted(this, new GetNoticeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNoticeAsync(string token) {
            this.GetNoticeAsync(token, null);
        }
        
        public void GetNoticeAsync(string token, object userState) {
            if ((this.onBeginGetNoticeDelegate == null)) {
                this.onBeginGetNoticeDelegate = new BeginOperationDelegate(this.OnBeginGetNotice);
            }
            if ((this.onEndGetNoticeDelegate == null)) {
                this.onEndGetNoticeDelegate = new EndOperationDelegate(this.OnEndGetNotice);
            }
            if ((this.onGetNoticeCompletedDelegate == null)) {
                this.onGetNoticeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNoticeCompleted);
            }
            base.InvokeAsync(this.onBeginGetNoticeDelegate, new object[] {
                        token}, this.onEndGetNoticeDelegate, this.onGetNoticeCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IWorld.Client.BulletinService.IBulletinService CreateChannel() {
            return new BulletinServiceClientChannel(this);
        }
        
        private class BulletinServiceClientChannel : ChannelBase<IWorld.Client.BulletinService.IBulletinService>, IWorld.Client.BulletinService.IBulletinService {
            
            public BulletinServiceClientChannel(System.ServiceModel.ClientBase<IWorld.Client.BulletinService.IBulletinService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetBulletins(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetBulletins", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.BulletinService.NormalListOfBulletinResultL_PYu6_SAe EndGetBulletins(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.BulletinService.NormalListOfBulletinResultL_PYu6_SAe _result = ((IWorld.Client.BulletinService.NormalListOfBulletinResultL_PYu6_SAe)(base.EndInvoke("GetBulletins", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNotice(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetNotice", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.BulletinService.NoticeResult EndGetNotice(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.BulletinService.NoticeResult _result = ((IWorld.Client.BulletinService.NoticeResult)(base.EndInvoke("GetNotice", _args, result)));
                return _result;
            }
        }
    }
}
