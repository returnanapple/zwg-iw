//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18051
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace IWorld.Client.UsersService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperateResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.UsersService.UserInfoResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.UsersService.PaginationListOfBasicUserInfoResultL_PYu6_SAe))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.UsersService.CreateUserResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Client.UsersService.LoginResult))]
    public partial class OperateResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfoResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class UserInfoResult : IWorld.Client.UsersService.OperateResult {
        
        private IWorld.Client.UsersService.Bank BankField;
        
        private bool BindingCardField;
        
        private bool BindingEmailField;
        
        private string CardField;
        
        private double ConsumptionField;
        
        private string EmailField;
        
        private IWorld.Client.UsersService.UserGroupResult GroupField;
        
        private string HolderField;
        
        private double IntegralField;
        
        private bool IsAgentsField;
        
        private string LastLoginIpField;
        
        private System.DateTime LastLoginTimeField;
        
        private double MoneyField;
        
        private double MoneyBeFrozenField;
        
        private double NormalReturnPointsField;
        
        private int QuotaField;
        
        private IWorld.Client.UsersService.UserStatus StatusField;
        
        private double UncertainReturnPointsField;
        
        private int UserIdField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.UsersService.Bank Bank {
            get {
                return this.BankField;
            }
            set {
                if ((this.BankField.Equals(value) != true)) {
                    this.BankField = value;
                    this.RaisePropertyChanged("Bank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BindingCard {
            get {
                return this.BindingCardField;
            }
            set {
                if ((this.BindingCardField.Equals(value) != true)) {
                    this.BindingCardField = value;
                    this.RaisePropertyChanged("BindingCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BindingEmail {
            get {
                return this.BindingEmailField;
            }
            set {
                if ((this.BindingEmailField.Equals(value) != true)) {
                    this.BindingEmailField = value;
                    this.RaisePropertyChanged("BindingEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Consumption {
            get {
                return this.ConsumptionField;
            }
            set {
                if ((this.ConsumptionField.Equals(value) != true)) {
                    this.ConsumptionField = value;
                    this.RaisePropertyChanged("Consumption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.UsersService.UserGroupResult Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Holder {
            get {
                return this.HolderField;
            }
            set {
                if ((object.ReferenceEquals(this.HolderField, value) != true)) {
                    this.HolderField = value;
                    this.RaisePropertyChanged("Holder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Integral {
            get {
                return this.IntegralField;
            }
            set {
                if ((this.IntegralField.Equals(value) != true)) {
                    this.IntegralField = value;
                    this.RaisePropertyChanged("Integral");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAgents {
            get {
                return this.IsAgentsField;
            }
            set {
                if ((this.IsAgentsField.Equals(value) != true)) {
                    this.IsAgentsField = value;
                    this.RaisePropertyChanged("IsAgents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastLoginIp {
            get {
                return this.LastLoginIpField;
            }
            set {
                if ((object.ReferenceEquals(this.LastLoginIpField, value) != true)) {
                    this.LastLoginIpField = value;
                    this.RaisePropertyChanged("LastLoginIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastLoginTime {
            get {
                return this.LastLoginTimeField;
            }
            set {
                if ((this.LastLoginTimeField.Equals(value) != true)) {
                    this.LastLoginTimeField = value;
                    this.RaisePropertyChanged("LastLoginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Money {
            get {
                return this.MoneyField;
            }
            set {
                if ((this.MoneyField.Equals(value) != true)) {
                    this.MoneyField = value;
                    this.RaisePropertyChanged("Money");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MoneyBeFrozen {
            get {
                return this.MoneyBeFrozenField;
            }
            set {
                if ((this.MoneyBeFrozenField.Equals(value) != true)) {
                    this.MoneyBeFrozenField = value;
                    this.RaisePropertyChanged("MoneyBeFrozen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NormalReturnPoints {
            get {
                return this.NormalReturnPointsField;
            }
            set {
                if ((this.NormalReturnPointsField.Equals(value) != true)) {
                    this.NormalReturnPointsField = value;
                    this.RaisePropertyChanged("NormalReturnPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quota {
            get {
                return this.QuotaField;
            }
            set {
                if ((this.QuotaField.Equals(value) != true)) {
                    this.QuotaField = value;
                    this.RaisePropertyChanged("Quota");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.UsersService.UserStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UncertainReturnPoints {
            get {
                return this.UncertainReturnPointsField;
            }
            set {
                if ((this.UncertainReturnPointsField.Equals(value) != true)) {
                    this.UncertainReturnPointsField = value;
                    this.RaisePropertyChanged("UncertainReturnPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfBasicUserInfoResultL_PYu6_SAe", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class PaginationListOfBasicUserInfoResultL_PYu6_SAe : IWorld.Client.UsersService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Client.UsersService.BasicUserInfoResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Client.UsersService.BasicUserInfoResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateUserResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class CreateUserResult : IWorld.Client.UsersService.OperateResult {
        
        private string PasswordField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class LoginResult : IWorld.Client.UsersService.OperateResult {
        
        private string TokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserGroupResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class UserGroupResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ColorOfNameField;
        
        private int GradeField;
        
        private double MaximumRechargeAmountField;
        
        private double MaximumWithdrawalAmountField;
        
        private double MinimumRechargeAmountField;
        
        private double MinimumWithdrawalAmountField;
        
        private string NameField;
        
        private int WithdrawalsField;
        
        private bool WithdrawalsAtAnyTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorOfName {
            get {
                return this.ColorOfNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorOfNameField, value) != true)) {
                    this.ColorOfNameField = value;
                    this.RaisePropertyChanged("ColorOfName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((this.GradeField.Equals(value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumRechargeAmount {
            get {
                return this.MaximumRechargeAmountField;
            }
            set {
                if ((this.MaximumRechargeAmountField.Equals(value) != true)) {
                    this.MaximumRechargeAmountField = value;
                    this.RaisePropertyChanged("MaximumRechargeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumWithdrawalAmount {
            get {
                return this.MaximumWithdrawalAmountField;
            }
            set {
                if ((this.MaximumWithdrawalAmountField.Equals(value) != true)) {
                    this.MaximumWithdrawalAmountField = value;
                    this.RaisePropertyChanged("MaximumWithdrawalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumRechargeAmount {
            get {
                return this.MinimumRechargeAmountField;
            }
            set {
                if ((this.MinimumRechargeAmountField.Equals(value) != true)) {
                    this.MinimumRechargeAmountField = value;
                    this.RaisePropertyChanged("MinimumRechargeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumWithdrawalAmount {
            get {
                return this.MinimumWithdrawalAmountField;
            }
            set {
                if ((this.MinimumWithdrawalAmountField.Equals(value) != true)) {
                    this.MinimumWithdrawalAmountField = value;
                    this.RaisePropertyChanged("MinimumWithdrawalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Withdrawals {
            get {
                return this.WithdrawalsField;
            }
            set {
                if ((this.WithdrawalsField.Equals(value) != true)) {
                    this.WithdrawalsField = value;
                    this.RaisePropertyChanged("Withdrawals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WithdrawalsAtAnyTime {
            get {
                return this.WithdrawalsAtAnyTimeField;
            }
            set {
                if ((this.WithdrawalsAtAnyTimeField.Equals(value) != true)) {
                    this.WithdrawalsAtAnyTimeField = value;
                    this.RaisePropertyChanged("WithdrawalsAtAnyTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bank", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Model")]
    public enum Bank : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        无 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国工商银行 = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国农业银行 = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国银行 = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国建设银行 = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        交通银行 = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        招商银行 = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        民生银行 = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        邮政存储 = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        财付通 = 201,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserStatus", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Model")]
    public enum UserStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        禁止访问 = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        未激活 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        正常 = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicUserInfoResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class BasicUserInfoResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double ConsumptionField;
        
        private string GroupField;
        
        private string LastLoginIpField;
        
        private System.DateTime LastLoginTimeField;
        
        private double MoneyField;
        
        private double NormalReturnPointsField;
        
        private IWorld.Client.UsersService.UserStatus StatusField;
        
        private double UncertainReturnPointsField;
        
        private int UserIdField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Consumption {
            get {
                return this.ConsumptionField;
            }
            set {
                if ((this.ConsumptionField.Equals(value) != true)) {
                    this.ConsumptionField = value;
                    this.RaisePropertyChanged("Consumption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastLoginIp {
            get {
                return this.LastLoginIpField;
            }
            set {
                if ((object.ReferenceEquals(this.LastLoginIpField, value) != true)) {
                    this.LastLoginIpField = value;
                    this.RaisePropertyChanged("LastLoginIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastLoginTime {
            get {
                return this.LastLoginTimeField;
            }
            set {
                if ((this.LastLoginTimeField.Equals(value) != true)) {
                    this.LastLoginTimeField = value;
                    this.RaisePropertyChanged("LastLoginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Money {
            get {
                return this.MoneyField;
            }
            set {
                if ((this.MoneyField.Equals(value) != true)) {
                    this.MoneyField = value;
                    this.RaisePropertyChanged("Money");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NormalReturnPoints {
            get {
                return this.NormalReturnPointsField;
            }
            set {
                if ((this.NormalReturnPointsField.Equals(value) != true)) {
                    this.NormalReturnPointsField = value;
                    this.RaisePropertyChanged("NormalReturnPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.UsersService.UserStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UncertainReturnPoints {
            get {
                return this.UncertainReturnPointsField;
            }
            set {
                if ((this.UncertainReturnPointsField.Equals(value) != true)) {
                    this.UncertainReturnPointsField = value;
                    this.RaisePropertyChanged("UncertainReturnPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfoBindingImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class UserInfoBindingImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private IWorld.Client.UsersService.Bank BankField;
        
        private string CardField;
        
        private string EmailField;
        
        private string HolderField;
        
        private string NewPasswordField;
        
        private string OldPasswordField;
        
        private string SafeCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Client.UsersService.Bank Bank {
            get {
                return this.BankField;
            }
            set {
                if ((this.BankField.Equals(value) != true)) {
                    this.BankField = value;
                    this.RaisePropertyChanged("Bank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Holder {
            get {
                return this.HolderField;
            }
            set {
                if ((object.ReferenceEquals(this.HolderField, value) != true)) {
                    this.HolderField = value;
                    this.RaisePropertyChanged("Holder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewPassword {
            get {
                return this.NewPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPasswordField, value) != true)) {
                    this.NewPasswordField = value;
                    this.RaisePropertyChanged("NewPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldPassword {
            get {
                return this.OldPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OldPasswordField, value) != true)) {
                    this.OldPasswordField = value;
                    this.RaisePropertyChanged("OldPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SafeCode {
            get {
                return this.SafeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SafeCodeField, value) != true)) {
                    this.SafeCodeField = value;
                    this.RaisePropertyChanged("SafeCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateUserImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Client")]
    public partial class CreateUserImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double NormalReturnPointsField;
        
        private int QuotaField;
        
        private double UncertainReturnPointsField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NormalReturnPoints {
            get {
                return this.NormalReturnPointsField;
            }
            set {
                if ((this.NormalReturnPointsField.Equals(value) != true)) {
                    this.NormalReturnPointsField = value;
                    this.RaisePropertyChanged("NormalReturnPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quota {
            get {
                return this.QuotaField;
            }
            set {
                if ((this.QuotaField.Equals(value) != true)) {
                    this.QuotaField = value;
                    this.RaisePropertyChanged("Quota");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UncertainReturnPoints {
            get {
                return this.UncertainReturnPointsField;
            }
            set {
                if ((this.UncertainReturnPointsField.Equals(value) != true)) {
                    this.UncertainReturnPointsField = value;
                    this.RaisePropertyChanged("UncertainReturnPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UsersService.IUsersService")]
    public interface IUsersService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsersService/Login", ReplyAction="http://tempuri.org/IUsersService/LoginResponse")]
        System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.UsersService.LoginResult EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsersService/GetUserInfo", ReplyAction="http://tempuri.org/IUsersService/GetUserInfoResponse")]
        System.IAsyncResult BeginGetUserInfo(string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.UsersService.UserInfoResult EndGetUserInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsersService/Binding", ReplyAction="http://tempuri.org/IUsersService/BindingResponse")]
        System.IAsyncResult BeginBinding(IWorld.Client.UsersService.UserInfoBindingImport userInfoBindingImport, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.UsersService.OperateResult EndBinding(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsersService/GetUsers", ReplyAction="http://tempuri.org/IUsersService/GetUsersResponse")]
        System.IAsyncResult BeginGetUsers(string keyword, bool onlyImmediate, int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.UsersService.PaginationListOfBasicUserInfoResultL_PYu6_SAe EndGetUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsersService/CreateUser", ReplyAction="http://tempuri.org/IUsersService/CreateUserResponse")]
        System.IAsyncResult BeginCreateUser(IWorld.Client.UsersService.CreateUserImport createUserImport, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.UsersService.CreateUserResult EndCreateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsersService/UpgradePorn", ReplyAction="http://tempuri.org/IUsersService/UpgradePornResponse")]
        System.IAsyncResult BeginUpgradePorn(int userId, double normalReturnPoints, double uncertainReturnPoints, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.UsersService.OperateResult EndUpgradePorn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsersService/EditBank", ReplyAction="http://tempuri.org/IUsersService/EditBankResponse")]
        System.IAsyncResult BeginEditBank(string card, string holder, IWorld.Client.UsersService.Bank bank, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.UsersService.OperateResult EndEditBank(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsersService/EditEmail", ReplyAction="http://tempuri.org/IUsersService/EditEmailResponse")]
        System.IAsyncResult BeginEditEmail(string email, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.UsersService.OperateResult EndEditEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsersService/EditPassword", ReplyAction="http://tempuri.org/IUsersService/EditPasswordResponse")]
        System.IAsyncResult BeginEditPassword(string oldPassword, string newPassword, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.UsersService.OperateResult EndEditPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsersService/EditSafeWord", ReplyAction="http://tempuri.org/IUsersService/EditSafeWordResponse")]
        System.IAsyncResult BeginEditSafeWord(string oldSafeWord, string newSafeWord, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Client.UsersService.OperateResult EndEditSafeWord(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUsersServiceChannel : IWorld.Client.UsersService.IUsersService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.UsersService.LoginResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.UsersService.LoginResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.UsersService.UserInfoResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.UsersService.UserInfoResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BindingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BindingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.UsersService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.UsersService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.UsersService.PaginationListOfBasicUserInfoResultL_PYu6_SAe Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.UsersService.PaginationListOfBasicUserInfoResultL_PYu6_SAe)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.UsersService.CreateUserResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.UsersService.CreateUserResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpgradePornCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpgradePornCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.UsersService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.UsersService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.UsersService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.UsersService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.UsersService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.UsersService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.UsersService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.UsersService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditSafeWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditSafeWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Client.UsersService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Client.UsersService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsersServiceClient : System.ServiceModel.ClientBase<IWorld.Client.UsersService.IUsersService>, IWorld.Client.UsersService.IUsersService {
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserInfoDelegate;
        
        private EndOperationDelegate onEndGetUserInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginBindingDelegate;
        
        private EndOperationDelegate onEndBindingDelegate;
        
        private System.Threading.SendOrPostCallback onBindingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersDelegate;
        
        private EndOperationDelegate onEndGetUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateUserDelegate;
        
        private EndOperationDelegate onEndCreateUserDelegate;
        
        private System.Threading.SendOrPostCallback onCreateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpgradePornDelegate;
        
        private EndOperationDelegate onEndUpgradePornDelegate;
        
        private System.Threading.SendOrPostCallback onUpgradePornCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditBankDelegate;
        
        private EndOperationDelegate onEndEditBankDelegate;
        
        private System.Threading.SendOrPostCallback onEditBankCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditEmailDelegate;
        
        private EndOperationDelegate onEndEditEmailDelegate;
        
        private System.Threading.SendOrPostCallback onEditEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditPasswordDelegate;
        
        private EndOperationDelegate onEndEditPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onEditPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditSafeWordDelegate;
        
        private EndOperationDelegate onEndEditSafeWordDelegate;
        
        private System.Threading.SendOrPostCallback onEditSafeWordCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public UsersServiceClient() {
        }
        
        public UsersServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UsersServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<GetUserInfoCompletedEventArgs> GetUserInfoCompleted;
        
        public event System.EventHandler<BindingCompletedEventArgs> BindingCompleted;
        
        public event System.EventHandler<GetUsersCompletedEventArgs> GetUsersCompleted;
        
        public event System.EventHandler<CreateUserCompletedEventArgs> CreateUserCompleted;
        
        public event System.EventHandler<UpgradePornCompletedEventArgs> UpgradePornCompleted;
        
        public event System.EventHandler<EditBankCompletedEventArgs> EditBankCompleted;
        
        public event System.EventHandler<EditEmailCompletedEventArgs> EditEmailCompleted;
        
        public event System.EventHandler<EditPasswordCompletedEventArgs> EditPasswordCompleted;
        
        public event System.EventHandler<EditSafeWordCompletedEventArgs> EditSafeWordCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.UsersService.IUsersService.BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.UsersService.LoginResult IWorld.Client.UsersService.IUsersService.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((IWorld.Client.UsersService.IUsersService)(this)).BeginLogin(username, password, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            IWorld.Client.UsersService.LoginResult retVal = ((IWorld.Client.UsersService.IUsersService)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        public void LoginAsync(string username, string password, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        username,
                        password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.UsersService.IUsersService.BeginGetUserInfo(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserInfo(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.UsersService.UserInfoResult IWorld.Client.UsersService.IUsersService.EndGetUserInfo(System.IAsyncResult result) {
            return base.Channel.EndGetUserInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetUserInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((IWorld.Client.UsersService.IUsersService)(this)).BeginGetUserInfo(token, callback, asyncState);
        }
        
        private object[] OnEndGetUserInfo(System.IAsyncResult result) {
            IWorld.Client.UsersService.UserInfoResult retVal = ((IWorld.Client.UsersService.IUsersService)(this)).EndGetUserInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserInfoCompleted(object state) {
            if ((this.GetUserInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserInfoAsync(string token) {
            this.GetUserInfoAsync(token, null);
        }
        
        public void GetUserInfoAsync(string token, object userState) {
            if ((this.onBeginGetUserInfoDelegate == null)) {
                this.onBeginGetUserInfoDelegate = new BeginOperationDelegate(this.OnBeginGetUserInfo);
            }
            if ((this.onEndGetUserInfoDelegate == null)) {
                this.onEndGetUserInfoDelegate = new EndOperationDelegate(this.OnEndGetUserInfo);
            }
            if ((this.onGetUserInfoCompletedDelegate == null)) {
                this.onGetUserInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserInfoDelegate, new object[] {
                        token}, this.onEndGetUserInfoDelegate, this.onGetUserInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.UsersService.IUsersService.BeginBinding(IWorld.Client.UsersService.UserInfoBindingImport userInfoBindingImport, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBinding(userInfoBindingImport, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.UsersService.OperateResult IWorld.Client.UsersService.IUsersService.EndBinding(System.IAsyncResult result) {
            return base.Channel.EndBinding(result);
        }
        
        private System.IAsyncResult OnBeginBinding(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Client.UsersService.UserInfoBindingImport userInfoBindingImport = ((IWorld.Client.UsersService.UserInfoBindingImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Client.UsersService.IUsersService)(this)).BeginBinding(userInfoBindingImport, token, callback, asyncState);
        }
        
        private object[] OnEndBinding(System.IAsyncResult result) {
            IWorld.Client.UsersService.OperateResult retVal = ((IWorld.Client.UsersService.IUsersService)(this)).EndBinding(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBindingCompleted(object state) {
            if ((this.BindingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BindingCompleted(this, new BindingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BindingAsync(IWorld.Client.UsersService.UserInfoBindingImport userInfoBindingImport, string token) {
            this.BindingAsync(userInfoBindingImport, token, null);
        }
        
        public void BindingAsync(IWorld.Client.UsersService.UserInfoBindingImport userInfoBindingImport, string token, object userState) {
            if ((this.onBeginBindingDelegate == null)) {
                this.onBeginBindingDelegate = new BeginOperationDelegate(this.OnBeginBinding);
            }
            if ((this.onEndBindingDelegate == null)) {
                this.onEndBindingDelegate = new EndOperationDelegate(this.OnEndBinding);
            }
            if ((this.onBindingCompletedDelegate == null)) {
                this.onBindingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBindingCompleted);
            }
            base.InvokeAsync(this.onBeginBindingDelegate, new object[] {
                        userInfoBindingImport,
                        token}, this.onEndBindingDelegate, this.onBindingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.UsersService.IUsersService.BeginGetUsers(string keyword, bool onlyImmediate, int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsers(keyword, onlyImmediate, page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.UsersService.PaginationListOfBasicUserInfoResultL_PYu6_SAe IWorld.Client.UsersService.IUsersService.EndGetUsers(System.IAsyncResult result) {
            return base.Channel.EndGetUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keyword = ((string)(inValues[0]));
            bool onlyImmediate = ((bool)(inValues[1]));
            int page = ((int)(inValues[2]));
            string token = ((string)(inValues[3]));
            return ((IWorld.Client.UsersService.IUsersService)(this)).BeginGetUsers(keyword, onlyImmediate, page, token, callback, asyncState);
        }
        
        private object[] OnEndGetUsers(System.IAsyncResult result) {
            IWorld.Client.UsersService.PaginationListOfBasicUserInfoResultL_PYu6_SAe retVal = ((IWorld.Client.UsersService.IUsersService)(this)).EndGetUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersCompleted(object state) {
            if ((this.GetUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersAsync(string keyword, bool onlyImmediate, int page, string token) {
            this.GetUsersAsync(keyword, onlyImmediate, page, token, null);
        }
        
        public void GetUsersAsync(string keyword, bool onlyImmediate, int page, string token, object userState) {
            if ((this.onBeginGetUsersDelegate == null)) {
                this.onBeginGetUsersDelegate = new BeginOperationDelegate(this.OnBeginGetUsers);
            }
            if ((this.onEndGetUsersDelegate == null)) {
                this.onEndGetUsersDelegate = new EndOperationDelegate(this.OnEndGetUsers);
            }
            if ((this.onGetUsersCompletedDelegate == null)) {
                this.onGetUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersDelegate, new object[] {
                        keyword,
                        onlyImmediate,
                        page,
                        token}, this.onEndGetUsersDelegate, this.onGetUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.UsersService.IUsersService.BeginCreateUser(IWorld.Client.UsersService.CreateUserImport createUserImport, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateUser(createUserImport, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.UsersService.CreateUserResult IWorld.Client.UsersService.IUsersService.EndCreateUser(System.IAsyncResult result) {
            return base.Channel.EndCreateUser(result);
        }
        
        private System.IAsyncResult OnBeginCreateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Client.UsersService.CreateUserImport createUserImport = ((IWorld.Client.UsersService.CreateUserImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Client.UsersService.IUsersService)(this)).BeginCreateUser(createUserImport, token, callback, asyncState);
        }
        
        private object[] OnEndCreateUser(System.IAsyncResult result) {
            IWorld.Client.UsersService.CreateUserResult retVal = ((IWorld.Client.UsersService.IUsersService)(this)).EndCreateUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateUserCompleted(object state) {
            if ((this.CreateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateUserAsync(IWorld.Client.UsersService.CreateUserImport createUserImport, string token) {
            this.CreateUserAsync(createUserImport, token, null);
        }
        
        public void CreateUserAsync(IWorld.Client.UsersService.CreateUserImport createUserImport, string token, object userState) {
            if ((this.onBeginCreateUserDelegate == null)) {
                this.onBeginCreateUserDelegate = new BeginOperationDelegate(this.OnBeginCreateUser);
            }
            if ((this.onEndCreateUserDelegate == null)) {
                this.onEndCreateUserDelegate = new EndOperationDelegate(this.OnEndCreateUser);
            }
            if ((this.onCreateUserCompletedDelegate == null)) {
                this.onCreateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateUserCompleted);
            }
            base.InvokeAsync(this.onBeginCreateUserDelegate, new object[] {
                        createUserImport,
                        token}, this.onEndCreateUserDelegate, this.onCreateUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.UsersService.IUsersService.BeginUpgradePorn(int userId, double normalReturnPoints, double uncertainReturnPoints, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpgradePorn(userId, normalReturnPoints, uncertainReturnPoints, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.UsersService.OperateResult IWorld.Client.UsersService.IUsersService.EndUpgradePorn(System.IAsyncResult result) {
            return base.Channel.EndUpgradePorn(result);
        }
        
        private System.IAsyncResult OnBeginUpgradePorn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            double normalReturnPoints = ((double)(inValues[1]));
            double uncertainReturnPoints = ((double)(inValues[2]));
            string token = ((string)(inValues[3]));
            return ((IWorld.Client.UsersService.IUsersService)(this)).BeginUpgradePorn(userId, normalReturnPoints, uncertainReturnPoints, token, callback, asyncState);
        }
        
        private object[] OnEndUpgradePorn(System.IAsyncResult result) {
            IWorld.Client.UsersService.OperateResult retVal = ((IWorld.Client.UsersService.IUsersService)(this)).EndUpgradePorn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpgradePornCompleted(object state) {
            if ((this.UpgradePornCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpgradePornCompleted(this, new UpgradePornCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpgradePornAsync(int userId, double normalReturnPoints, double uncertainReturnPoints, string token) {
            this.UpgradePornAsync(userId, normalReturnPoints, uncertainReturnPoints, token, null);
        }
        
        public void UpgradePornAsync(int userId, double normalReturnPoints, double uncertainReturnPoints, string token, object userState) {
            if ((this.onBeginUpgradePornDelegate == null)) {
                this.onBeginUpgradePornDelegate = new BeginOperationDelegate(this.OnBeginUpgradePorn);
            }
            if ((this.onEndUpgradePornDelegate == null)) {
                this.onEndUpgradePornDelegate = new EndOperationDelegate(this.OnEndUpgradePorn);
            }
            if ((this.onUpgradePornCompletedDelegate == null)) {
                this.onUpgradePornCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpgradePornCompleted);
            }
            base.InvokeAsync(this.onBeginUpgradePornDelegate, new object[] {
                        userId,
                        normalReturnPoints,
                        uncertainReturnPoints,
                        token}, this.onEndUpgradePornDelegate, this.onUpgradePornCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.UsersService.IUsersService.BeginEditBank(string card, string holder, IWorld.Client.UsersService.Bank bank, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditBank(card, holder, bank, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.UsersService.OperateResult IWorld.Client.UsersService.IUsersService.EndEditBank(System.IAsyncResult result) {
            return base.Channel.EndEditBank(result);
        }
        
        private System.IAsyncResult OnBeginEditBank(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string card = ((string)(inValues[0]));
            string holder = ((string)(inValues[1]));
            IWorld.Client.UsersService.Bank bank = ((IWorld.Client.UsersService.Bank)(inValues[2]));
            string token = ((string)(inValues[3]));
            return ((IWorld.Client.UsersService.IUsersService)(this)).BeginEditBank(card, holder, bank, token, callback, asyncState);
        }
        
        private object[] OnEndEditBank(System.IAsyncResult result) {
            IWorld.Client.UsersService.OperateResult retVal = ((IWorld.Client.UsersService.IUsersService)(this)).EndEditBank(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditBankCompleted(object state) {
            if ((this.EditBankCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditBankCompleted(this, new EditBankCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditBankAsync(string card, string holder, IWorld.Client.UsersService.Bank bank, string token) {
            this.EditBankAsync(card, holder, bank, token, null);
        }
        
        public void EditBankAsync(string card, string holder, IWorld.Client.UsersService.Bank bank, string token, object userState) {
            if ((this.onBeginEditBankDelegate == null)) {
                this.onBeginEditBankDelegate = new BeginOperationDelegate(this.OnBeginEditBank);
            }
            if ((this.onEndEditBankDelegate == null)) {
                this.onEndEditBankDelegate = new EndOperationDelegate(this.OnEndEditBank);
            }
            if ((this.onEditBankCompletedDelegate == null)) {
                this.onEditBankCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditBankCompleted);
            }
            base.InvokeAsync(this.onBeginEditBankDelegate, new object[] {
                        card,
                        holder,
                        bank,
                        token}, this.onEndEditBankDelegate, this.onEditBankCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.UsersService.IUsersService.BeginEditEmail(string email, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditEmail(email, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.UsersService.OperateResult IWorld.Client.UsersService.IUsersService.EndEditEmail(System.IAsyncResult result) {
            return base.Channel.EndEditEmail(result);
        }
        
        private System.IAsyncResult OnBeginEditEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Client.UsersService.IUsersService)(this)).BeginEditEmail(email, token, callback, asyncState);
        }
        
        private object[] OnEndEditEmail(System.IAsyncResult result) {
            IWorld.Client.UsersService.OperateResult retVal = ((IWorld.Client.UsersService.IUsersService)(this)).EndEditEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditEmailCompleted(object state) {
            if ((this.EditEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditEmailCompleted(this, new EditEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditEmailAsync(string email, string token) {
            this.EditEmailAsync(email, token, null);
        }
        
        public void EditEmailAsync(string email, string token, object userState) {
            if ((this.onBeginEditEmailDelegate == null)) {
                this.onBeginEditEmailDelegate = new BeginOperationDelegate(this.OnBeginEditEmail);
            }
            if ((this.onEndEditEmailDelegate == null)) {
                this.onEndEditEmailDelegate = new EndOperationDelegate(this.OnEndEditEmail);
            }
            if ((this.onEditEmailCompletedDelegate == null)) {
                this.onEditEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditEmailCompleted);
            }
            base.InvokeAsync(this.onBeginEditEmailDelegate, new object[] {
                        email,
                        token}, this.onEndEditEmailDelegate, this.onEditEmailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.UsersService.IUsersService.BeginEditPassword(string oldPassword, string newPassword, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditPassword(oldPassword, newPassword, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.UsersService.OperateResult IWorld.Client.UsersService.IUsersService.EndEditPassword(System.IAsyncResult result) {
            return base.Channel.EndEditPassword(result);
        }
        
        private System.IAsyncResult OnBeginEditPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string oldPassword = ((string)(inValues[0]));
            string newPassword = ((string)(inValues[1]));
            string token = ((string)(inValues[2]));
            return ((IWorld.Client.UsersService.IUsersService)(this)).BeginEditPassword(oldPassword, newPassword, token, callback, asyncState);
        }
        
        private object[] OnEndEditPassword(System.IAsyncResult result) {
            IWorld.Client.UsersService.OperateResult retVal = ((IWorld.Client.UsersService.IUsersService)(this)).EndEditPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditPasswordCompleted(object state) {
            if ((this.EditPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditPasswordCompleted(this, new EditPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditPasswordAsync(string oldPassword, string newPassword, string token) {
            this.EditPasswordAsync(oldPassword, newPassword, token, null);
        }
        
        public void EditPasswordAsync(string oldPassword, string newPassword, string token, object userState) {
            if ((this.onBeginEditPasswordDelegate == null)) {
                this.onBeginEditPasswordDelegate = new BeginOperationDelegate(this.OnBeginEditPassword);
            }
            if ((this.onEndEditPasswordDelegate == null)) {
                this.onEndEditPasswordDelegate = new EndOperationDelegate(this.OnEndEditPassword);
            }
            if ((this.onEditPasswordCompletedDelegate == null)) {
                this.onEditPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginEditPasswordDelegate, new object[] {
                        oldPassword,
                        newPassword,
                        token}, this.onEndEditPasswordDelegate, this.onEditPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Client.UsersService.IUsersService.BeginEditSafeWord(string oldSafeWord, string newSafeWord, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditSafeWord(oldSafeWord, newSafeWord, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Client.UsersService.OperateResult IWorld.Client.UsersService.IUsersService.EndEditSafeWord(System.IAsyncResult result) {
            return base.Channel.EndEditSafeWord(result);
        }
        
        private System.IAsyncResult OnBeginEditSafeWord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string oldSafeWord = ((string)(inValues[0]));
            string newSafeWord = ((string)(inValues[1]));
            string token = ((string)(inValues[2]));
            return ((IWorld.Client.UsersService.IUsersService)(this)).BeginEditSafeWord(oldSafeWord, newSafeWord, token, callback, asyncState);
        }
        
        private object[] OnEndEditSafeWord(System.IAsyncResult result) {
            IWorld.Client.UsersService.OperateResult retVal = ((IWorld.Client.UsersService.IUsersService)(this)).EndEditSafeWord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditSafeWordCompleted(object state) {
            if ((this.EditSafeWordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditSafeWordCompleted(this, new EditSafeWordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditSafeWordAsync(string oldSafeWord, string newSafeWord, string token) {
            this.EditSafeWordAsync(oldSafeWord, newSafeWord, token, null);
        }
        
        public void EditSafeWordAsync(string oldSafeWord, string newSafeWord, string token, object userState) {
            if ((this.onBeginEditSafeWordDelegate == null)) {
                this.onBeginEditSafeWordDelegate = new BeginOperationDelegate(this.OnBeginEditSafeWord);
            }
            if ((this.onEndEditSafeWordDelegate == null)) {
                this.onEndEditSafeWordDelegate = new EndOperationDelegate(this.OnEndEditSafeWord);
            }
            if ((this.onEditSafeWordCompletedDelegate == null)) {
                this.onEditSafeWordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditSafeWordCompleted);
            }
            base.InvokeAsync(this.onBeginEditSafeWordDelegate, new object[] {
                        oldSafeWord,
                        newSafeWord,
                        token}, this.onEndEditSafeWordDelegate, this.onEditSafeWordCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IWorld.Client.UsersService.IUsersService CreateChannel() {
            return new UsersServiceClientChannel(this);
        }
        
        private class UsersServiceClientChannel : ChannelBase<IWorld.Client.UsersService.IUsersService>, IWorld.Client.UsersService.IUsersService {
            
            public UsersServiceClientChannel(System.ServiceModel.ClientBase<IWorld.Client.UsersService.IUsersService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.UsersService.LoginResult EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.UsersService.LoginResult _result = ((IWorld.Client.UsersService.LoginResult)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserInfo(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetUserInfo", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.UsersService.UserInfoResult EndGetUserInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.UsersService.UserInfoResult _result = ((IWorld.Client.UsersService.UserInfoResult)(base.EndInvoke("GetUserInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBinding(IWorld.Client.UsersService.UserInfoBindingImport userInfoBindingImport, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userInfoBindingImport;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("Binding", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.UsersService.OperateResult EndBinding(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.UsersService.OperateResult _result = ((IWorld.Client.UsersService.OperateResult)(base.EndInvoke("Binding", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUsers(string keyword, bool onlyImmediate, int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = keyword;
                _args[1] = onlyImmediate;
                _args[2] = page;
                _args[3] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetUsers", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.UsersService.PaginationListOfBasicUserInfoResultL_PYu6_SAe EndGetUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.UsersService.PaginationListOfBasicUserInfoResultL_PYu6_SAe _result = ((IWorld.Client.UsersService.PaginationListOfBasicUserInfoResultL_PYu6_SAe)(base.EndInvoke("GetUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateUser(IWorld.Client.UsersService.CreateUserImport createUserImport, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = createUserImport;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("CreateUser", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.UsersService.CreateUserResult EndCreateUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.UsersService.CreateUserResult _result = ((IWorld.Client.UsersService.CreateUserResult)(base.EndInvoke("CreateUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpgradePorn(int userId, double normalReturnPoints, double uncertainReturnPoints, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = userId;
                _args[1] = normalReturnPoints;
                _args[2] = uncertainReturnPoints;
                _args[3] = token;
                System.IAsyncResult _result = base.BeginInvoke("UpgradePorn", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.UsersService.OperateResult EndUpgradePorn(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.UsersService.OperateResult _result = ((IWorld.Client.UsersService.OperateResult)(base.EndInvoke("UpgradePorn", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditBank(string card, string holder, IWorld.Client.UsersService.Bank bank, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = card;
                _args[1] = holder;
                _args[2] = bank;
                _args[3] = token;
                System.IAsyncResult _result = base.BeginInvoke("EditBank", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.UsersService.OperateResult EndEditBank(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.UsersService.OperateResult _result = ((IWorld.Client.UsersService.OperateResult)(base.EndInvoke("EditBank", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditEmail(string email, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = email;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("EditEmail", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.UsersService.OperateResult EndEditEmail(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.UsersService.OperateResult _result = ((IWorld.Client.UsersService.OperateResult)(base.EndInvoke("EditEmail", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditPassword(string oldPassword, string newPassword, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = oldPassword;
                _args[1] = newPassword;
                _args[2] = token;
                System.IAsyncResult _result = base.BeginInvoke("EditPassword", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.UsersService.OperateResult EndEditPassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.UsersService.OperateResult _result = ((IWorld.Client.UsersService.OperateResult)(base.EndInvoke("EditPassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditSafeWord(string oldSafeWord, string newSafeWord, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = oldSafeWord;
                _args[1] = newSafeWord;
                _args[2] = token;
                System.IAsyncResult _result = base.BeginInvoke("EditSafeWord", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Client.UsersService.OperateResult EndEditSafeWord(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Client.UsersService.OperateResult _result = ((IWorld.Client.UsersService.OperateResult)(base.EndInvoke("EditSafeWord", _args, result)));
                return _result;
            }
        }
    }
}
