//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34003
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace IWorld.Admin.SystemSettingService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperateResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.SystemSettingService.PaginationListOfBankAccountResultp9CVq9mK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.SystemSettingService.PaginationListOfEmailAccountResultp9CVq9mK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.SystemSettingService.PaginationListOfEmailClientResultp9CVq9mK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.SystemSettingService.CollectionStatusResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.SystemSettingService.WebSettingResult))]
    public partial class OperateResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfBankAccountResultp9CVq9mK", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class PaginationListOfBankAccountResultp9CVq9mK : IWorld.Admin.SystemSettingService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Admin.SystemSettingService.BankAccountResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Admin.SystemSettingService.BankAccountResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfEmailAccountResultp9CVq9mK", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class PaginationListOfEmailAccountResultp9CVq9mK : IWorld.Admin.SystemSettingService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Admin.SystemSettingService.EmailAccountResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Admin.SystemSettingService.EmailAccountResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfEmailClientResultp9CVq9mK", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class PaginationListOfEmailClientResultp9CVq9mK : IWorld.Admin.SystemSettingService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Admin.SystemSettingService.EmailClientResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Admin.SystemSettingService.EmailClientResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CollectionStatusResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class CollectionStatusResult : IWorld.Admin.SystemSettingService.OperateResult {
        
        private bool RunningField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Running {
            get {
                return this.RunningField;
            }
            set {
                if ((this.RunningField.Equals(value) != true)) {
                    this.RunningField = value;
                    this.RaisePropertyChanged("Running");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebSettingResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class WebSettingResult : IWorld.Admin.SystemSettingService.OperateResult {
        
        private string BanksField;
        
        private double BonusModeScaleField;
        
        private int ClosureSingleTimeField;
        
        private bool CollectionRunningField;
        
        private double ConversionRatesField;
        
        private string DescriptionField;
        
        private int HeartbeatIntervalField;
        
        private string KeywordsField;
        
        private int LineForProhibitBettingField;
        
        private int MaximumBetsNumberField;
        
        private int MaximumBonusModeField;
        
        private int MaximumPayoutField;
        
        private double MaximumRechargeAmountField;
        
        private double MaximumReturnPointsField;
        
        private double MaximumWithdrawalAmountField;
        
        private int MinimumBonusModeField;
        
        private double MinimumRechargeAmountField;
        
        private double MinimumReturnPointsField;
        
        private double MinimumWithdrawalAmountField;
        
        private string NameField;
        
        private int PageSizeForAdminField;
        
        private int PageSizeForClientField;
        
        private int PayoutBaseField;
        
        private double ProfitabilityOfAllDayLotteryField;
        
        private int ReferenceBonusModeField;
        
        private double ReturnPointsDifferenceField;
        
        private double ReturnPointsScaleField;
        
        private string RootpathField;
        
        private int SpreadKeepTimeField;
        
        private int SubordinateField;
        
        private System.Collections.Generic.Dictionary<string, string> TheContrastField;
        
        private int TimeOfNoticeShowField;
        
        private string TitleField;
        
        private double UnitPriceField;
        
        private int UserInTimeField;
        
        private int VirtualQueuingField;
        
        private string WithdrawalInstructionsField;
        
        private int WithdrawalsField;
        
        private string WorkingHour_BeginField;
        
        private string WorkingHour_EndField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Banks {
            get {
                return this.BanksField;
            }
            set {
                if ((object.ReferenceEquals(this.BanksField, value) != true)) {
                    this.BanksField = value;
                    this.RaisePropertyChanged("Banks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BonusModeScale {
            get {
                return this.BonusModeScaleField;
            }
            set {
                if ((this.BonusModeScaleField.Equals(value) != true)) {
                    this.BonusModeScaleField = value;
                    this.RaisePropertyChanged("BonusModeScale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClosureSingleTime {
            get {
                return this.ClosureSingleTimeField;
            }
            set {
                if ((this.ClosureSingleTimeField.Equals(value) != true)) {
                    this.ClosureSingleTimeField = value;
                    this.RaisePropertyChanged("ClosureSingleTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CollectionRunning {
            get {
                return this.CollectionRunningField;
            }
            set {
                if ((this.CollectionRunningField.Equals(value) != true)) {
                    this.CollectionRunningField = value;
                    this.RaisePropertyChanged("CollectionRunning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ConversionRates {
            get {
                return this.ConversionRatesField;
            }
            set {
                if ((this.ConversionRatesField.Equals(value) != true)) {
                    this.ConversionRatesField = value;
                    this.RaisePropertyChanged("ConversionRates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeartbeatInterval {
            get {
                return this.HeartbeatIntervalField;
            }
            set {
                if ((this.HeartbeatIntervalField.Equals(value) != true)) {
                    this.HeartbeatIntervalField = value;
                    this.RaisePropertyChanged("HeartbeatInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keywords {
            get {
                return this.KeywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordsField, value) != true)) {
                    this.KeywordsField = value;
                    this.RaisePropertyChanged("Keywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LineForProhibitBetting {
            get {
                return this.LineForProhibitBettingField;
            }
            set {
                if ((this.LineForProhibitBettingField.Equals(value) != true)) {
                    this.LineForProhibitBettingField = value;
                    this.RaisePropertyChanged("LineForProhibitBetting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumBetsNumber {
            get {
                return this.MaximumBetsNumberField;
            }
            set {
                if ((this.MaximumBetsNumberField.Equals(value) != true)) {
                    this.MaximumBetsNumberField = value;
                    this.RaisePropertyChanged("MaximumBetsNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumBonusMode {
            get {
                return this.MaximumBonusModeField;
            }
            set {
                if ((this.MaximumBonusModeField.Equals(value) != true)) {
                    this.MaximumBonusModeField = value;
                    this.RaisePropertyChanged("MaximumBonusMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumPayout {
            get {
                return this.MaximumPayoutField;
            }
            set {
                if ((this.MaximumPayoutField.Equals(value) != true)) {
                    this.MaximumPayoutField = value;
                    this.RaisePropertyChanged("MaximumPayout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumRechargeAmount {
            get {
                return this.MaximumRechargeAmountField;
            }
            set {
                if ((this.MaximumRechargeAmountField.Equals(value) != true)) {
                    this.MaximumRechargeAmountField = value;
                    this.RaisePropertyChanged("MaximumRechargeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumReturnPoints {
            get {
                return this.MaximumReturnPointsField;
            }
            set {
                if ((this.MaximumReturnPointsField.Equals(value) != true)) {
                    this.MaximumReturnPointsField = value;
                    this.RaisePropertyChanged("MaximumReturnPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumWithdrawalAmount {
            get {
                return this.MaximumWithdrawalAmountField;
            }
            set {
                if ((this.MaximumWithdrawalAmountField.Equals(value) != true)) {
                    this.MaximumWithdrawalAmountField = value;
                    this.RaisePropertyChanged("MaximumWithdrawalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinimumBonusMode {
            get {
                return this.MinimumBonusModeField;
            }
            set {
                if ((this.MinimumBonusModeField.Equals(value) != true)) {
                    this.MinimumBonusModeField = value;
                    this.RaisePropertyChanged("MinimumBonusMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumRechargeAmount {
            get {
                return this.MinimumRechargeAmountField;
            }
            set {
                if ((this.MinimumRechargeAmountField.Equals(value) != true)) {
                    this.MinimumRechargeAmountField = value;
                    this.RaisePropertyChanged("MinimumRechargeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumReturnPoints {
            get {
                return this.MinimumReturnPointsField;
            }
            set {
                if ((this.MinimumReturnPointsField.Equals(value) != true)) {
                    this.MinimumReturnPointsField = value;
                    this.RaisePropertyChanged("MinimumReturnPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumWithdrawalAmount {
            get {
                return this.MinimumWithdrawalAmountField;
            }
            set {
                if ((this.MinimumWithdrawalAmountField.Equals(value) != true)) {
                    this.MinimumWithdrawalAmountField = value;
                    this.RaisePropertyChanged("MinimumWithdrawalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSizeForAdmin {
            get {
                return this.PageSizeForAdminField;
            }
            set {
                if ((this.PageSizeForAdminField.Equals(value) != true)) {
                    this.PageSizeForAdminField = value;
                    this.RaisePropertyChanged("PageSizeForAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSizeForClient {
            get {
                return this.PageSizeForClientField;
            }
            set {
                if ((this.PageSizeForClientField.Equals(value) != true)) {
                    this.PageSizeForClientField = value;
                    this.RaisePropertyChanged("PageSizeForClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayoutBase {
            get {
                return this.PayoutBaseField;
            }
            set {
                if ((this.PayoutBaseField.Equals(value) != true)) {
                    this.PayoutBaseField = value;
                    this.RaisePropertyChanged("PayoutBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ProfitabilityOfAllDayLottery {
            get {
                return this.ProfitabilityOfAllDayLotteryField;
            }
            set {
                if ((this.ProfitabilityOfAllDayLotteryField.Equals(value) != true)) {
                    this.ProfitabilityOfAllDayLotteryField = value;
                    this.RaisePropertyChanged("ProfitabilityOfAllDayLottery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferenceBonusMode {
            get {
                return this.ReferenceBonusModeField;
            }
            set {
                if ((this.ReferenceBonusModeField.Equals(value) != true)) {
                    this.ReferenceBonusModeField = value;
                    this.RaisePropertyChanged("ReferenceBonusMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ReturnPointsDifference {
            get {
                return this.ReturnPointsDifferenceField;
            }
            set {
                if ((this.ReturnPointsDifferenceField.Equals(value) != true)) {
                    this.ReturnPointsDifferenceField = value;
                    this.RaisePropertyChanged("ReturnPointsDifference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ReturnPointsScale {
            get {
                return this.ReturnPointsScaleField;
            }
            set {
                if ((this.ReturnPointsScaleField.Equals(value) != true)) {
                    this.ReturnPointsScaleField = value;
                    this.RaisePropertyChanged("ReturnPointsScale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rootpath {
            get {
                return this.RootpathField;
            }
            set {
                if ((object.ReferenceEquals(this.RootpathField, value) != true)) {
                    this.RootpathField = value;
                    this.RaisePropertyChanged("Rootpath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpreadKeepTime {
            get {
                return this.SpreadKeepTimeField;
            }
            set {
                if ((this.SpreadKeepTimeField.Equals(value) != true)) {
                    this.SpreadKeepTimeField = value;
                    this.RaisePropertyChanged("SpreadKeepTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Subordinate {
            get {
                return this.SubordinateField;
            }
            set {
                if ((this.SubordinateField.Equals(value) != true)) {
                    this.SubordinateField = value;
                    this.RaisePropertyChanged("Subordinate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> TheContrast {
            get {
                return this.TheContrastField;
            }
            set {
                if ((object.ReferenceEquals(this.TheContrastField, value) != true)) {
                    this.TheContrastField = value;
                    this.RaisePropertyChanged("TheContrast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeOfNoticeShow {
            get {
                return this.TimeOfNoticeShowField;
            }
            set {
                if ((this.TimeOfNoticeShowField.Equals(value) != true)) {
                    this.TimeOfNoticeShowField = value;
                    this.RaisePropertyChanged("TimeOfNoticeShow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserInTime {
            get {
                return this.UserInTimeField;
            }
            set {
                if ((this.UserInTimeField.Equals(value) != true)) {
                    this.UserInTimeField = value;
                    this.RaisePropertyChanged("UserInTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VirtualQueuing {
            get {
                return this.VirtualQueuingField;
            }
            set {
                if ((this.VirtualQueuingField.Equals(value) != true)) {
                    this.VirtualQueuingField = value;
                    this.RaisePropertyChanged("VirtualQueuing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WithdrawalInstructions {
            get {
                return this.WithdrawalInstructionsField;
            }
            set {
                if ((object.ReferenceEquals(this.WithdrawalInstructionsField, value) != true)) {
                    this.WithdrawalInstructionsField = value;
                    this.RaisePropertyChanged("WithdrawalInstructions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Withdrawals {
            get {
                return this.WithdrawalsField;
            }
            set {
                if ((this.WithdrawalsField.Equals(value) != true)) {
                    this.WithdrawalsField = value;
                    this.RaisePropertyChanged("Withdrawals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkingHour_Begin {
            get {
                return this.WorkingHour_BeginField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkingHour_BeginField, value) != true)) {
                    this.WorkingHour_BeginField = value;
                    this.RaisePropertyChanged("WorkingHour_Begin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkingHour_End {
            get {
                return this.WorkingHour_EndField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkingHour_EndField, value) != true)) {
                    this.WorkingHour_EndField = value;
                    this.RaisePropertyChanged("WorkingHour_End");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BankAccountResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class BankAccountResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private IWorld.Admin.SystemSettingService.Bank BankField;
        
        private int BankAccountIdField;
        
        private string CardField;
        
        private bool IsDefaultField;
        
        private string KeyField;
        
        private string NameField;
        
        private int OrderField;
        
        private string RemarkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Admin.SystemSettingService.Bank Bank {
            get {
                return this.BankField;
            }
            set {
                if ((this.BankField.Equals(value) != true)) {
                    this.BankField = value;
                    this.RaisePropertyChanged("Bank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BankAccountId {
            get {
                return this.BankAccountIdField;
            }
            set {
                if ((this.BankAccountIdField.Equals(value) != true)) {
                    this.BankAccountIdField = value;
                    this.RaisePropertyChanged("BankAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bank", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Model")]
    public enum Bank : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        无 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国工商银行 = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国农业银行 = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国银行 = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中国建设银行 = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        交通银行 = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        招商银行 = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        民生银行 = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        邮政存储 = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        财付通 = 201,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailAccountResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class EmailAccountResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccountField;
        
        private IWorld.Admin.SystemSettingService.EmailClientResult ClientField;
        
        private int EmailAccountIdField;
        
        private bool IsDefaultField;
        
        private string KeyField;
        
        private string PasswordField;
        
        private string RemarkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Admin.SystemSettingService.EmailClientResult Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmailAccountId {
            get {
                return this.EmailAccountIdField;
            }
            set {
                if ((this.EmailAccountIdField.Equals(value) != true)) {
                    this.EmailAccountIdField = value;
                    this.RaisePropertyChanged("EmailAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailClientResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class EmailClientResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int EmailClientIdField;
        
        private string HostField;
        
        private bool IsDefaultField;
        
        private string KeyField;
        
        private int PortField;
        
        private string RemarkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmailClientId {
            get {
                return this.EmailClientIdField;
            }
            set {
                if ((this.EmailClientIdField.Equals(value) != true)) {
                    this.EmailClientIdField = value;
                    this.RaisePropertyChanged("EmailClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditWebSettingImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class EditWebSettingImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BanksField;
        
        private double BonusModeScaleField;
        
        private int ClosureSingleTimeField;
        
        private double ConversionRatesField;
        
        private string DescriptionField;
        
        private int HeartbeatIntervalField;
        
        private string KeywordsField;
        
        private int LineForProhibitBettingField;
        
        private int MaximumBetsNumberField;
        
        private int MaximumBonusModeField;
        
        private int MaximumPayoutField;
        
        private double MaximumRechargeAmountField;
        
        private double MaximumReturnPointsField;
        
        private double MaximumWithdrawalAmountField;
        
        private int MinimumBonusModeField;
        
        private double MinimumRechargeAmountField;
        
        private double MinimumReturnPointsField;
        
        private double MinimumWithdrawalAmountField;
        
        private string NameField;
        
        private int PageSizeForAdminField;
        
        private int PageSizeForClientField;
        
        private int PayoutBaseField;
        
        private double ProfitabilityOfAllDayLotteryField;
        
        private int ReferenceBonusModeField;
        
        private double ReturnPointsDifferenceField;
        
        private double ReturnPointsScaleField;
        
        private string RootpathField;
        
        private int SpreadKeepTimeField;
        
        private int SubordinateField;
        
        private int TimeOfNoticeShowField;
        
        private string TitleField;
        
        private double UnitPriceField;
        
        private int UserInTimeField;
        
        private int VirtualQueuingField;
        
        private string WithdrawalInstructionsField;
        
        private int WithdrawalsField;
        
        private string WorkingHour_BeginField;
        
        private string WorkingHour_EndField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Banks {
            get {
                return this.BanksField;
            }
            set {
                if ((object.ReferenceEquals(this.BanksField, value) != true)) {
                    this.BanksField = value;
                    this.RaisePropertyChanged("Banks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BonusModeScale {
            get {
                return this.BonusModeScaleField;
            }
            set {
                if ((this.BonusModeScaleField.Equals(value) != true)) {
                    this.BonusModeScaleField = value;
                    this.RaisePropertyChanged("BonusModeScale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClosureSingleTime {
            get {
                return this.ClosureSingleTimeField;
            }
            set {
                if ((this.ClosureSingleTimeField.Equals(value) != true)) {
                    this.ClosureSingleTimeField = value;
                    this.RaisePropertyChanged("ClosureSingleTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ConversionRates {
            get {
                return this.ConversionRatesField;
            }
            set {
                if ((this.ConversionRatesField.Equals(value) != true)) {
                    this.ConversionRatesField = value;
                    this.RaisePropertyChanged("ConversionRates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeartbeatInterval {
            get {
                return this.HeartbeatIntervalField;
            }
            set {
                if ((this.HeartbeatIntervalField.Equals(value) != true)) {
                    this.HeartbeatIntervalField = value;
                    this.RaisePropertyChanged("HeartbeatInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keywords {
            get {
                return this.KeywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordsField, value) != true)) {
                    this.KeywordsField = value;
                    this.RaisePropertyChanged("Keywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LineForProhibitBetting {
            get {
                return this.LineForProhibitBettingField;
            }
            set {
                if ((this.LineForProhibitBettingField.Equals(value) != true)) {
                    this.LineForProhibitBettingField = value;
                    this.RaisePropertyChanged("LineForProhibitBetting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumBetsNumber {
            get {
                return this.MaximumBetsNumberField;
            }
            set {
                if ((this.MaximumBetsNumberField.Equals(value) != true)) {
                    this.MaximumBetsNumberField = value;
                    this.RaisePropertyChanged("MaximumBetsNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumBonusMode {
            get {
                return this.MaximumBonusModeField;
            }
            set {
                if ((this.MaximumBonusModeField.Equals(value) != true)) {
                    this.MaximumBonusModeField = value;
                    this.RaisePropertyChanged("MaximumBonusMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumPayout {
            get {
                return this.MaximumPayoutField;
            }
            set {
                if ((this.MaximumPayoutField.Equals(value) != true)) {
                    this.MaximumPayoutField = value;
                    this.RaisePropertyChanged("MaximumPayout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumRechargeAmount {
            get {
                return this.MaximumRechargeAmountField;
            }
            set {
                if ((this.MaximumRechargeAmountField.Equals(value) != true)) {
                    this.MaximumRechargeAmountField = value;
                    this.RaisePropertyChanged("MaximumRechargeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumReturnPoints {
            get {
                return this.MaximumReturnPointsField;
            }
            set {
                if ((this.MaximumReturnPointsField.Equals(value) != true)) {
                    this.MaximumReturnPointsField = value;
                    this.RaisePropertyChanged("MaximumReturnPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumWithdrawalAmount {
            get {
                return this.MaximumWithdrawalAmountField;
            }
            set {
                if ((this.MaximumWithdrawalAmountField.Equals(value) != true)) {
                    this.MaximumWithdrawalAmountField = value;
                    this.RaisePropertyChanged("MaximumWithdrawalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinimumBonusMode {
            get {
                return this.MinimumBonusModeField;
            }
            set {
                if ((this.MinimumBonusModeField.Equals(value) != true)) {
                    this.MinimumBonusModeField = value;
                    this.RaisePropertyChanged("MinimumBonusMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumRechargeAmount {
            get {
                return this.MinimumRechargeAmountField;
            }
            set {
                if ((this.MinimumRechargeAmountField.Equals(value) != true)) {
                    this.MinimumRechargeAmountField = value;
                    this.RaisePropertyChanged("MinimumRechargeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumReturnPoints {
            get {
                return this.MinimumReturnPointsField;
            }
            set {
                if ((this.MinimumReturnPointsField.Equals(value) != true)) {
                    this.MinimumReturnPointsField = value;
                    this.RaisePropertyChanged("MinimumReturnPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumWithdrawalAmount {
            get {
                return this.MinimumWithdrawalAmountField;
            }
            set {
                if ((this.MinimumWithdrawalAmountField.Equals(value) != true)) {
                    this.MinimumWithdrawalAmountField = value;
                    this.RaisePropertyChanged("MinimumWithdrawalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSizeForAdmin {
            get {
                return this.PageSizeForAdminField;
            }
            set {
                if ((this.PageSizeForAdminField.Equals(value) != true)) {
                    this.PageSizeForAdminField = value;
                    this.RaisePropertyChanged("PageSizeForAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSizeForClient {
            get {
                return this.PageSizeForClientField;
            }
            set {
                if ((this.PageSizeForClientField.Equals(value) != true)) {
                    this.PageSizeForClientField = value;
                    this.RaisePropertyChanged("PageSizeForClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayoutBase {
            get {
                return this.PayoutBaseField;
            }
            set {
                if ((this.PayoutBaseField.Equals(value) != true)) {
                    this.PayoutBaseField = value;
                    this.RaisePropertyChanged("PayoutBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ProfitabilityOfAllDayLottery {
            get {
                return this.ProfitabilityOfAllDayLotteryField;
            }
            set {
                if ((this.ProfitabilityOfAllDayLotteryField.Equals(value) != true)) {
                    this.ProfitabilityOfAllDayLotteryField = value;
                    this.RaisePropertyChanged("ProfitabilityOfAllDayLottery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferenceBonusMode {
            get {
                return this.ReferenceBonusModeField;
            }
            set {
                if ((this.ReferenceBonusModeField.Equals(value) != true)) {
                    this.ReferenceBonusModeField = value;
                    this.RaisePropertyChanged("ReferenceBonusMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ReturnPointsDifference {
            get {
                return this.ReturnPointsDifferenceField;
            }
            set {
                if ((this.ReturnPointsDifferenceField.Equals(value) != true)) {
                    this.ReturnPointsDifferenceField = value;
                    this.RaisePropertyChanged("ReturnPointsDifference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ReturnPointsScale {
            get {
                return this.ReturnPointsScaleField;
            }
            set {
                if ((this.ReturnPointsScaleField.Equals(value) != true)) {
                    this.ReturnPointsScaleField = value;
                    this.RaisePropertyChanged("ReturnPointsScale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rootpath {
            get {
                return this.RootpathField;
            }
            set {
                if ((object.ReferenceEquals(this.RootpathField, value) != true)) {
                    this.RootpathField = value;
                    this.RaisePropertyChanged("Rootpath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpreadKeepTime {
            get {
                return this.SpreadKeepTimeField;
            }
            set {
                if ((this.SpreadKeepTimeField.Equals(value) != true)) {
                    this.SpreadKeepTimeField = value;
                    this.RaisePropertyChanged("SpreadKeepTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Subordinate {
            get {
                return this.SubordinateField;
            }
            set {
                if ((this.SubordinateField.Equals(value) != true)) {
                    this.SubordinateField = value;
                    this.RaisePropertyChanged("Subordinate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeOfNoticeShow {
            get {
                return this.TimeOfNoticeShowField;
            }
            set {
                if ((this.TimeOfNoticeShowField.Equals(value) != true)) {
                    this.TimeOfNoticeShowField = value;
                    this.RaisePropertyChanged("TimeOfNoticeShow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserInTime {
            get {
                return this.UserInTimeField;
            }
            set {
                if ((this.UserInTimeField.Equals(value) != true)) {
                    this.UserInTimeField = value;
                    this.RaisePropertyChanged("UserInTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VirtualQueuing {
            get {
                return this.VirtualQueuingField;
            }
            set {
                if ((this.VirtualQueuingField.Equals(value) != true)) {
                    this.VirtualQueuingField = value;
                    this.RaisePropertyChanged("VirtualQueuing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WithdrawalInstructions {
            get {
                return this.WithdrawalInstructionsField;
            }
            set {
                if ((object.ReferenceEquals(this.WithdrawalInstructionsField, value) != true)) {
                    this.WithdrawalInstructionsField = value;
                    this.RaisePropertyChanged("WithdrawalInstructions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Withdrawals {
            get {
                return this.WithdrawalsField;
            }
            set {
                if ((this.WithdrawalsField.Equals(value) != true)) {
                    this.WithdrawalsField = value;
                    this.RaisePropertyChanged("Withdrawals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkingHour_Begin {
            get {
                return this.WorkingHour_BeginField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkingHour_BeginField, value) != true)) {
                    this.WorkingHour_BeginField = value;
                    this.RaisePropertyChanged("WorkingHour_Begin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkingHour_End {
            get {
                return this.WorkingHour_EndField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkingHour_EndField, value) != true)) {
                    this.WorkingHour_EndField = value;
                    this.RaisePropertyChanged("WorkingHour_End");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddBankAccountImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class AddBankAccountImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private IWorld.Admin.SystemSettingService.Bank BankField;
        
        private string CardField;
        
        private string KeyField;
        
        private string NameField;
        
        private int OrderField;
        
        private string RemarkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Admin.SystemSettingService.Bank Bank {
            get {
                return this.BankField;
            }
            set {
                if ((this.BankField.Equals(value) != true)) {
                    this.BankField = value;
                    this.RaisePropertyChanged("Bank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditBankAccountImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class EditBankAccountImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private IWorld.Admin.SystemSettingService.Bank BankField;
        
        private int BankAccountIdField;
        
        private string CardField;
        
        private string KeyField;
        
        private string NameField;
        
        private int OrderField;
        
        private string RemarkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Admin.SystemSettingService.Bank Bank {
            get {
                return this.BankField;
            }
            set {
                if ((this.BankField.Equals(value) != true)) {
                    this.BankField = value;
                    this.RaisePropertyChanged("Bank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BankAccountId {
            get {
                return this.BankAccountIdField;
            }
            set {
                if ((this.BankAccountIdField.Equals(value) != true)) {
                    this.BankAccountIdField = value;
                    this.RaisePropertyChanged("BankAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddEmailAccountImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class AddEmailAccountImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccountField;
        
        private string ClientKeyField;
        
        private string KeyField;
        
        private string PasswordField;
        
        private string RemarkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientKey {
            get {
                return this.ClientKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientKeyField, value) != true)) {
                    this.ClientKeyField = value;
                    this.RaisePropertyChanged("ClientKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditEmailAccountImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class EditEmailAccountImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccountField;
        
        private string ClientKeyField;
        
        private int EmailAccountIdField;
        
        private string KeyField;
        
        private string PasswordField;
        
        private string RemarkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientKey {
            get {
                return this.ClientKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientKeyField, value) != true)) {
                    this.ClientKeyField = value;
                    this.RaisePropertyChanged("ClientKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmailAccountId {
            get {
                return this.EmailAccountIdField;
            }
            set {
                if ((this.EmailAccountIdField.Equals(value) != true)) {
                    this.EmailAccountIdField = value;
                    this.RaisePropertyChanged("EmailAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddEmailClientImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class AddEmailClientImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string HostField;
        
        private string KeyField;
        
        private int PortField;
        
        private string RemarkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditEmailClientImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class EditEmailClientImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int EmailClientIdField;
        
        private string HostField;
        
        private string KeyField;
        
        private int PortField;
        
        private string RemarkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmailClientId {
            get {
                return this.EmailClientIdField;
            }
            set {
                if ((this.EmailClientIdField.Equals(value) != true)) {
                    this.EmailClientIdField = value;
                    this.RaisePropertyChanged("EmailClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SystemSettingService.ISystemSettingService")]
    public interface ISystemSettingService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/GetWebSetting", ReplyAction="http://tempuri.org/ISystemSettingService/GetWebSettingResponse")]
        System.IAsyncResult BeginGetWebSetting(string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.WebSettingResult EndGetWebSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/EditWebSetting", ReplyAction="http://tempuri.org/ISystemSettingService/EditWebSettingResponse")]
        System.IAsyncResult BeginEditWebSetting(IWorld.Admin.SystemSettingService.EditWebSettingImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.OperateResult EndEditWebSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/GetBankAccountList", ReplyAction="http://tempuri.org/ISystemSettingService/GetBankAccountListResponse")]
        System.IAsyncResult BeginGetBankAccountList(int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.PaginationListOfBankAccountResultp9CVq9mK EndGetBankAccountList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/AddBankAccount", ReplyAction="http://tempuri.org/ISystemSettingService/AddBankAccountResponse")]
        System.IAsyncResult BeginAddBankAccount(IWorld.Admin.SystemSettingService.AddBankAccountImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.OperateResult EndAddBankAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/EditBankAccount", ReplyAction="http://tempuri.org/ISystemSettingService/EditBankAccountResponse")]
        System.IAsyncResult BeginEditBankAccount(IWorld.Admin.SystemSettingService.EditBankAccountImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.OperateResult EndEditBankAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/SetDefaultBankAccount", ReplyAction="http://tempuri.org/ISystemSettingService/SetDefaultBankAccountResponse")]
        System.IAsyncResult BeginSetDefaultBankAccount(int bankAccountId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.OperateResult EndSetDefaultBankAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/RemoveBankAccount", ReplyAction="http://tempuri.org/ISystemSettingService/RemoveBankAccountResponse")]
        System.IAsyncResult BeginRemoveBankAccount(int bankAccountId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.OperateResult EndRemoveBankAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/GetEmailAccountList", ReplyAction="http://tempuri.org/ISystemSettingService/GetEmailAccountListResponse")]
        System.IAsyncResult BeginGetEmailAccountList(int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.PaginationListOfEmailAccountResultp9CVq9mK EndGetEmailAccountList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/AddEmailAccount", ReplyAction="http://tempuri.org/ISystemSettingService/AddEmailAccountResponse")]
        System.IAsyncResult BeginAddEmailAccount(IWorld.Admin.SystemSettingService.AddEmailAccountImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.OperateResult EndAddEmailAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/EditEmailAccount", ReplyAction="http://tempuri.org/ISystemSettingService/EditEmailAccountResponse")]
        System.IAsyncResult BeginEditEmailAccount(IWorld.Admin.SystemSettingService.EditEmailAccountImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.OperateResult EndEditEmailAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/SetDefaultEmailAccount", ReplyAction="http://tempuri.org/ISystemSettingService/SetDefaultEmailAccountResponse")]
        System.IAsyncResult BeginSetDefaultEmailAccount(int emailAccountId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.OperateResult EndSetDefaultEmailAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/RemoveEmailAccount", ReplyAction="http://tempuri.org/ISystemSettingService/RemoveEmailAccountResponse")]
        System.IAsyncResult BeginRemoveEmailAccount(int emailAccountId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.OperateResult EndRemoveEmailAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/GetEmailClientList", ReplyAction="http://tempuri.org/ISystemSettingService/GetEmailClientListResponse")]
        System.IAsyncResult BeginGetEmailClientList(int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.PaginationListOfEmailClientResultp9CVq9mK EndGetEmailClientList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/AddEmailClient", ReplyAction="http://tempuri.org/ISystemSettingService/AddEmailClientResponse")]
        System.IAsyncResult BeginAddEmailClient(IWorld.Admin.SystemSettingService.AddEmailClientImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.OperateResult EndAddEmailClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/EditEmailClient", ReplyAction="http://tempuri.org/ISystemSettingService/EditEmailClientResponse")]
        System.IAsyncResult BeginEditEmailClient(IWorld.Admin.SystemSettingService.EditEmailClientImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.OperateResult EndEditEmailClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/SetDefaultEmailClient", ReplyAction="http://tempuri.org/ISystemSettingService/SetDefaultEmailClientResponse")]
        System.IAsyncResult BeginSetDefaultEmailClient(int emailClientId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.OperateResult EndSetDefaultEmailClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/RemoveEmailClient", ReplyAction="http://tempuri.org/ISystemSettingService/RemoveEmailClientResponse")]
        System.IAsyncResult BeginRemoveEmailClient(int emailClientId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.OperateResult EndRemoveEmailClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/GetCollectionStatusResult", ReplyAction="http://tempuri.org/ISystemSettingService/GetCollectionStatusResultResponse")]
        System.IAsyncResult BeginGetCollectionStatusResult(string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.CollectionStatusResult EndGetCollectionStatusResult(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/CloseOrOpenCollection", ReplyAction="http://tempuri.org/ISystemSettingService/CloseOrOpenCollectionResponse")]
        System.IAsyncResult BeginCloseOrOpenCollection(bool close, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.OperateResult EndCloseOrOpenCollection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISystemSettingService/ClearCachePond", ReplyAction="http://tempuri.org/ISystemSettingService/ClearCachePondResponse")]
        System.IAsyncResult BeginClearCachePond(string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.SystemSettingService.OperateResult EndClearCachePond(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISystemSettingServiceChannel : IWorld.Admin.SystemSettingService.ISystemSettingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWebSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWebSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.WebSettingResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.WebSettingResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditWebSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditWebSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBankAccountListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBankAccountListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.PaginationListOfBankAccountResultp9CVq9mK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.PaginationListOfBankAccountResultp9CVq9mK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetDefaultBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetDefaultBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEmailAccountListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmailAccountListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.PaginationListOfEmailAccountResultp9CVq9mK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.PaginationListOfEmailAccountResultp9CVq9mK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddEmailAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddEmailAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditEmailAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditEmailAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetDefaultEmailAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetDefaultEmailAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveEmailAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveEmailAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEmailClientListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmailClientListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.PaginationListOfEmailClientResultp9CVq9mK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.PaginationListOfEmailClientResultp9CVq9mK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddEmailClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddEmailClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditEmailClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditEmailClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetDefaultEmailClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetDefaultEmailClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveEmailClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveEmailClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCollectionStatusResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCollectionStatusResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.CollectionStatusResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.CollectionStatusResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CloseOrOpenCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CloseOrOpenCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClearCachePondCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClearCachePondCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.SystemSettingService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.SystemSettingService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SystemSettingServiceClient : System.ServiceModel.ClientBase<IWorld.Admin.SystemSettingService.ISystemSettingService>, IWorld.Admin.SystemSettingService.ISystemSettingService {
        
        private BeginOperationDelegate onBeginGetWebSettingDelegate;
        
        private EndOperationDelegate onEndGetWebSettingDelegate;
        
        private System.Threading.SendOrPostCallback onGetWebSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditWebSettingDelegate;
        
        private EndOperationDelegate onEndEditWebSettingDelegate;
        
        private System.Threading.SendOrPostCallback onEditWebSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBankAccountListDelegate;
        
        private EndOperationDelegate onEndGetBankAccountListDelegate;
        
        private System.Threading.SendOrPostCallback onGetBankAccountListCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddBankAccountDelegate;
        
        private EndOperationDelegate onEndAddBankAccountDelegate;
        
        private System.Threading.SendOrPostCallback onAddBankAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditBankAccountDelegate;
        
        private EndOperationDelegate onEndEditBankAccountDelegate;
        
        private System.Threading.SendOrPostCallback onEditBankAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDefaultBankAccountDelegate;
        
        private EndOperationDelegate onEndSetDefaultBankAccountDelegate;
        
        private System.Threading.SendOrPostCallback onSetDefaultBankAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveBankAccountDelegate;
        
        private EndOperationDelegate onEndRemoveBankAccountDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveBankAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmailAccountListDelegate;
        
        private EndOperationDelegate onEndGetEmailAccountListDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmailAccountListCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddEmailAccountDelegate;
        
        private EndOperationDelegate onEndAddEmailAccountDelegate;
        
        private System.Threading.SendOrPostCallback onAddEmailAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditEmailAccountDelegate;
        
        private EndOperationDelegate onEndEditEmailAccountDelegate;
        
        private System.Threading.SendOrPostCallback onEditEmailAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDefaultEmailAccountDelegate;
        
        private EndOperationDelegate onEndSetDefaultEmailAccountDelegate;
        
        private System.Threading.SendOrPostCallback onSetDefaultEmailAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveEmailAccountDelegate;
        
        private EndOperationDelegate onEndRemoveEmailAccountDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveEmailAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmailClientListDelegate;
        
        private EndOperationDelegate onEndGetEmailClientListDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmailClientListCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddEmailClientDelegate;
        
        private EndOperationDelegate onEndAddEmailClientDelegate;
        
        private System.Threading.SendOrPostCallback onAddEmailClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditEmailClientDelegate;
        
        private EndOperationDelegate onEndEditEmailClientDelegate;
        
        private System.Threading.SendOrPostCallback onEditEmailClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDefaultEmailClientDelegate;
        
        private EndOperationDelegate onEndSetDefaultEmailClientDelegate;
        
        private System.Threading.SendOrPostCallback onSetDefaultEmailClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveEmailClientDelegate;
        
        private EndOperationDelegate onEndRemoveEmailClientDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveEmailClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCollectionStatusResultDelegate;
        
        private EndOperationDelegate onEndGetCollectionStatusResultDelegate;
        
        private System.Threading.SendOrPostCallback onGetCollectionStatusResultCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseOrOpenCollectionDelegate;
        
        private EndOperationDelegate onEndCloseOrOpenCollectionDelegate;
        
        private System.Threading.SendOrPostCallback onCloseOrOpenCollectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearCachePondDelegate;
        
        private EndOperationDelegate onEndClearCachePondDelegate;
        
        private System.Threading.SendOrPostCallback onClearCachePondCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SystemSettingServiceClient() {
        }
        
        public SystemSettingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SystemSettingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystemSettingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystemSettingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetWebSettingCompletedEventArgs> GetWebSettingCompleted;
        
        public event System.EventHandler<EditWebSettingCompletedEventArgs> EditWebSettingCompleted;
        
        public event System.EventHandler<GetBankAccountListCompletedEventArgs> GetBankAccountListCompleted;
        
        public event System.EventHandler<AddBankAccountCompletedEventArgs> AddBankAccountCompleted;
        
        public event System.EventHandler<EditBankAccountCompletedEventArgs> EditBankAccountCompleted;
        
        public event System.EventHandler<SetDefaultBankAccountCompletedEventArgs> SetDefaultBankAccountCompleted;
        
        public event System.EventHandler<RemoveBankAccountCompletedEventArgs> RemoveBankAccountCompleted;
        
        public event System.EventHandler<GetEmailAccountListCompletedEventArgs> GetEmailAccountListCompleted;
        
        public event System.EventHandler<AddEmailAccountCompletedEventArgs> AddEmailAccountCompleted;
        
        public event System.EventHandler<EditEmailAccountCompletedEventArgs> EditEmailAccountCompleted;
        
        public event System.EventHandler<SetDefaultEmailAccountCompletedEventArgs> SetDefaultEmailAccountCompleted;
        
        public event System.EventHandler<RemoveEmailAccountCompletedEventArgs> RemoveEmailAccountCompleted;
        
        public event System.EventHandler<GetEmailClientListCompletedEventArgs> GetEmailClientListCompleted;
        
        public event System.EventHandler<AddEmailClientCompletedEventArgs> AddEmailClientCompleted;
        
        public event System.EventHandler<EditEmailClientCompletedEventArgs> EditEmailClientCompleted;
        
        public event System.EventHandler<SetDefaultEmailClientCompletedEventArgs> SetDefaultEmailClientCompleted;
        
        public event System.EventHandler<RemoveEmailClientCompletedEventArgs> RemoveEmailClientCompleted;
        
        public event System.EventHandler<GetCollectionStatusResultCompletedEventArgs> GetCollectionStatusResultCompleted;
        
        public event System.EventHandler<CloseOrOpenCollectionCompletedEventArgs> CloseOrOpenCollectionCompleted;
        
        public event System.EventHandler<ClearCachePondCompletedEventArgs> ClearCachePondCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginGetWebSetting(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWebSetting(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.WebSettingResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndGetWebSetting(System.IAsyncResult result) {
            return base.Channel.EndGetWebSetting(result);
        }
        
        private System.IAsyncResult OnBeginGetWebSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginGetWebSetting(token, callback, asyncState);
        }
        
        private object[] OnEndGetWebSetting(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.WebSettingResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndGetWebSetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWebSettingCompleted(object state) {
            if ((this.GetWebSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWebSettingCompleted(this, new GetWebSettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWebSettingAsync(string token) {
            this.GetWebSettingAsync(token, null);
        }
        
        public void GetWebSettingAsync(string token, object userState) {
            if ((this.onBeginGetWebSettingDelegate == null)) {
                this.onBeginGetWebSettingDelegate = new BeginOperationDelegate(this.OnBeginGetWebSetting);
            }
            if ((this.onEndGetWebSettingDelegate == null)) {
                this.onEndGetWebSettingDelegate = new EndOperationDelegate(this.OnEndGetWebSetting);
            }
            if ((this.onGetWebSettingCompletedDelegate == null)) {
                this.onGetWebSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWebSettingCompleted);
            }
            base.InvokeAsync(this.onBeginGetWebSettingDelegate, new object[] {
                        token}, this.onEndGetWebSettingDelegate, this.onGetWebSettingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginEditWebSetting(IWorld.Admin.SystemSettingService.EditWebSettingImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditWebSetting(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.OperateResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndEditWebSetting(System.IAsyncResult result) {
            return base.Channel.EndEditWebSetting(result);
        }
        
        private System.IAsyncResult OnBeginEditWebSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.SystemSettingService.EditWebSettingImport import = ((IWorld.Admin.SystemSettingService.EditWebSettingImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginEditWebSetting(import, token, callback, asyncState);
        }
        
        private object[] OnEndEditWebSetting(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.OperateResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndEditWebSetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditWebSettingCompleted(object state) {
            if ((this.EditWebSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditWebSettingCompleted(this, new EditWebSettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditWebSettingAsync(IWorld.Admin.SystemSettingService.EditWebSettingImport import, string token) {
            this.EditWebSettingAsync(import, token, null);
        }
        
        public void EditWebSettingAsync(IWorld.Admin.SystemSettingService.EditWebSettingImport import, string token, object userState) {
            if ((this.onBeginEditWebSettingDelegate == null)) {
                this.onBeginEditWebSettingDelegate = new BeginOperationDelegate(this.OnBeginEditWebSetting);
            }
            if ((this.onEndEditWebSettingDelegate == null)) {
                this.onEndEditWebSettingDelegate = new EndOperationDelegate(this.OnEndEditWebSetting);
            }
            if ((this.onEditWebSettingCompletedDelegate == null)) {
                this.onEditWebSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditWebSettingCompleted);
            }
            base.InvokeAsync(this.onBeginEditWebSettingDelegate, new object[] {
                        import,
                        token}, this.onEndEditWebSettingDelegate, this.onEditWebSettingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginGetBankAccountList(int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBankAccountList(page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.PaginationListOfBankAccountResultp9CVq9mK IWorld.Admin.SystemSettingService.ISystemSettingService.EndGetBankAccountList(System.IAsyncResult result) {
            return base.Channel.EndGetBankAccountList(result);
        }
        
        private System.IAsyncResult OnBeginGetBankAccountList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int page = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginGetBankAccountList(page, token, callback, asyncState);
        }
        
        private object[] OnEndGetBankAccountList(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.PaginationListOfBankAccountResultp9CVq9mK retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndGetBankAccountList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBankAccountListCompleted(object state) {
            if ((this.GetBankAccountListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBankAccountListCompleted(this, new GetBankAccountListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBankAccountListAsync(int page, string token) {
            this.GetBankAccountListAsync(page, token, null);
        }
        
        public void GetBankAccountListAsync(int page, string token, object userState) {
            if ((this.onBeginGetBankAccountListDelegate == null)) {
                this.onBeginGetBankAccountListDelegate = new BeginOperationDelegate(this.OnBeginGetBankAccountList);
            }
            if ((this.onEndGetBankAccountListDelegate == null)) {
                this.onEndGetBankAccountListDelegate = new EndOperationDelegate(this.OnEndGetBankAccountList);
            }
            if ((this.onGetBankAccountListCompletedDelegate == null)) {
                this.onGetBankAccountListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBankAccountListCompleted);
            }
            base.InvokeAsync(this.onBeginGetBankAccountListDelegate, new object[] {
                        page,
                        token}, this.onEndGetBankAccountListDelegate, this.onGetBankAccountListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginAddBankAccount(IWorld.Admin.SystemSettingService.AddBankAccountImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddBankAccount(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.OperateResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndAddBankAccount(System.IAsyncResult result) {
            return base.Channel.EndAddBankAccount(result);
        }
        
        private System.IAsyncResult OnBeginAddBankAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.SystemSettingService.AddBankAccountImport import = ((IWorld.Admin.SystemSettingService.AddBankAccountImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginAddBankAccount(import, token, callback, asyncState);
        }
        
        private object[] OnEndAddBankAccount(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.OperateResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndAddBankAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddBankAccountCompleted(object state) {
            if ((this.AddBankAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddBankAccountCompleted(this, new AddBankAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddBankAccountAsync(IWorld.Admin.SystemSettingService.AddBankAccountImport import, string token) {
            this.AddBankAccountAsync(import, token, null);
        }
        
        public void AddBankAccountAsync(IWorld.Admin.SystemSettingService.AddBankAccountImport import, string token, object userState) {
            if ((this.onBeginAddBankAccountDelegate == null)) {
                this.onBeginAddBankAccountDelegate = new BeginOperationDelegate(this.OnBeginAddBankAccount);
            }
            if ((this.onEndAddBankAccountDelegate == null)) {
                this.onEndAddBankAccountDelegate = new EndOperationDelegate(this.OnEndAddBankAccount);
            }
            if ((this.onAddBankAccountCompletedDelegate == null)) {
                this.onAddBankAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddBankAccountCompleted);
            }
            base.InvokeAsync(this.onBeginAddBankAccountDelegate, new object[] {
                        import,
                        token}, this.onEndAddBankAccountDelegate, this.onAddBankAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginEditBankAccount(IWorld.Admin.SystemSettingService.EditBankAccountImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditBankAccount(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.OperateResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndEditBankAccount(System.IAsyncResult result) {
            return base.Channel.EndEditBankAccount(result);
        }
        
        private System.IAsyncResult OnBeginEditBankAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.SystemSettingService.EditBankAccountImport import = ((IWorld.Admin.SystemSettingService.EditBankAccountImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginEditBankAccount(import, token, callback, asyncState);
        }
        
        private object[] OnEndEditBankAccount(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.OperateResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndEditBankAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditBankAccountCompleted(object state) {
            if ((this.EditBankAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditBankAccountCompleted(this, new EditBankAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditBankAccountAsync(IWorld.Admin.SystemSettingService.EditBankAccountImport import, string token) {
            this.EditBankAccountAsync(import, token, null);
        }
        
        public void EditBankAccountAsync(IWorld.Admin.SystemSettingService.EditBankAccountImport import, string token, object userState) {
            if ((this.onBeginEditBankAccountDelegate == null)) {
                this.onBeginEditBankAccountDelegate = new BeginOperationDelegate(this.OnBeginEditBankAccount);
            }
            if ((this.onEndEditBankAccountDelegate == null)) {
                this.onEndEditBankAccountDelegate = new EndOperationDelegate(this.OnEndEditBankAccount);
            }
            if ((this.onEditBankAccountCompletedDelegate == null)) {
                this.onEditBankAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditBankAccountCompleted);
            }
            base.InvokeAsync(this.onBeginEditBankAccountDelegate, new object[] {
                        import,
                        token}, this.onEndEditBankAccountDelegate, this.onEditBankAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginSetDefaultBankAccount(int bankAccountId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDefaultBankAccount(bankAccountId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.OperateResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndSetDefaultBankAccount(System.IAsyncResult result) {
            return base.Channel.EndSetDefaultBankAccount(result);
        }
        
        private System.IAsyncResult OnBeginSetDefaultBankAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int bankAccountId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginSetDefaultBankAccount(bankAccountId, token, callback, asyncState);
        }
        
        private object[] OnEndSetDefaultBankAccount(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.OperateResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndSetDefaultBankAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetDefaultBankAccountCompleted(object state) {
            if ((this.SetDefaultBankAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDefaultBankAccountCompleted(this, new SetDefaultBankAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDefaultBankAccountAsync(int bankAccountId, string token) {
            this.SetDefaultBankAccountAsync(bankAccountId, token, null);
        }
        
        public void SetDefaultBankAccountAsync(int bankAccountId, string token, object userState) {
            if ((this.onBeginSetDefaultBankAccountDelegate == null)) {
                this.onBeginSetDefaultBankAccountDelegate = new BeginOperationDelegate(this.OnBeginSetDefaultBankAccount);
            }
            if ((this.onEndSetDefaultBankAccountDelegate == null)) {
                this.onEndSetDefaultBankAccountDelegate = new EndOperationDelegate(this.OnEndSetDefaultBankAccount);
            }
            if ((this.onSetDefaultBankAccountCompletedDelegate == null)) {
                this.onSetDefaultBankAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDefaultBankAccountCompleted);
            }
            base.InvokeAsync(this.onBeginSetDefaultBankAccountDelegate, new object[] {
                        bankAccountId,
                        token}, this.onEndSetDefaultBankAccountDelegate, this.onSetDefaultBankAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginRemoveBankAccount(int bankAccountId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveBankAccount(bankAccountId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.OperateResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndRemoveBankAccount(System.IAsyncResult result) {
            return base.Channel.EndRemoveBankAccount(result);
        }
        
        private System.IAsyncResult OnBeginRemoveBankAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int bankAccountId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginRemoveBankAccount(bankAccountId, token, callback, asyncState);
        }
        
        private object[] OnEndRemoveBankAccount(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.OperateResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndRemoveBankAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveBankAccountCompleted(object state) {
            if ((this.RemoveBankAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveBankAccountCompleted(this, new RemoveBankAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveBankAccountAsync(int bankAccountId, string token) {
            this.RemoveBankAccountAsync(bankAccountId, token, null);
        }
        
        public void RemoveBankAccountAsync(int bankAccountId, string token, object userState) {
            if ((this.onBeginRemoveBankAccountDelegate == null)) {
                this.onBeginRemoveBankAccountDelegate = new BeginOperationDelegate(this.OnBeginRemoveBankAccount);
            }
            if ((this.onEndRemoveBankAccountDelegate == null)) {
                this.onEndRemoveBankAccountDelegate = new EndOperationDelegate(this.OnEndRemoveBankAccount);
            }
            if ((this.onRemoveBankAccountCompletedDelegate == null)) {
                this.onRemoveBankAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveBankAccountCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveBankAccountDelegate, new object[] {
                        bankAccountId,
                        token}, this.onEndRemoveBankAccountDelegate, this.onRemoveBankAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginGetEmailAccountList(int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmailAccountList(page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.PaginationListOfEmailAccountResultp9CVq9mK IWorld.Admin.SystemSettingService.ISystemSettingService.EndGetEmailAccountList(System.IAsyncResult result) {
            return base.Channel.EndGetEmailAccountList(result);
        }
        
        private System.IAsyncResult OnBeginGetEmailAccountList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int page = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginGetEmailAccountList(page, token, callback, asyncState);
        }
        
        private object[] OnEndGetEmailAccountList(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.PaginationListOfEmailAccountResultp9CVq9mK retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndGetEmailAccountList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmailAccountListCompleted(object state) {
            if ((this.GetEmailAccountListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmailAccountListCompleted(this, new GetEmailAccountListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmailAccountListAsync(int page, string token) {
            this.GetEmailAccountListAsync(page, token, null);
        }
        
        public void GetEmailAccountListAsync(int page, string token, object userState) {
            if ((this.onBeginGetEmailAccountListDelegate == null)) {
                this.onBeginGetEmailAccountListDelegate = new BeginOperationDelegate(this.OnBeginGetEmailAccountList);
            }
            if ((this.onEndGetEmailAccountListDelegate == null)) {
                this.onEndGetEmailAccountListDelegate = new EndOperationDelegate(this.OnEndGetEmailAccountList);
            }
            if ((this.onGetEmailAccountListCompletedDelegate == null)) {
                this.onGetEmailAccountListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmailAccountListCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmailAccountListDelegate, new object[] {
                        page,
                        token}, this.onEndGetEmailAccountListDelegate, this.onGetEmailAccountListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginAddEmailAccount(IWorld.Admin.SystemSettingService.AddEmailAccountImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddEmailAccount(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.OperateResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndAddEmailAccount(System.IAsyncResult result) {
            return base.Channel.EndAddEmailAccount(result);
        }
        
        private System.IAsyncResult OnBeginAddEmailAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.SystemSettingService.AddEmailAccountImport import = ((IWorld.Admin.SystemSettingService.AddEmailAccountImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginAddEmailAccount(import, token, callback, asyncState);
        }
        
        private object[] OnEndAddEmailAccount(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.OperateResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndAddEmailAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddEmailAccountCompleted(object state) {
            if ((this.AddEmailAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddEmailAccountCompleted(this, new AddEmailAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddEmailAccountAsync(IWorld.Admin.SystemSettingService.AddEmailAccountImport import, string token) {
            this.AddEmailAccountAsync(import, token, null);
        }
        
        public void AddEmailAccountAsync(IWorld.Admin.SystemSettingService.AddEmailAccountImport import, string token, object userState) {
            if ((this.onBeginAddEmailAccountDelegate == null)) {
                this.onBeginAddEmailAccountDelegate = new BeginOperationDelegate(this.OnBeginAddEmailAccount);
            }
            if ((this.onEndAddEmailAccountDelegate == null)) {
                this.onEndAddEmailAccountDelegate = new EndOperationDelegate(this.OnEndAddEmailAccount);
            }
            if ((this.onAddEmailAccountCompletedDelegate == null)) {
                this.onAddEmailAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddEmailAccountCompleted);
            }
            base.InvokeAsync(this.onBeginAddEmailAccountDelegate, new object[] {
                        import,
                        token}, this.onEndAddEmailAccountDelegate, this.onAddEmailAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginEditEmailAccount(IWorld.Admin.SystemSettingService.EditEmailAccountImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditEmailAccount(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.OperateResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndEditEmailAccount(System.IAsyncResult result) {
            return base.Channel.EndEditEmailAccount(result);
        }
        
        private System.IAsyncResult OnBeginEditEmailAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.SystemSettingService.EditEmailAccountImport import = ((IWorld.Admin.SystemSettingService.EditEmailAccountImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginEditEmailAccount(import, token, callback, asyncState);
        }
        
        private object[] OnEndEditEmailAccount(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.OperateResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndEditEmailAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditEmailAccountCompleted(object state) {
            if ((this.EditEmailAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditEmailAccountCompleted(this, new EditEmailAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditEmailAccountAsync(IWorld.Admin.SystemSettingService.EditEmailAccountImport import, string token) {
            this.EditEmailAccountAsync(import, token, null);
        }
        
        public void EditEmailAccountAsync(IWorld.Admin.SystemSettingService.EditEmailAccountImport import, string token, object userState) {
            if ((this.onBeginEditEmailAccountDelegate == null)) {
                this.onBeginEditEmailAccountDelegate = new BeginOperationDelegate(this.OnBeginEditEmailAccount);
            }
            if ((this.onEndEditEmailAccountDelegate == null)) {
                this.onEndEditEmailAccountDelegate = new EndOperationDelegate(this.OnEndEditEmailAccount);
            }
            if ((this.onEditEmailAccountCompletedDelegate == null)) {
                this.onEditEmailAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditEmailAccountCompleted);
            }
            base.InvokeAsync(this.onBeginEditEmailAccountDelegate, new object[] {
                        import,
                        token}, this.onEndEditEmailAccountDelegate, this.onEditEmailAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginSetDefaultEmailAccount(int emailAccountId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDefaultEmailAccount(emailAccountId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.OperateResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndSetDefaultEmailAccount(System.IAsyncResult result) {
            return base.Channel.EndSetDefaultEmailAccount(result);
        }
        
        private System.IAsyncResult OnBeginSetDefaultEmailAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int emailAccountId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginSetDefaultEmailAccount(emailAccountId, token, callback, asyncState);
        }
        
        private object[] OnEndSetDefaultEmailAccount(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.OperateResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndSetDefaultEmailAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetDefaultEmailAccountCompleted(object state) {
            if ((this.SetDefaultEmailAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDefaultEmailAccountCompleted(this, new SetDefaultEmailAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDefaultEmailAccountAsync(int emailAccountId, string token) {
            this.SetDefaultEmailAccountAsync(emailAccountId, token, null);
        }
        
        public void SetDefaultEmailAccountAsync(int emailAccountId, string token, object userState) {
            if ((this.onBeginSetDefaultEmailAccountDelegate == null)) {
                this.onBeginSetDefaultEmailAccountDelegate = new BeginOperationDelegate(this.OnBeginSetDefaultEmailAccount);
            }
            if ((this.onEndSetDefaultEmailAccountDelegate == null)) {
                this.onEndSetDefaultEmailAccountDelegate = new EndOperationDelegate(this.OnEndSetDefaultEmailAccount);
            }
            if ((this.onSetDefaultEmailAccountCompletedDelegate == null)) {
                this.onSetDefaultEmailAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDefaultEmailAccountCompleted);
            }
            base.InvokeAsync(this.onBeginSetDefaultEmailAccountDelegate, new object[] {
                        emailAccountId,
                        token}, this.onEndSetDefaultEmailAccountDelegate, this.onSetDefaultEmailAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginRemoveEmailAccount(int emailAccountId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveEmailAccount(emailAccountId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.OperateResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndRemoveEmailAccount(System.IAsyncResult result) {
            return base.Channel.EndRemoveEmailAccount(result);
        }
        
        private System.IAsyncResult OnBeginRemoveEmailAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int emailAccountId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginRemoveEmailAccount(emailAccountId, token, callback, asyncState);
        }
        
        private object[] OnEndRemoveEmailAccount(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.OperateResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndRemoveEmailAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveEmailAccountCompleted(object state) {
            if ((this.RemoveEmailAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveEmailAccountCompleted(this, new RemoveEmailAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveEmailAccountAsync(int emailAccountId, string token) {
            this.RemoveEmailAccountAsync(emailAccountId, token, null);
        }
        
        public void RemoveEmailAccountAsync(int emailAccountId, string token, object userState) {
            if ((this.onBeginRemoveEmailAccountDelegate == null)) {
                this.onBeginRemoveEmailAccountDelegate = new BeginOperationDelegate(this.OnBeginRemoveEmailAccount);
            }
            if ((this.onEndRemoveEmailAccountDelegate == null)) {
                this.onEndRemoveEmailAccountDelegate = new EndOperationDelegate(this.OnEndRemoveEmailAccount);
            }
            if ((this.onRemoveEmailAccountCompletedDelegate == null)) {
                this.onRemoveEmailAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveEmailAccountCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveEmailAccountDelegate, new object[] {
                        emailAccountId,
                        token}, this.onEndRemoveEmailAccountDelegate, this.onRemoveEmailAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginGetEmailClientList(int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmailClientList(page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.PaginationListOfEmailClientResultp9CVq9mK IWorld.Admin.SystemSettingService.ISystemSettingService.EndGetEmailClientList(System.IAsyncResult result) {
            return base.Channel.EndGetEmailClientList(result);
        }
        
        private System.IAsyncResult OnBeginGetEmailClientList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int page = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginGetEmailClientList(page, token, callback, asyncState);
        }
        
        private object[] OnEndGetEmailClientList(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.PaginationListOfEmailClientResultp9CVq9mK retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndGetEmailClientList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmailClientListCompleted(object state) {
            if ((this.GetEmailClientListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmailClientListCompleted(this, new GetEmailClientListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmailClientListAsync(int page, string token) {
            this.GetEmailClientListAsync(page, token, null);
        }
        
        public void GetEmailClientListAsync(int page, string token, object userState) {
            if ((this.onBeginGetEmailClientListDelegate == null)) {
                this.onBeginGetEmailClientListDelegate = new BeginOperationDelegate(this.OnBeginGetEmailClientList);
            }
            if ((this.onEndGetEmailClientListDelegate == null)) {
                this.onEndGetEmailClientListDelegate = new EndOperationDelegate(this.OnEndGetEmailClientList);
            }
            if ((this.onGetEmailClientListCompletedDelegate == null)) {
                this.onGetEmailClientListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmailClientListCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmailClientListDelegate, new object[] {
                        page,
                        token}, this.onEndGetEmailClientListDelegate, this.onGetEmailClientListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginAddEmailClient(IWorld.Admin.SystemSettingService.AddEmailClientImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddEmailClient(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.OperateResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndAddEmailClient(System.IAsyncResult result) {
            return base.Channel.EndAddEmailClient(result);
        }
        
        private System.IAsyncResult OnBeginAddEmailClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.SystemSettingService.AddEmailClientImport import = ((IWorld.Admin.SystemSettingService.AddEmailClientImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginAddEmailClient(import, token, callback, asyncState);
        }
        
        private object[] OnEndAddEmailClient(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.OperateResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndAddEmailClient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddEmailClientCompleted(object state) {
            if ((this.AddEmailClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddEmailClientCompleted(this, new AddEmailClientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddEmailClientAsync(IWorld.Admin.SystemSettingService.AddEmailClientImport import, string token) {
            this.AddEmailClientAsync(import, token, null);
        }
        
        public void AddEmailClientAsync(IWorld.Admin.SystemSettingService.AddEmailClientImport import, string token, object userState) {
            if ((this.onBeginAddEmailClientDelegate == null)) {
                this.onBeginAddEmailClientDelegate = new BeginOperationDelegate(this.OnBeginAddEmailClient);
            }
            if ((this.onEndAddEmailClientDelegate == null)) {
                this.onEndAddEmailClientDelegate = new EndOperationDelegate(this.OnEndAddEmailClient);
            }
            if ((this.onAddEmailClientCompletedDelegate == null)) {
                this.onAddEmailClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddEmailClientCompleted);
            }
            base.InvokeAsync(this.onBeginAddEmailClientDelegate, new object[] {
                        import,
                        token}, this.onEndAddEmailClientDelegate, this.onAddEmailClientCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginEditEmailClient(IWorld.Admin.SystemSettingService.EditEmailClientImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditEmailClient(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.OperateResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndEditEmailClient(System.IAsyncResult result) {
            return base.Channel.EndEditEmailClient(result);
        }
        
        private System.IAsyncResult OnBeginEditEmailClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.SystemSettingService.EditEmailClientImport import = ((IWorld.Admin.SystemSettingService.EditEmailClientImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginEditEmailClient(import, token, callback, asyncState);
        }
        
        private object[] OnEndEditEmailClient(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.OperateResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndEditEmailClient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditEmailClientCompleted(object state) {
            if ((this.EditEmailClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditEmailClientCompleted(this, new EditEmailClientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditEmailClientAsync(IWorld.Admin.SystemSettingService.EditEmailClientImport import, string token) {
            this.EditEmailClientAsync(import, token, null);
        }
        
        public void EditEmailClientAsync(IWorld.Admin.SystemSettingService.EditEmailClientImport import, string token, object userState) {
            if ((this.onBeginEditEmailClientDelegate == null)) {
                this.onBeginEditEmailClientDelegate = new BeginOperationDelegate(this.OnBeginEditEmailClient);
            }
            if ((this.onEndEditEmailClientDelegate == null)) {
                this.onEndEditEmailClientDelegate = new EndOperationDelegate(this.OnEndEditEmailClient);
            }
            if ((this.onEditEmailClientCompletedDelegate == null)) {
                this.onEditEmailClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditEmailClientCompleted);
            }
            base.InvokeAsync(this.onBeginEditEmailClientDelegate, new object[] {
                        import,
                        token}, this.onEndEditEmailClientDelegate, this.onEditEmailClientCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginSetDefaultEmailClient(int emailClientId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDefaultEmailClient(emailClientId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.OperateResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndSetDefaultEmailClient(System.IAsyncResult result) {
            return base.Channel.EndSetDefaultEmailClient(result);
        }
        
        private System.IAsyncResult OnBeginSetDefaultEmailClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int emailClientId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginSetDefaultEmailClient(emailClientId, token, callback, asyncState);
        }
        
        private object[] OnEndSetDefaultEmailClient(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.OperateResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndSetDefaultEmailClient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetDefaultEmailClientCompleted(object state) {
            if ((this.SetDefaultEmailClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDefaultEmailClientCompleted(this, new SetDefaultEmailClientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDefaultEmailClientAsync(int emailClientId, string token) {
            this.SetDefaultEmailClientAsync(emailClientId, token, null);
        }
        
        public void SetDefaultEmailClientAsync(int emailClientId, string token, object userState) {
            if ((this.onBeginSetDefaultEmailClientDelegate == null)) {
                this.onBeginSetDefaultEmailClientDelegate = new BeginOperationDelegate(this.OnBeginSetDefaultEmailClient);
            }
            if ((this.onEndSetDefaultEmailClientDelegate == null)) {
                this.onEndSetDefaultEmailClientDelegate = new EndOperationDelegate(this.OnEndSetDefaultEmailClient);
            }
            if ((this.onSetDefaultEmailClientCompletedDelegate == null)) {
                this.onSetDefaultEmailClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDefaultEmailClientCompleted);
            }
            base.InvokeAsync(this.onBeginSetDefaultEmailClientDelegate, new object[] {
                        emailClientId,
                        token}, this.onEndSetDefaultEmailClientDelegate, this.onSetDefaultEmailClientCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginRemoveEmailClient(int emailClientId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveEmailClient(emailClientId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.OperateResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndRemoveEmailClient(System.IAsyncResult result) {
            return base.Channel.EndRemoveEmailClient(result);
        }
        
        private System.IAsyncResult OnBeginRemoveEmailClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int emailClientId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginRemoveEmailClient(emailClientId, token, callback, asyncState);
        }
        
        private object[] OnEndRemoveEmailClient(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.OperateResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndRemoveEmailClient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveEmailClientCompleted(object state) {
            if ((this.RemoveEmailClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveEmailClientCompleted(this, new RemoveEmailClientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveEmailClientAsync(int emailClientId, string token) {
            this.RemoveEmailClientAsync(emailClientId, token, null);
        }
        
        public void RemoveEmailClientAsync(int emailClientId, string token, object userState) {
            if ((this.onBeginRemoveEmailClientDelegate == null)) {
                this.onBeginRemoveEmailClientDelegate = new BeginOperationDelegate(this.OnBeginRemoveEmailClient);
            }
            if ((this.onEndRemoveEmailClientDelegate == null)) {
                this.onEndRemoveEmailClientDelegate = new EndOperationDelegate(this.OnEndRemoveEmailClient);
            }
            if ((this.onRemoveEmailClientCompletedDelegate == null)) {
                this.onRemoveEmailClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveEmailClientCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveEmailClientDelegate, new object[] {
                        emailClientId,
                        token}, this.onEndRemoveEmailClientDelegate, this.onRemoveEmailClientCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginGetCollectionStatusResult(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCollectionStatusResult(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.CollectionStatusResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndGetCollectionStatusResult(System.IAsyncResult result) {
            return base.Channel.EndGetCollectionStatusResult(result);
        }
        
        private System.IAsyncResult OnBeginGetCollectionStatusResult(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginGetCollectionStatusResult(token, callback, asyncState);
        }
        
        private object[] OnEndGetCollectionStatusResult(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.CollectionStatusResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndGetCollectionStatusResult(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCollectionStatusResultCompleted(object state) {
            if ((this.GetCollectionStatusResultCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCollectionStatusResultCompleted(this, new GetCollectionStatusResultCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCollectionStatusResultAsync(string token) {
            this.GetCollectionStatusResultAsync(token, null);
        }
        
        public void GetCollectionStatusResultAsync(string token, object userState) {
            if ((this.onBeginGetCollectionStatusResultDelegate == null)) {
                this.onBeginGetCollectionStatusResultDelegate = new BeginOperationDelegate(this.OnBeginGetCollectionStatusResult);
            }
            if ((this.onEndGetCollectionStatusResultDelegate == null)) {
                this.onEndGetCollectionStatusResultDelegate = new EndOperationDelegate(this.OnEndGetCollectionStatusResult);
            }
            if ((this.onGetCollectionStatusResultCompletedDelegate == null)) {
                this.onGetCollectionStatusResultCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCollectionStatusResultCompleted);
            }
            base.InvokeAsync(this.onBeginGetCollectionStatusResultDelegate, new object[] {
                        token}, this.onEndGetCollectionStatusResultDelegate, this.onGetCollectionStatusResultCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginCloseOrOpenCollection(bool close, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCloseOrOpenCollection(close, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.OperateResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndCloseOrOpenCollection(System.IAsyncResult result) {
            return base.Channel.EndCloseOrOpenCollection(result);
        }
        
        private System.IAsyncResult OnBeginCloseOrOpenCollection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool close = ((bool)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginCloseOrOpenCollection(close, token, callback, asyncState);
        }
        
        private object[] OnEndCloseOrOpenCollection(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.OperateResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndCloseOrOpenCollection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCloseOrOpenCollectionCompleted(object state) {
            if ((this.CloseOrOpenCollectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseOrOpenCollectionCompleted(this, new CloseOrOpenCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseOrOpenCollectionAsync(bool close, string token) {
            this.CloseOrOpenCollectionAsync(close, token, null);
        }
        
        public void CloseOrOpenCollectionAsync(bool close, string token, object userState) {
            if ((this.onBeginCloseOrOpenCollectionDelegate == null)) {
                this.onBeginCloseOrOpenCollectionDelegate = new BeginOperationDelegate(this.OnBeginCloseOrOpenCollection);
            }
            if ((this.onEndCloseOrOpenCollectionDelegate == null)) {
                this.onEndCloseOrOpenCollectionDelegate = new EndOperationDelegate(this.OnEndCloseOrOpenCollection);
            }
            if ((this.onCloseOrOpenCollectionCompletedDelegate == null)) {
                this.onCloseOrOpenCollectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseOrOpenCollectionCompleted);
            }
            base.InvokeAsync(this.onBeginCloseOrOpenCollectionDelegate, new object[] {
                        close,
                        token}, this.onEndCloseOrOpenCollectionDelegate, this.onCloseOrOpenCollectionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.SystemSettingService.ISystemSettingService.BeginClearCachePond(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearCachePond(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.SystemSettingService.OperateResult IWorld.Admin.SystemSettingService.ISystemSettingService.EndClearCachePond(System.IAsyncResult result) {
            return base.Channel.EndClearCachePond(result);
        }
        
        private System.IAsyncResult OnBeginClearCachePond(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).BeginClearCachePond(token, callback, asyncState);
        }
        
        private object[] OnEndClearCachePond(System.IAsyncResult result) {
            IWorld.Admin.SystemSettingService.OperateResult retVal = ((IWorld.Admin.SystemSettingService.ISystemSettingService)(this)).EndClearCachePond(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClearCachePondCompleted(object state) {
            if ((this.ClearCachePondCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearCachePondCompleted(this, new ClearCachePondCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearCachePondAsync(string token) {
            this.ClearCachePondAsync(token, null);
        }
        
        public void ClearCachePondAsync(string token, object userState) {
            if ((this.onBeginClearCachePondDelegate == null)) {
                this.onBeginClearCachePondDelegate = new BeginOperationDelegate(this.OnBeginClearCachePond);
            }
            if ((this.onEndClearCachePondDelegate == null)) {
                this.onEndClearCachePondDelegate = new EndOperationDelegate(this.OnEndClearCachePond);
            }
            if ((this.onClearCachePondCompletedDelegate == null)) {
                this.onClearCachePondCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearCachePondCompleted);
            }
            base.InvokeAsync(this.onBeginClearCachePondDelegate, new object[] {
                        token}, this.onEndClearCachePondDelegate, this.onClearCachePondCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IWorld.Admin.SystemSettingService.ISystemSettingService CreateChannel() {
            return new SystemSettingServiceClientChannel(this);
        }
        
        private class SystemSettingServiceClientChannel : ChannelBase<IWorld.Admin.SystemSettingService.ISystemSettingService>, IWorld.Admin.SystemSettingService.ISystemSettingService {
            
            public SystemSettingServiceClientChannel(System.ServiceModel.ClientBase<IWorld.Admin.SystemSettingService.ISystemSettingService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetWebSetting(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetWebSetting", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.WebSettingResult EndGetWebSetting(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.WebSettingResult _result = ((IWorld.Admin.SystemSettingService.WebSettingResult)(base.EndInvoke("GetWebSetting", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditWebSetting(IWorld.Admin.SystemSettingService.EditWebSettingImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("EditWebSetting", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.OperateResult EndEditWebSetting(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.OperateResult _result = ((IWorld.Admin.SystemSettingService.OperateResult)(base.EndInvoke("EditWebSetting", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBankAccountList(int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = page;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetBankAccountList", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.PaginationListOfBankAccountResultp9CVq9mK EndGetBankAccountList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.PaginationListOfBankAccountResultp9CVq9mK _result = ((IWorld.Admin.SystemSettingService.PaginationListOfBankAccountResultp9CVq9mK)(base.EndInvoke("GetBankAccountList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddBankAccount(IWorld.Admin.SystemSettingService.AddBankAccountImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("AddBankAccount", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.OperateResult EndAddBankAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.OperateResult _result = ((IWorld.Admin.SystemSettingService.OperateResult)(base.EndInvoke("AddBankAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditBankAccount(IWorld.Admin.SystemSettingService.EditBankAccountImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("EditBankAccount", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.OperateResult EndEditBankAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.OperateResult _result = ((IWorld.Admin.SystemSettingService.OperateResult)(base.EndInvoke("EditBankAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetDefaultBankAccount(int bankAccountId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = bankAccountId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("SetDefaultBankAccount", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.OperateResult EndSetDefaultBankAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.OperateResult _result = ((IWorld.Admin.SystemSettingService.OperateResult)(base.EndInvoke("SetDefaultBankAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveBankAccount(int bankAccountId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = bankAccountId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("RemoveBankAccount", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.OperateResult EndRemoveBankAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.OperateResult _result = ((IWorld.Admin.SystemSettingService.OperateResult)(base.EndInvoke("RemoveBankAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEmailAccountList(int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = page;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetEmailAccountList", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.PaginationListOfEmailAccountResultp9CVq9mK EndGetEmailAccountList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.PaginationListOfEmailAccountResultp9CVq9mK _result = ((IWorld.Admin.SystemSettingService.PaginationListOfEmailAccountResultp9CVq9mK)(base.EndInvoke("GetEmailAccountList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddEmailAccount(IWorld.Admin.SystemSettingService.AddEmailAccountImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("AddEmailAccount", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.OperateResult EndAddEmailAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.OperateResult _result = ((IWorld.Admin.SystemSettingService.OperateResult)(base.EndInvoke("AddEmailAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditEmailAccount(IWorld.Admin.SystemSettingService.EditEmailAccountImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("EditEmailAccount", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.OperateResult EndEditEmailAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.OperateResult _result = ((IWorld.Admin.SystemSettingService.OperateResult)(base.EndInvoke("EditEmailAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetDefaultEmailAccount(int emailAccountId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = emailAccountId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("SetDefaultEmailAccount", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.OperateResult EndSetDefaultEmailAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.OperateResult _result = ((IWorld.Admin.SystemSettingService.OperateResult)(base.EndInvoke("SetDefaultEmailAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveEmailAccount(int emailAccountId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = emailAccountId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("RemoveEmailAccount", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.OperateResult EndRemoveEmailAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.OperateResult _result = ((IWorld.Admin.SystemSettingService.OperateResult)(base.EndInvoke("RemoveEmailAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEmailClientList(int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = page;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetEmailClientList", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.PaginationListOfEmailClientResultp9CVq9mK EndGetEmailClientList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.PaginationListOfEmailClientResultp9CVq9mK _result = ((IWorld.Admin.SystemSettingService.PaginationListOfEmailClientResultp9CVq9mK)(base.EndInvoke("GetEmailClientList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddEmailClient(IWorld.Admin.SystemSettingService.AddEmailClientImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("AddEmailClient", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.OperateResult EndAddEmailClient(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.OperateResult _result = ((IWorld.Admin.SystemSettingService.OperateResult)(base.EndInvoke("AddEmailClient", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditEmailClient(IWorld.Admin.SystemSettingService.EditEmailClientImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("EditEmailClient", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.OperateResult EndEditEmailClient(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.OperateResult _result = ((IWorld.Admin.SystemSettingService.OperateResult)(base.EndInvoke("EditEmailClient", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetDefaultEmailClient(int emailClientId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = emailClientId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("SetDefaultEmailClient", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.OperateResult EndSetDefaultEmailClient(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.OperateResult _result = ((IWorld.Admin.SystemSettingService.OperateResult)(base.EndInvoke("SetDefaultEmailClient", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveEmailClient(int emailClientId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = emailClientId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("RemoveEmailClient", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.OperateResult EndRemoveEmailClient(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.OperateResult _result = ((IWorld.Admin.SystemSettingService.OperateResult)(base.EndInvoke("RemoveEmailClient", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCollectionStatusResult(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetCollectionStatusResult", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.CollectionStatusResult EndGetCollectionStatusResult(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.CollectionStatusResult _result = ((IWorld.Admin.SystemSettingService.CollectionStatusResult)(base.EndInvoke("GetCollectionStatusResult", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCloseOrOpenCollection(bool close, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = close;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("CloseOrOpenCollection", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.OperateResult EndCloseOrOpenCollection(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.OperateResult _result = ((IWorld.Admin.SystemSettingService.OperateResult)(base.EndInvoke("CloseOrOpenCollection", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginClearCachePond(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("ClearCachePond", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.SystemSettingService.OperateResult EndClearCachePond(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.SystemSettingService.OperateResult _result = ((IWorld.Admin.SystemSettingService.OperateResult)(base.EndInvoke("ClearCachePond", _args, result)));
                return _result;
            }
        }
    }
}
