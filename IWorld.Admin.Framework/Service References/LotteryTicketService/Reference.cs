//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18051
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace IWorld.Admin.Framework.LotteryTicketService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HideOrNotSelectType", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public enum HideOrNotSelectType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        全部 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        显示 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        隐藏 = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperateResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryTimeResultp9CVq9mK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryResultp9CVq9mK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.Framework.LotteryTicketService.PaginationListOfPlayTagResultp9CVq9mK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.Framework.LotteryTicketService.PaginationListOfHowToPlayResultp9CVq9mK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.Framework.LotteryTicketService.PaginationListOfVirtualTopResultp9CVq9mK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.Framework.LotteryTicketService.PaginationListOfTicketResultp9CVq9mK))]
    public partial class OperateResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfLotteryTimeResultp9CVq9mK", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class PaginationListOfLotteryTimeResultp9CVq9mK : IWorld.Admin.Framework.LotteryTicketService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.LotteryTimeResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.LotteryTimeResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfLotteryResultp9CVq9mK", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class PaginationListOfLotteryResultp9CVq9mK : IWorld.Admin.Framework.LotteryTicketService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.LotteryResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.LotteryResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfPlayTagResultp9CVq9mK", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class PaginationListOfPlayTagResultp9CVq9mK : IWorld.Admin.Framework.LotteryTicketService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.PlayTagResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.PlayTagResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfHowToPlayResultp9CVq9mK", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class PaginationListOfHowToPlayResultp9CVq9mK : IWorld.Admin.Framework.LotteryTicketService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.HowToPlayResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.HowToPlayResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfVirtualTopResultp9CVq9mK", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class PaginationListOfVirtualTopResultp9CVq9mK : IWorld.Admin.Framework.LotteryTicketService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.VirtualTopResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.VirtualTopResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfTicketResultp9CVq9mK", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class PaginationListOfTicketResultp9CVq9mK : IWorld.Admin.Framework.LotteryTicketService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.TicketResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.TicketResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TicketResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class TicketResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CountOfHowToPlayField;
        
        private int CountOfPlayTagField;
        
        private bool HideField;
        
        private string LotteryField;
        
        private System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.LotteryTimeResult> LotteryTimesField;
        
        private string NameField;
        
        private System.DateTime NextLotteryTimeField;
        
        private string NextPhasesField;
        
        private int OrderField;
        
        private string PhasesField;
        
        private int TicketIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountOfHowToPlay {
            get {
                return this.CountOfHowToPlayField;
            }
            set {
                if ((this.CountOfHowToPlayField.Equals(value) != true)) {
                    this.CountOfHowToPlayField = value;
                    this.RaisePropertyChanged("CountOfHowToPlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountOfPlayTag {
            get {
                return this.CountOfPlayTagField;
            }
            set {
                if ((this.CountOfPlayTagField.Equals(value) != true)) {
                    this.CountOfPlayTagField = value;
                    this.RaisePropertyChanged("CountOfPlayTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hide {
            get {
                return this.HideField;
            }
            set {
                if ((this.HideField.Equals(value) != true)) {
                    this.HideField = value;
                    this.RaisePropertyChanged("Hide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lottery {
            get {
                return this.LotteryField;
            }
            set {
                if ((object.ReferenceEquals(this.LotteryField, value) != true)) {
                    this.LotteryField = value;
                    this.RaisePropertyChanged("Lottery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.LotteryTimeResult> LotteryTimes {
            get {
                return this.LotteryTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.LotteryTimesField, value) != true)) {
                    this.LotteryTimesField = value;
                    this.RaisePropertyChanged("LotteryTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NextLotteryTime {
            get {
                return this.NextLotteryTimeField;
            }
            set {
                if ((this.NextLotteryTimeField.Equals(value) != true)) {
                    this.NextLotteryTimeField = value;
                    this.RaisePropertyChanged("NextLotteryTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextPhases {
            get {
                return this.NextPhasesField;
            }
            set {
                if ((object.ReferenceEquals(this.NextPhasesField, value) != true)) {
                    this.NextPhasesField = value;
                    this.RaisePropertyChanged("NextPhases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phases {
            get {
                return this.PhasesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhasesField, value) != true)) {
                    this.PhasesField = value;
                    this.RaisePropertyChanged("Phases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LotteryTimeResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class LotteryTimeResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int LotteryTimeIdField;
        
        private int PhasesField;
        
        private string TimeValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LotteryTimeId {
            get {
                return this.LotteryTimeIdField;
            }
            set {
                if ((this.LotteryTimeIdField.Equals(value) != true)) {
                    this.LotteryTimeIdField = value;
                    this.RaisePropertyChanged("LotteryTimeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Phases {
            get {
                return this.PhasesField;
            }
            set {
                if ((this.PhasesField.Equals(value) != true)) {
                    this.PhasesField = value;
                    this.RaisePropertyChanged("Phases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeValue {
            get {
                return this.TimeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeValueField, value) != true)) {
                    this.TimeValueField = value;
                    this.RaisePropertyChanged("TimeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LotteryResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class LotteryResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int LotteryIdField;
        
        private string OperatorField;
        
        private string PhasesField;
        
        private string SeatsField;
        
        private IWorld.Admin.Framework.LotteryTicketService.LotterySources SourcesField;
        
        private int TicketIdField;
        
        private string TicketNameField;
        
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LotteryId {
            get {
                return this.LotteryIdField;
            }
            set {
                if ((this.LotteryIdField.Equals(value) != true)) {
                    this.LotteryIdField = value;
                    this.RaisePropertyChanged("LotteryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phases {
            get {
                return this.PhasesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhasesField, value) != true)) {
                    this.PhasesField = value;
                    this.RaisePropertyChanged("Phases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Seats {
            get {
                return this.SeatsField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatsField, value) != true)) {
                    this.SeatsField = value;
                    this.RaisePropertyChanged("Seats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Admin.Framework.LotteryTicketService.LotterySources Sources {
            get {
                return this.SourcesField;
            }
            set {
                if ((this.SourcesField.Equals(value) != true)) {
                    this.SourcesField = value;
                    this.RaisePropertyChanged("Sources");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TicketName {
            get {
                return this.TicketNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketNameField, value) != true)) {
                    this.TicketNameField = value;
                    this.RaisePropertyChanged("TicketName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LotterySources", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Model")]
    public enum LotterySources : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        系统采集 = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        手动 = 201,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayTagResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class PlayTagResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CountOfHowToPlayField;
        
        private bool HideField;
        
        private string NameField;
        
        private int OrderField;
        
        private int PlayTagIdField;
        
        private int TicketIdField;
        
        private string TicketNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountOfHowToPlay {
            get {
                return this.CountOfHowToPlayField;
            }
            set {
                if ((this.CountOfHowToPlayField.Equals(value) != true)) {
                    this.CountOfHowToPlayField = value;
                    this.RaisePropertyChanged("CountOfHowToPlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hide {
            get {
                return this.HideField;
            }
            set {
                if ((this.HideField.Equals(value) != true)) {
                    this.HideField = value;
                    this.RaisePropertyChanged("Hide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayTagId {
            get {
                return this.PlayTagIdField;
            }
            set {
                if ((this.PlayTagIdField.Equals(value) != true)) {
                    this.PlayTagIdField = value;
                    this.RaisePropertyChanged("PlayTagId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TicketName {
            get {
                return this.TicketNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketNameField, value) != true)) {
                    this.TicketNameField = value;
                    this.RaisePropertyChanged("TicketName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HowToPlayResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class HowToPlayResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double CardinalNumberField;
        
        private double ConversionRatesField;
        
        private string DescriptionField;
        
        private bool HideField;
        
        private int HowToPlayIdField;
        
        private string NameField;
        
        private double OddsField;
        
        private int OrderField;
        
        private string RuleField;
        
        private int TagIdField;
        
        private string TagNameField;
        
        private int TicketIdField;
        
        private string TicketNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CardinalNumber {
            get {
                return this.CardinalNumberField;
            }
            set {
                if ((this.CardinalNumberField.Equals(value) != true)) {
                    this.CardinalNumberField = value;
                    this.RaisePropertyChanged("CardinalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ConversionRates {
            get {
                return this.ConversionRatesField;
            }
            set {
                if ((this.ConversionRatesField.Equals(value) != true)) {
                    this.ConversionRatesField = value;
                    this.RaisePropertyChanged("ConversionRates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hide {
            get {
                return this.HideField;
            }
            set {
                if ((this.HideField.Equals(value) != true)) {
                    this.HideField = value;
                    this.RaisePropertyChanged("Hide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HowToPlayId {
            get {
                return this.HowToPlayIdField;
            }
            set {
                if ((this.HowToPlayIdField.Equals(value) != true)) {
                    this.HowToPlayIdField = value;
                    this.RaisePropertyChanged("HowToPlayId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Odds {
            get {
                return this.OddsField;
            }
            set {
                if ((this.OddsField.Equals(value) != true)) {
                    this.OddsField = value;
                    this.RaisePropertyChanged("Odds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rule {
            get {
                return this.RuleField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleField, value) != true)) {
                    this.RuleField = value;
                    this.RaisePropertyChanged("Rule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagId {
            get {
                return this.TagIdField;
            }
            set {
                if ((this.TagIdField.Equals(value) != true)) {
                    this.TagIdField = value;
                    this.RaisePropertyChanged("TagId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TicketName {
            get {
                return this.TicketNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketNameField, value) != true)) {
                    this.TicketNameField = value;
                    this.RaisePropertyChanged("TicketName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VirtualTopResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class VirtualTopResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double SumField;
        
        private string TicketField;
        
        private int TicketIdField;
        
        private int VirtualTopIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Sum {
            get {
                return this.SumField;
            }
            set {
                if ((this.SumField.Equals(value) != true)) {
                    this.SumField = value;
                    this.RaisePropertyChanged("Sum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticket {
            get {
                return this.TicketField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketField, value) != true)) {
                    this.TicketField = value;
                    this.RaisePropertyChanged("Ticket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VirtualTopId {
            get {
                return this.VirtualTopIdField;
            }
            set {
                if ((this.VirtualTopIdField.Equals(value) != true)) {
                    this.VirtualTopIdField = value;
                    this.RaisePropertyChanged("VirtualTopId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LotterySourcesSelectType", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public enum LotterySourcesSelectType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        全部 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        系统采集 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        手动 = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditTicketImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class EditTicketImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private int OrderField;
        
        private int TicketIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditLotteryTimeImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class EditLotteryTimeImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PhasesField;
        
        private string TimeValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Phases {
            get {
                return this.PhasesField;
            }
            set {
                if ((this.PhasesField.Equals(value) != true)) {
                    this.PhasesField = value;
                    this.RaisePropertyChanged("Phases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeValue {
            get {
                return this.TimeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeValueField, value) != true)) {
                    this.TimeValueField = value;
                    this.RaisePropertyChanged("TimeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditPlayTagImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class EditPlayTagImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private int OrderField;
        
        private int PlayTagIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayTagId {
            get {
                return this.PlayTagIdField;
            }
            set {
                if ((this.PlayTagIdField.Equals(value) != true)) {
                    this.PlayTagIdField = value;
                    this.RaisePropertyChanged("PlayTagId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditHowToPlayImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class EditHowToPlayImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private int HowToPlayIdField;
        
        private string NameField;
        
        private double OddsField;
        
        private int OrderField;
        
        private string RuleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HowToPlayId {
            get {
                return this.HowToPlayIdField;
            }
            set {
                if ((this.HowToPlayIdField.Equals(value) != true)) {
                    this.HowToPlayIdField = value;
                    this.RaisePropertyChanged("HowToPlayId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Odds {
            get {
                return this.OddsField;
            }
            set {
                if ((this.OddsField.Equals(value) != true)) {
                    this.OddsField = value;
                    this.RaisePropertyChanged("Odds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rule {
            get {
                return this.RuleField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleField, value) != true)) {
                    this.RuleField = value;
                    this.RaisePropertyChanged("Rule");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddVirtualTopImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class AddVirtualTopImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double SumField;
        
        private string TicketField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Sum {
            get {
                return this.SumField;
            }
            set {
                if ((this.SumField.Equals(value) != true)) {
                    this.SumField = value;
                    this.RaisePropertyChanged("Sum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticket {
            get {
                return this.TicketField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketField, value) != true)) {
                    this.TicketField = value;
                    this.RaisePropertyChanged("Ticket");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditVirtualTopImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class EditVirtualTopImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double SumField;
        
        private string TicketField;
        
        private int VirtualTopIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Sum {
            get {
                return this.SumField;
            }
            set {
                if ((this.SumField.Equals(value) != true)) {
                    this.SumField = value;
                    this.RaisePropertyChanged("Sum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticket {
            get {
                return this.TicketField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketField, value) != true)) {
                    this.TicketField = value;
                    this.RaisePropertyChanged("Ticket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VirtualTopId {
            get {
                return this.VirtualTopIdField;
            }
            set {
                if ((this.VirtualTopIdField.Equals(value) != true)) {
                    this.VirtualTopIdField = value;
                    this.RaisePropertyChanged("VirtualTopId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LotteryTicketService.ILotteryTicketService")]
    public interface ILotteryTicketService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/GetTicketList", ReplyAction="http://tempuri.org/ILotteryTicketService/GetTicketListResponse")]
        System.IAsyncResult BeginGetTicketList(string keyword, IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide, int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.PaginationListOfTicketResultp9CVq9mK EndGetTicketList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/GetLotteryTimeList", ReplyAction="http://tempuri.org/ILotteryTicketService/GetLotteryTimeListResponse")]
        System.IAsyncResult BeginGetLotteryTimeList(int ticketId, int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryTimeResultp9CVq9mK EndGetLotteryTimeList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/GetLotteryList", ReplyAction="http://tempuri.org/ILotteryTicketService/GetLotteryListResponse")]
        System.IAsyncResult BeginGetLotteryList(int ticketId, IWorld.Admin.Framework.LotteryTicketService.LotterySourcesSelectType sources, int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryResultp9CVq9mK EndGetLotteryList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/EdotTicket", ReplyAction="http://tempuri.org/ILotteryTicketService/EdotTicketResponse")]
        System.IAsyncResult BeginEdotTicket(IWorld.Admin.Framework.LotteryTicketService.EditTicketImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.OperateResult EndEdotTicket(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/EditLotteryTime", ReplyAction="http://tempuri.org/ILotteryTicketService/EditLotteryTimeResponse")]
        System.IAsyncResult BeginEditLotteryTime(int ticketId, System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.EditLotteryTimeImport> imports, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.OperateResult EndEditLotteryTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/HideTicket", ReplyAction="http://tempuri.org/ILotteryTicketService/HideTicketResponse")]
        System.IAsyncResult BeginHideTicket(int ticketId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.OperateResult EndHideTicket(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/ShowTicket", ReplyAction="http://tempuri.org/ILotteryTicketService/ShowTicketResponse")]
        System.IAsyncResult BeginShowTicket(int ticketId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.OperateResult EndShowTicket(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/GetPlayTagList", ReplyAction="http://tempuri.org/ILotteryTicketService/GetPlayTagListResponse")]
        System.IAsyncResult BeginGetPlayTagList(int ticketId, string keyword, IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide, int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.PaginationListOfPlayTagResultp9CVq9mK EndGetPlayTagList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/EditPlayTag", ReplyAction="http://tempuri.org/ILotteryTicketService/EditPlayTagResponse")]
        System.IAsyncResult BeginEditPlayTag(IWorld.Admin.Framework.LotteryTicketService.EditPlayTagImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.OperateResult EndEditPlayTag(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/HidePlayTag", ReplyAction="http://tempuri.org/ILotteryTicketService/HidePlayTagResponse")]
        System.IAsyncResult BeginHidePlayTag(int playTagId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.OperateResult EndHidePlayTag(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/ShowPlayTag", ReplyAction="http://tempuri.org/ILotteryTicketService/ShowPlayTagResponse")]
        System.IAsyncResult BeginShowPlayTag(int playTagId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.OperateResult EndShowPlayTag(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/GetHowToPlayList", ReplyAction="http://tempuri.org/ILotteryTicketService/GetHowToPlayListResponse")]
        System.IAsyncResult BeginGetHowToPlayList(int ticketId, int playTagId, string keyword, IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide, int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.PaginationListOfHowToPlayResultp9CVq9mK EndGetHowToPlayList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/EditHowToPlay", ReplyAction="http://tempuri.org/ILotteryTicketService/EditHowToPlayResponse")]
        System.IAsyncResult BeginEditHowToPlay(IWorld.Admin.Framework.LotteryTicketService.EditHowToPlayImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.OperateResult EndEditHowToPlay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/HideHowToPlay", ReplyAction="http://tempuri.org/ILotteryTicketService/HideHowToPlayResponse")]
        System.IAsyncResult BeginHideHowToPlay(int howToPlayId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.OperateResult EndHideHowToPlay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/ShowHowToPlay", ReplyAction="http://tempuri.org/ILotteryTicketService/ShowHowToPlayResponse")]
        System.IAsyncResult BeginShowHowToPlay(int howToPlayId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.OperateResult EndShowHowToPlay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/GetVirtualTopList", ReplyAction="http://tempuri.org/ILotteryTicketService/GetVirtualTopListResponse")]
        System.IAsyncResult BeginGetVirtualTopList(int ticketId, int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.PaginationListOfVirtualTopResultp9CVq9mK EndGetVirtualTopList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/AddVirtualTop", ReplyAction="http://tempuri.org/ILotteryTicketService/AddVirtualTopResponse")]
        System.IAsyncResult BeginAddVirtualTop(IWorld.Admin.Framework.LotteryTicketService.AddVirtualTopImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.OperateResult EndAddVirtualTop(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/EditVirtualTop", ReplyAction="http://tempuri.org/ILotteryTicketService/EditVirtualTopResponse")]
        System.IAsyncResult BeginEditVirtualTop(IWorld.Admin.Framework.LotteryTicketService.EditVirtualTopImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.OperateResult EndEditVirtualTop(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryTicketService/RemoveVirtualTop", ReplyAction="http://tempuri.org/ILotteryTicketService/RemoveVirtualTopResponse")]
        System.IAsyncResult BeginRemoveVirtualTop(int virtualTopId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.LotteryTicketService.OperateResult EndRemoveVirtualTop(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILotteryTicketServiceChannel : IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTicketListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTicketListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.PaginationListOfTicketResultp9CVq9mK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.PaginationListOfTicketResultp9CVq9mK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLotteryTimeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLotteryTimeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryTimeResultp9CVq9mK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryTimeResultp9CVq9mK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLotteryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLotteryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryResultp9CVq9mK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryResultp9CVq9mK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EdotTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EdotTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditLotteryTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditLotteryTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HideTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HideTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShowTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ShowTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlayTagListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlayTagListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.PaginationListOfPlayTagResultp9CVq9mK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.PaginationListOfPlayTagResultp9CVq9mK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditPlayTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditPlayTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HidePlayTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HidePlayTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShowPlayTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ShowPlayTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHowToPlayListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHowToPlayListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.PaginationListOfHowToPlayResultp9CVq9mK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.PaginationListOfHowToPlayResultp9CVq9mK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditHowToPlayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditHowToPlayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HideHowToPlayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HideHowToPlayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShowHowToPlayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ShowHowToPlayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVirtualTopListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVirtualTopListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.PaginationListOfVirtualTopResultp9CVq9mK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.PaginationListOfVirtualTopResultp9CVq9mK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddVirtualTopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddVirtualTopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditVirtualTopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditVirtualTopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveVirtualTopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveVirtualTopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.LotteryTicketService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LotteryTicketServiceClient : System.ServiceModel.ClientBase<IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService>, IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService {
        
        private BeginOperationDelegate onBeginGetTicketListDelegate;
        
        private EndOperationDelegate onEndGetTicketListDelegate;
        
        private System.Threading.SendOrPostCallback onGetTicketListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLotteryTimeListDelegate;
        
        private EndOperationDelegate onEndGetLotteryTimeListDelegate;
        
        private System.Threading.SendOrPostCallback onGetLotteryTimeListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLotteryListDelegate;
        
        private EndOperationDelegate onEndGetLotteryListDelegate;
        
        private System.Threading.SendOrPostCallback onGetLotteryListCompletedDelegate;
        
        private BeginOperationDelegate onBeginEdotTicketDelegate;
        
        private EndOperationDelegate onEndEdotTicketDelegate;
        
        private System.Threading.SendOrPostCallback onEdotTicketCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditLotteryTimeDelegate;
        
        private EndOperationDelegate onEndEditLotteryTimeDelegate;
        
        private System.Threading.SendOrPostCallback onEditLotteryTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginHideTicketDelegate;
        
        private EndOperationDelegate onEndHideTicketDelegate;
        
        private System.Threading.SendOrPostCallback onHideTicketCompletedDelegate;
        
        private BeginOperationDelegate onBeginShowTicketDelegate;
        
        private EndOperationDelegate onEndShowTicketDelegate;
        
        private System.Threading.SendOrPostCallback onShowTicketCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlayTagListDelegate;
        
        private EndOperationDelegate onEndGetPlayTagListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlayTagListCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditPlayTagDelegate;
        
        private EndOperationDelegate onEndEditPlayTagDelegate;
        
        private System.Threading.SendOrPostCallback onEditPlayTagCompletedDelegate;
        
        private BeginOperationDelegate onBeginHidePlayTagDelegate;
        
        private EndOperationDelegate onEndHidePlayTagDelegate;
        
        private System.Threading.SendOrPostCallback onHidePlayTagCompletedDelegate;
        
        private BeginOperationDelegate onBeginShowPlayTagDelegate;
        
        private EndOperationDelegate onEndShowPlayTagDelegate;
        
        private System.Threading.SendOrPostCallback onShowPlayTagCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHowToPlayListDelegate;
        
        private EndOperationDelegate onEndGetHowToPlayListDelegate;
        
        private System.Threading.SendOrPostCallback onGetHowToPlayListCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditHowToPlayDelegate;
        
        private EndOperationDelegate onEndEditHowToPlayDelegate;
        
        private System.Threading.SendOrPostCallback onEditHowToPlayCompletedDelegate;
        
        private BeginOperationDelegate onBeginHideHowToPlayDelegate;
        
        private EndOperationDelegate onEndHideHowToPlayDelegate;
        
        private System.Threading.SendOrPostCallback onHideHowToPlayCompletedDelegate;
        
        private BeginOperationDelegate onBeginShowHowToPlayDelegate;
        
        private EndOperationDelegate onEndShowHowToPlayDelegate;
        
        private System.Threading.SendOrPostCallback onShowHowToPlayCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVirtualTopListDelegate;
        
        private EndOperationDelegate onEndGetVirtualTopListDelegate;
        
        private System.Threading.SendOrPostCallback onGetVirtualTopListCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddVirtualTopDelegate;
        
        private EndOperationDelegate onEndAddVirtualTopDelegate;
        
        private System.Threading.SendOrPostCallback onAddVirtualTopCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditVirtualTopDelegate;
        
        private EndOperationDelegate onEndEditVirtualTopDelegate;
        
        private System.Threading.SendOrPostCallback onEditVirtualTopCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveVirtualTopDelegate;
        
        private EndOperationDelegate onEndRemoveVirtualTopDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveVirtualTopCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LotteryTicketServiceClient() {
        }
        
        public LotteryTicketServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LotteryTicketServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LotteryTicketServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LotteryTicketServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetTicketListCompletedEventArgs> GetTicketListCompleted;
        
        public event System.EventHandler<GetLotteryTimeListCompletedEventArgs> GetLotteryTimeListCompleted;
        
        public event System.EventHandler<GetLotteryListCompletedEventArgs> GetLotteryListCompleted;
        
        public event System.EventHandler<EdotTicketCompletedEventArgs> EdotTicketCompleted;
        
        public event System.EventHandler<EditLotteryTimeCompletedEventArgs> EditLotteryTimeCompleted;
        
        public event System.EventHandler<HideTicketCompletedEventArgs> HideTicketCompleted;
        
        public event System.EventHandler<ShowTicketCompletedEventArgs> ShowTicketCompleted;
        
        public event System.EventHandler<GetPlayTagListCompletedEventArgs> GetPlayTagListCompleted;
        
        public event System.EventHandler<EditPlayTagCompletedEventArgs> EditPlayTagCompleted;
        
        public event System.EventHandler<HidePlayTagCompletedEventArgs> HidePlayTagCompleted;
        
        public event System.EventHandler<ShowPlayTagCompletedEventArgs> ShowPlayTagCompleted;
        
        public event System.EventHandler<GetHowToPlayListCompletedEventArgs> GetHowToPlayListCompleted;
        
        public event System.EventHandler<EditHowToPlayCompletedEventArgs> EditHowToPlayCompleted;
        
        public event System.EventHandler<HideHowToPlayCompletedEventArgs> HideHowToPlayCompleted;
        
        public event System.EventHandler<ShowHowToPlayCompletedEventArgs> ShowHowToPlayCompleted;
        
        public event System.EventHandler<GetVirtualTopListCompletedEventArgs> GetVirtualTopListCompleted;
        
        public event System.EventHandler<AddVirtualTopCompletedEventArgs> AddVirtualTopCompleted;
        
        public event System.EventHandler<EditVirtualTopCompletedEventArgs> EditVirtualTopCompleted;
        
        public event System.EventHandler<RemoveVirtualTopCompletedEventArgs> RemoveVirtualTopCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginGetTicketList(string keyword, IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide, int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTicketList(keyword, isHide, page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.PaginationListOfTicketResultp9CVq9mK IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndGetTicketList(System.IAsyncResult result) {
            return base.Channel.EndGetTicketList(result);
        }
        
        private System.IAsyncResult OnBeginGetTicketList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keyword = ((string)(inValues[0]));
            IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide = ((IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType)(inValues[1]));
            int page = ((int)(inValues[2]));
            string token = ((string)(inValues[3]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginGetTicketList(keyword, isHide, page, token, callback, asyncState);
        }
        
        private object[] OnEndGetTicketList(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.PaginationListOfTicketResultp9CVq9mK retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndGetTicketList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTicketListCompleted(object state) {
            if ((this.GetTicketListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTicketListCompleted(this, new GetTicketListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTicketListAsync(string keyword, IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide, int page, string token) {
            this.GetTicketListAsync(keyword, isHide, page, token, null);
        }
        
        public void GetTicketListAsync(string keyword, IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide, int page, string token, object userState) {
            if ((this.onBeginGetTicketListDelegate == null)) {
                this.onBeginGetTicketListDelegate = new BeginOperationDelegate(this.OnBeginGetTicketList);
            }
            if ((this.onEndGetTicketListDelegate == null)) {
                this.onEndGetTicketListDelegate = new EndOperationDelegate(this.OnEndGetTicketList);
            }
            if ((this.onGetTicketListCompletedDelegate == null)) {
                this.onGetTicketListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTicketListCompleted);
            }
            base.InvokeAsync(this.onBeginGetTicketListDelegate, new object[] {
                        keyword,
                        isHide,
                        page,
                        token}, this.onEndGetTicketListDelegate, this.onGetTicketListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginGetLotteryTimeList(int ticketId, int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLotteryTimeList(ticketId, page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryTimeResultp9CVq9mK IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndGetLotteryTimeList(System.IAsyncResult result) {
            return base.Channel.EndGetLotteryTimeList(result);
        }
        
        private System.IAsyncResult OnBeginGetLotteryTimeList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ticketId = ((int)(inValues[0]));
            int page = ((int)(inValues[1]));
            string token = ((string)(inValues[2]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginGetLotteryTimeList(ticketId, page, token, callback, asyncState);
        }
        
        private object[] OnEndGetLotteryTimeList(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryTimeResultp9CVq9mK retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndGetLotteryTimeList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLotteryTimeListCompleted(object state) {
            if ((this.GetLotteryTimeListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLotteryTimeListCompleted(this, new GetLotteryTimeListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLotteryTimeListAsync(int ticketId, int page, string token) {
            this.GetLotteryTimeListAsync(ticketId, page, token, null);
        }
        
        public void GetLotteryTimeListAsync(int ticketId, int page, string token, object userState) {
            if ((this.onBeginGetLotteryTimeListDelegate == null)) {
                this.onBeginGetLotteryTimeListDelegate = new BeginOperationDelegate(this.OnBeginGetLotteryTimeList);
            }
            if ((this.onEndGetLotteryTimeListDelegate == null)) {
                this.onEndGetLotteryTimeListDelegate = new EndOperationDelegate(this.OnEndGetLotteryTimeList);
            }
            if ((this.onGetLotteryTimeListCompletedDelegate == null)) {
                this.onGetLotteryTimeListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLotteryTimeListCompleted);
            }
            base.InvokeAsync(this.onBeginGetLotteryTimeListDelegate, new object[] {
                        ticketId,
                        page,
                        token}, this.onEndGetLotteryTimeListDelegate, this.onGetLotteryTimeListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginGetLotteryList(int ticketId, IWorld.Admin.Framework.LotteryTicketService.LotterySourcesSelectType sources, int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLotteryList(ticketId, sources, page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryResultp9CVq9mK IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndGetLotteryList(System.IAsyncResult result) {
            return base.Channel.EndGetLotteryList(result);
        }
        
        private System.IAsyncResult OnBeginGetLotteryList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ticketId = ((int)(inValues[0]));
            IWorld.Admin.Framework.LotteryTicketService.LotterySourcesSelectType sources = ((IWorld.Admin.Framework.LotteryTicketService.LotterySourcesSelectType)(inValues[1]));
            int page = ((int)(inValues[2]));
            string token = ((string)(inValues[3]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginGetLotteryList(ticketId, sources, page, token, callback, asyncState);
        }
        
        private object[] OnEndGetLotteryList(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryResultp9CVq9mK retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndGetLotteryList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLotteryListCompleted(object state) {
            if ((this.GetLotteryListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLotteryListCompleted(this, new GetLotteryListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLotteryListAsync(int ticketId, IWorld.Admin.Framework.LotteryTicketService.LotterySourcesSelectType sources, int page, string token) {
            this.GetLotteryListAsync(ticketId, sources, page, token, null);
        }
        
        public void GetLotteryListAsync(int ticketId, IWorld.Admin.Framework.LotteryTicketService.LotterySourcesSelectType sources, int page, string token, object userState) {
            if ((this.onBeginGetLotteryListDelegate == null)) {
                this.onBeginGetLotteryListDelegate = new BeginOperationDelegate(this.OnBeginGetLotteryList);
            }
            if ((this.onEndGetLotteryListDelegate == null)) {
                this.onEndGetLotteryListDelegate = new EndOperationDelegate(this.OnEndGetLotteryList);
            }
            if ((this.onGetLotteryListCompletedDelegate == null)) {
                this.onGetLotteryListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLotteryListCompleted);
            }
            base.InvokeAsync(this.onBeginGetLotteryListDelegate, new object[] {
                        ticketId,
                        sources,
                        page,
                        token}, this.onEndGetLotteryListDelegate, this.onGetLotteryListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginEdotTicket(IWorld.Admin.Framework.LotteryTicketService.EditTicketImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEdotTicket(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.OperateResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndEdotTicket(System.IAsyncResult result) {
            return base.Channel.EndEdotTicket(result);
        }
        
        private System.IAsyncResult OnBeginEdotTicket(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.Framework.LotteryTicketService.EditTicketImport import = ((IWorld.Admin.Framework.LotteryTicketService.EditTicketImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginEdotTicket(import, token, callback, asyncState);
        }
        
        private object[] OnEndEdotTicket(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.OperateResult retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndEdotTicket(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEdotTicketCompleted(object state) {
            if ((this.EdotTicketCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EdotTicketCompleted(this, new EdotTicketCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EdotTicketAsync(IWorld.Admin.Framework.LotteryTicketService.EditTicketImport import, string token) {
            this.EdotTicketAsync(import, token, null);
        }
        
        public void EdotTicketAsync(IWorld.Admin.Framework.LotteryTicketService.EditTicketImport import, string token, object userState) {
            if ((this.onBeginEdotTicketDelegate == null)) {
                this.onBeginEdotTicketDelegate = new BeginOperationDelegate(this.OnBeginEdotTicket);
            }
            if ((this.onEndEdotTicketDelegate == null)) {
                this.onEndEdotTicketDelegate = new EndOperationDelegate(this.OnEndEdotTicket);
            }
            if ((this.onEdotTicketCompletedDelegate == null)) {
                this.onEdotTicketCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEdotTicketCompleted);
            }
            base.InvokeAsync(this.onBeginEdotTicketDelegate, new object[] {
                        import,
                        token}, this.onEndEdotTicketDelegate, this.onEdotTicketCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginEditLotteryTime(int ticketId, System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.EditLotteryTimeImport> imports, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditLotteryTime(ticketId, imports, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.OperateResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndEditLotteryTime(System.IAsyncResult result) {
            return base.Channel.EndEditLotteryTime(result);
        }
        
        private System.IAsyncResult OnBeginEditLotteryTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ticketId = ((int)(inValues[0]));
            System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.EditLotteryTimeImport> imports = ((System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.EditLotteryTimeImport>)(inValues[1]));
            string token = ((string)(inValues[2]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginEditLotteryTime(ticketId, imports, token, callback, asyncState);
        }
        
        private object[] OnEndEditLotteryTime(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.OperateResult retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndEditLotteryTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditLotteryTimeCompleted(object state) {
            if ((this.EditLotteryTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditLotteryTimeCompleted(this, new EditLotteryTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditLotteryTimeAsync(int ticketId, System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.EditLotteryTimeImport> imports, string token) {
            this.EditLotteryTimeAsync(ticketId, imports, token, null);
        }
        
        public void EditLotteryTimeAsync(int ticketId, System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.EditLotteryTimeImport> imports, string token, object userState) {
            if ((this.onBeginEditLotteryTimeDelegate == null)) {
                this.onBeginEditLotteryTimeDelegate = new BeginOperationDelegate(this.OnBeginEditLotteryTime);
            }
            if ((this.onEndEditLotteryTimeDelegate == null)) {
                this.onEndEditLotteryTimeDelegate = new EndOperationDelegate(this.OnEndEditLotteryTime);
            }
            if ((this.onEditLotteryTimeCompletedDelegate == null)) {
                this.onEditLotteryTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditLotteryTimeCompleted);
            }
            base.InvokeAsync(this.onBeginEditLotteryTimeDelegate, new object[] {
                        ticketId,
                        imports,
                        token}, this.onEndEditLotteryTimeDelegate, this.onEditLotteryTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginHideTicket(int ticketId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHideTicket(ticketId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.OperateResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndHideTicket(System.IAsyncResult result) {
            return base.Channel.EndHideTicket(result);
        }
        
        private System.IAsyncResult OnBeginHideTicket(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ticketId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginHideTicket(ticketId, token, callback, asyncState);
        }
        
        private object[] OnEndHideTicket(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.OperateResult retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndHideTicket(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHideTicketCompleted(object state) {
            if ((this.HideTicketCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HideTicketCompleted(this, new HideTicketCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HideTicketAsync(int ticketId, string token) {
            this.HideTicketAsync(ticketId, token, null);
        }
        
        public void HideTicketAsync(int ticketId, string token, object userState) {
            if ((this.onBeginHideTicketDelegate == null)) {
                this.onBeginHideTicketDelegate = new BeginOperationDelegate(this.OnBeginHideTicket);
            }
            if ((this.onEndHideTicketDelegate == null)) {
                this.onEndHideTicketDelegate = new EndOperationDelegate(this.OnEndHideTicket);
            }
            if ((this.onHideTicketCompletedDelegate == null)) {
                this.onHideTicketCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHideTicketCompleted);
            }
            base.InvokeAsync(this.onBeginHideTicketDelegate, new object[] {
                        ticketId,
                        token}, this.onEndHideTicketDelegate, this.onHideTicketCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginShowTicket(int ticketId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginShowTicket(ticketId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.OperateResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndShowTicket(System.IAsyncResult result) {
            return base.Channel.EndShowTicket(result);
        }
        
        private System.IAsyncResult OnBeginShowTicket(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ticketId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginShowTicket(ticketId, token, callback, asyncState);
        }
        
        private object[] OnEndShowTicket(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.OperateResult retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndShowTicket(result);
            return new object[] {
                    retVal};
        }
        
        private void OnShowTicketCompleted(object state) {
            if ((this.ShowTicketCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ShowTicketCompleted(this, new ShowTicketCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ShowTicketAsync(int ticketId, string token) {
            this.ShowTicketAsync(ticketId, token, null);
        }
        
        public void ShowTicketAsync(int ticketId, string token, object userState) {
            if ((this.onBeginShowTicketDelegate == null)) {
                this.onBeginShowTicketDelegate = new BeginOperationDelegate(this.OnBeginShowTicket);
            }
            if ((this.onEndShowTicketDelegate == null)) {
                this.onEndShowTicketDelegate = new EndOperationDelegate(this.OnEndShowTicket);
            }
            if ((this.onShowTicketCompletedDelegate == null)) {
                this.onShowTicketCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnShowTicketCompleted);
            }
            base.InvokeAsync(this.onBeginShowTicketDelegate, new object[] {
                        ticketId,
                        token}, this.onEndShowTicketDelegate, this.onShowTicketCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginGetPlayTagList(int ticketId, string keyword, IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide, int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlayTagList(ticketId, keyword, isHide, page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.PaginationListOfPlayTagResultp9CVq9mK IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndGetPlayTagList(System.IAsyncResult result) {
            return base.Channel.EndGetPlayTagList(result);
        }
        
        private System.IAsyncResult OnBeginGetPlayTagList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ticketId = ((int)(inValues[0]));
            string keyword = ((string)(inValues[1]));
            IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide = ((IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType)(inValues[2]));
            int page = ((int)(inValues[3]));
            string token = ((string)(inValues[4]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginGetPlayTagList(ticketId, keyword, isHide, page, token, callback, asyncState);
        }
        
        private object[] OnEndGetPlayTagList(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.PaginationListOfPlayTagResultp9CVq9mK retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndGetPlayTagList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlayTagListCompleted(object state) {
            if ((this.GetPlayTagListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlayTagListCompleted(this, new GetPlayTagListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlayTagListAsync(int ticketId, string keyword, IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide, int page, string token) {
            this.GetPlayTagListAsync(ticketId, keyword, isHide, page, token, null);
        }
        
        public void GetPlayTagListAsync(int ticketId, string keyword, IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide, int page, string token, object userState) {
            if ((this.onBeginGetPlayTagListDelegate == null)) {
                this.onBeginGetPlayTagListDelegate = new BeginOperationDelegate(this.OnBeginGetPlayTagList);
            }
            if ((this.onEndGetPlayTagListDelegate == null)) {
                this.onEndGetPlayTagListDelegate = new EndOperationDelegate(this.OnEndGetPlayTagList);
            }
            if ((this.onGetPlayTagListCompletedDelegate == null)) {
                this.onGetPlayTagListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlayTagListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlayTagListDelegate, new object[] {
                        ticketId,
                        keyword,
                        isHide,
                        page,
                        token}, this.onEndGetPlayTagListDelegate, this.onGetPlayTagListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginEditPlayTag(IWorld.Admin.Framework.LotteryTicketService.EditPlayTagImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditPlayTag(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.OperateResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndEditPlayTag(System.IAsyncResult result) {
            return base.Channel.EndEditPlayTag(result);
        }
        
        private System.IAsyncResult OnBeginEditPlayTag(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.Framework.LotteryTicketService.EditPlayTagImport import = ((IWorld.Admin.Framework.LotteryTicketService.EditPlayTagImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginEditPlayTag(import, token, callback, asyncState);
        }
        
        private object[] OnEndEditPlayTag(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.OperateResult retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndEditPlayTag(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditPlayTagCompleted(object state) {
            if ((this.EditPlayTagCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditPlayTagCompleted(this, new EditPlayTagCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditPlayTagAsync(IWorld.Admin.Framework.LotteryTicketService.EditPlayTagImport import, string token) {
            this.EditPlayTagAsync(import, token, null);
        }
        
        public void EditPlayTagAsync(IWorld.Admin.Framework.LotteryTicketService.EditPlayTagImport import, string token, object userState) {
            if ((this.onBeginEditPlayTagDelegate == null)) {
                this.onBeginEditPlayTagDelegate = new BeginOperationDelegate(this.OnBeginEditPlayTag);
            }
            if ((this.onEndEditPlayTagDelegate == null)) {
                this.onEndEditPlayTagDelegate = new EndOperationDelegate(this.OnEndEditPlayTag);
            }
            if ((this.onEditPlayTagCompletedDelegate == null)) {
                this.onEditPlayTagCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditPlayTagCompleted);
            }
            base.InvokeAsync(this.onBeginEditPlayTagDelegate, new object[] {
                        import,
                        token}, this.onEndEditPlayTagDelegate, this.onEditPlayTagCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginHidePlayTag(int playTagId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHidePlayTag(playTagId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.OperateResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndHidePlayTag(System.IAsyncResult result) {
            return base.Channel.EndHidePlayTag(result);
        }
        
        private System.IAsyncResult OnBeginHidePlayTag(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int playTagId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginHidePlayTag(playTagId, token, callback, asyncState);
        }
        
        private object[] OnEndHidePlayTag(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.OperateResult retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndHidePlayTag(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHidePlayTagCompleted(object state) {
            if ((this.HidePlayTagCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HidePlayTagCompleted(this, new HidePlayTagCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HidePlayTagAsync(int playTagId, string token) {
            this.HidePlayTagAsync(playTagId, token, null);
        }
        
        public void HidePlayTagAsync(int playTagId, string token, object userState) {
            if ((this.onBeginHidePlayTagDelegate == null)) {
                this.onBeginHidePlayTagDelegate = new BeginOperationDelegate(this.OnBeginHidePlayTag);
            }
            if ((this.onEndHidePlayTagDelegate == null)) {
                this.onEndHidePlayTagDelegate = new EndOperationDelegate(this.OnEndHidePlayTag);
            }
            if ((this.onHidePlayTagCompletedDelegate == null)) {
                this.onHidePlayTagCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHidePlayTagCompleted);
            }
            base.InvokeAsync(this.onBeginHidePlayTagDelegate, new object[] {
                        playTagId,
                        token}, this.onEndHidePlayTagDelegate, this.onHidePlayTagCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginShowPlayTag(int playTagId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginShowPlayTag(playTagId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.OperateResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndShowPlayTag(System.IAsyncResult result) {
            return base.Channel.EndShowPlayTag(result);
        }
        
        private System.IAsyncResult OnBeginShowPlayTag(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int playTagId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginShowPlayTag(playTagId, token, callback, asyncState);
        }
        
        private object[] OnEndShowPlayTag(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.OperateResult retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndShowPlayTag(result);
            return new object[] {
                    retVal};
        }
        
        private void OnShowPlayTagCompleted(object state) {
            if ((this.ShowPlayTagCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ShowPlayTagCompleted(this, new ShowPlayTagCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ShowPlayTagAsync(int playTagId, string token) {
            this.ShowPlayTagAsync(playTagId, token, null);
        }
        
        public void ShowPlayTagAsync(int playTagId, string token, object userState) {
            if ((this.onBeginShowPlayTagDelegate == null)) {
                this.onBeginShowPlayTagDelegate = new BeginOperationDelegate(this.OnBeginShowPlayTag);
            }
            if ((this.onEndShowPlayTagDelegate == null)) {
                this.onEndShowPlayTagDelegate = new EndOperationDelegate(this.OnEndShowPlayTag);
            }
            if ((this.onShowPlayTagCompletedDelegate == null)) {
                this.onShowPlayTagCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnShowPlayTagCompleted);
            }
            base.InvokeAsync(this.onBeginShowPlayTagDelegate, new object[] {
                        playTagId,
                        token}, this.onEndShowPlayTagDelegate, this.onShowPlayTagCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginGetHowToPlayList(int ticketId, int playTagId, string keyword, IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide, int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHowToPlayList(ticketId, playTagId, keyword, isHide, page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.PaginationListOfHowToPlayResultp9CVq9mK IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndGetHowToPlayList(System.IAsyncResult result) {
            return base.Channel.EndGetHowToPlayList(result);
        }
        
        private System.IAsyncResult OnBeginGetHowToPlayList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ticketId = ((int)(inValues[0]));
            int playTagId = ((int)(inValues[1]));
            string keyword = ((string)(inValues[2]));
            IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide = ((IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType)(inValues[3]));
            int page = ((int)(inValues[4]));
            string token = ((string)(inValues[5]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginGetHowToPlayList(ticketId, playTagId, keyword, isHide, page, token, callback, asyncState);
        }
        
        private object[] OnEndGetHowToPlayList(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.PaginationListOfHowToPlayResultp9CVq9mK retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndGetHowToPlayList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHowToPlayListCompleted(object state) {
            if ((this.GetHowToPlayListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHowToPlayListCompleted(this, new GetHowToPlayListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHowToPlayListAsync(int ticketId, int playTagId, string keyword, IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide, int page, string token) {
            this.GetHowToPlayListAsync(ticketId, playTagId, keyword, isHide, page, token, null);
        }
        
        public void GetHowToPlayListAsync(int ticketId, int playTagId, string keyword, IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide, int page, string token, object userState) {
            if ((this.onBeginGetHowToPlayListDelegate == null)) {
                this.onBeginGetHowToPlayListDelegate = new BeginOperationDelegate(this.OnBeginGetHowToPlayList);
            }
            if ((this.onEndGetHowToPlayListDelegate == null)) {
                this.onEndGetHowToPlayListDelegate = new EndOperationDelegate(this.OnEndGetHowToPlayList);
            }
            if ((this.onGetHowToPlayListCompletedDelegate == null)) {
                this.onGetHowToPlayListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHowToPlayListCompleted);
            }
            base.InvokeAsync(this.onBeginGetHowToPlayListDelegate, new object[] {
                        ticketId,
                        playTagId,
                        keyword,
                        isHide,
                        page,
                        token}, this.onEndGetHowToPlayListDelegate, this.onGetHowToPlayListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginEditHowToPlay(IWorld.Admin.Framework.LotteryTicketService.EditHowToPlayImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditHowToPlay(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.OperateResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndEditHowToPlay(System.IAsyncResult result) {
            return base.Channel.EndEditHowToPlay(result);
        }
        
        private System.IAsyncResult OnBeginEditHowToPlay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.Framework.LotteryTicketService.EditHowToPlayImport import = ((IWorld.Admin.Framework.LotteryTicketService.EditHowToPlayImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginEditHowToPlay(import, token, callback, asyncState);
        }
        
        private object[] OnEndEditHowToPlay(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.OperateResult retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndEditHowToPlay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditHowToPlayCompleted(object state) {
            if ((this.EditHowToPlayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditHowToPlayCompleted(this, new EditHowToPlayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditHowToPlayAsync(IWorld.Admin.Framework.LotteryTicketService.EditHowToPlayImport import, string token) {
            this.EditHowToPlayAsync(import, token, null);
        }
        
        public void EditHowToPlayAsync(IWorld.Admin.Framework.LotteryTicketService.EditHowToPlayImport import, string token, object userState) {
            if ((this.onBeginEditHowToPlayDelegate == null)) {
                this.onBeginEditHowToPlayDelegate = new BeginOperationDelegate(this.OnBeginEditHowToPlay);
            }
            if ((this.onEndEditHowToPlayDelegate == null)) {
                this.onEndEditHowToPlayDelegate = new EndOperationDelegate(this.OnEndEditHowToPlay);
            }
            if ((this.onEditHowToPlayCompletedDelegate == null)) {
                this.onEditHowToPlayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditHowToPlayCompleted);
            }
            base.InvokeAsync(this.onBeginEditHowToPlayDelegate, new object[] {
                        import,
                        token}, this.onEndEditHowToPlayDelegate, this.onEditHowToPlayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginHideHowToPlay(int howToPlayId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHideHowToPlay(howToPlayId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.OperateResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndHideHowToPlay(System.IAsyncResult result) {
            return base.Channel.EndHideHowToPlay(result);
        }
        
        private System.IAsyncResult OnBeginHideHowToPlay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int howToPlayId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginHideHowToPlay(howToPlayId, token, callback, asyncState);
        }
        
        private object[] OnEndHideHowToPlay(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.OperateResult retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndHideHowToPlay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHideHowToPlayCompleted(object state) {
            if ((this.HideHowToPlayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HideHowToPlayCompleted(this, new HideHowToPlayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HideHowToPlayAsync(int howToPlayId, string token) {
            this.HideHowToPlayAsync(howToPlayId, token, null);
        }
        
        public void HideHowToPlayAsync(int howToPlayId, string token, object userState) {
            if ((this.onBeginHideHowToPlayDelegate == null)) {
                this.onBeginHideHowToPlayDelegate = new BeginOperationDelegate(this.OnBeginHideHowToPlay);
            }
            if ((this.onEndHideHowToPlayDelegate == null)) {
                this.onEndHideHowToPlayDelegate = new EndOperationDelegate(this.OnEndHideHowToPlay);
            }
            if ((this.onHideHowToPlayCompletedDelegate == null)) {
                this.onHideHowToPlayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHideHowToPlayCompleted);
            }
            base.InvokeAsync(this.onBeginHideHowToPlayDelegate, new object[] {
                        howToPlayId,
                        token}, this.onEndHideHowToPlayDelegate, this.onHideHowToPlayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginShowHowToPlay(int howToPlayId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginShowHowToPlay(howToPlayId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.OperateResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndShowHowToPlay(System.IAsyncResult result) {
            return base.Channel.EndShowHowToPlay(result);
        }
        
        private System.IAsyncResult OnBeginShowHowToPlay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int howToPlayId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginShowHowToPlay(howToPlayId, token, callback, asyncState);
        }
        
        private object[] OnEndShowHowToPlay(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.OperateResult retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndShowHowToPlay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnShowHowToPlayCompleted(object state) {
            if ((this.ShowHowToPlayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ShowHowToPlayCompleted(this, new ShowHowToPlayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ShowHowToPlayAsync(int howToPlayId, string token) {
            this.ShowHowToPlayAsync(howToPlayId, token, null);
        }
        
        public void ShowHowToPlayAsync(int howToPlayId, string token, object userState) {
            if ((this.onBeginShowHowToPlayDelegate == null)) {
                this.onBeginShowHowToPlayDelegate = new BeginOperationDelegate(this.OnBeginShowHowToPlay);
            }
            if ((this.onEndShowHowToPlayDelegate == null)) {
                this.onEndShowHowToPlayDelegate = new EndOperationDelegate(this.OnEndShowHowToPlay);
            }
            if ((this.onShowHowToPlayCompletedDelegate == null)) {
                this.onShowHowToPlayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnShowHowToPlayCompleted);
            }
            base.InvokeAsync(this.onBeginShowHowToPlayDelegate, new object[] {
                        howToPlayId,
                        token}, this.onEndShowHowToPlayDelegate, this.onShowHowToPlayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginGetVirtualTopList(int ticketId, int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVirtualTopList(ticketId, page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.PaginationListOfVirtualTopResultp9CVq9mK IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndGetVirtualTopList(System.IAsyncResult result) {
            return base.Channel.EndGetVirtualTopList(result);
        }
        
        private System.IAsyncResult OnBeginGetVirtualTopList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ticketId = ((int)(inValues[0]));
            int page = ((int)(inValues[1]));
            string token = ((string)(inValues[2]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginGetVirtualTopList(ticketId, page, token, callback, asyncState);
        }
        
        private object[] OnEndGetVirtualTopList(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.PaginationListOfVirtualTopResultp9CVq9mK retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndGetVirtualTopList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVirtualTopListCompleted(object state) {
            if ((this.GetVirtualTopListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVirtualTopListCompleted(this, new GetVirtualTopListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVirtualTopListAsync(int ticketId, int page, string token) {
            this.GetVirtualTopListAsync(ticketId, page, token, null);
        }
        
        public void GetVirtualTopListAsync(int ticketId, int page, string token, object userState) {
            if ((this.onBeginGetVirtualTopListDelegate == null)) {
                this.onBeginGetVirtualTopListDelegate = new BeginOperationDelegate(this.OnBeginGetVirtualTopList);
            }
            if ((this.onEndGetVirtualTopListDelegate == null)) {
                this.onEndGetVirtualTopListDelegate = new EndOperationDelegate(this.OnEndGetVirtualTopList);
            }
            if ((this.onGetVirtualTopListCompletedDelegate == null)) {
                this.onGetVirtualTopListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVirtualTopListCompleted);
            }
            base.InvokeAsync(this.onBeginGetVirtualTopListDelegate, new object[] {
                        ticketId,
                        page,
                        token}, this.onEndGetVirtualTopListDelegate, this.onGetVirtualTopListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginAddVirtualTop(IWorld.Admin.Framework.LotteryTicketService.AddVirtualTopImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddVirtualTop(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.OperateResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndAddVirtualTop(System.IAsyncResult result) {
            return base.Channel.EndAddVirtualTop(result);
        }
        
        private System.IAsyncResult OnBeginAddVirtualTop(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.Framework.LotteryTicketService.AddVirtualTopImport import = ((IWorld.Admin.Framework.LotteryTicketService.AddVirtualTopImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginAddVirtualTop(import, token, callback, asyncState);
        }
        
        private object[] OnEndAddVirtualTop(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.OperateResult retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndAddVirtualTop(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddVirtualTopCompleted(object state) {
            if ((this.AddVirtualTopCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddVirtualTopCompleted(this, new AddVirtualTopCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddVirtualTopAsync(IWorld.Admin.Framework.LotteryTicketService.AddVirtualTopImport import, string token) {
            this.AddVirtualTopAsync(import, token, null);
        }
        
        public void AddVirtualTopAsync(IWorld.Admin.Framework.LotteryTicketService.AddVirtualTopImport import, string token, object userState) {
            if ((this.onBeginAddVirtualTopDelegate == null)) {
                this.onBeginAddVirtualTopDelegate = new BeginOperationDelegate(this.OnBeginAddVirtualTop);
            }
            if ((this.onEndAddVirtualTopDelegate == null)) {
                this.onEndAddVirtualTopDelegate = new EndOperationDelegate(this.OnEndAddVirtualTop);
            }
            if ((this.onAddVirtualTopCompletedDelegate == null)) {
                this.onAddVirtualTopCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddVirtualTopCompleted);
            }
            base.InvokeAsync(this.onBeginAddVirtualTopDelegate, new object[] {
                        import,
                        token}, this.onEndAddVirtualTopDelegate, this.onAddVirtualTopCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginEditVirtualTop(IWorld.Admin.Framework.LotteryTicketService.EditVirtualTopImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditVirtualTop(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.OperateResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndEditVirtualTop(System.IAsyncResult result) {
            return base.Channel.EndEditVirtualTop(result);
        }
        
        private System.IAsyncResult OnBeginEditVirtualTop(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.Framework.LotteryTicketService.EditVirtualTopImport import = ((IWorld.Admin.Framework.LotteryTicketService.EditVirtualTopImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginEditVirtualTop(import, token, callback, asyncState);
        }
        
        private object[] OnEndEditVirtualTop(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.OperateResult retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndEditVirtualTop(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditVirtualTopCompleted(object state) {
            if ((this.EditVirtualTopCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditVirtualTopCompleted(this, new EditVirtualTopCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditVirtualTopAsync(IWorld.Admin.Framework.LotteryTicketService.EditVirtualTopImport import, string token) {
            this.EditVirtualTopAsync(import, token, null);
        }
        
        public void EditVirtualTopAsync(IWorld.Admin.Framework.LotteryTicketService.EditVirtualTopImport import, string token, object userState) {
            if ((this.onBeginEditVirtualTopDelegate == null)) {
                this.onBeginEditVirtualTopDelegate = new BeginOperationDelegate(this.OnBeginEditVirtualTop);
            }
            if ((this.onEndEditVirtualTopDelegate == null)) {
                this.onEndEditVirtualTopDelegate = new EndOperationDelegate(this.OnEndEditVirtualTop);
            }
            if ((this.onEditVirtualTopCompletedDelegate == null)) {
                this.onEditVirtualTopCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditVirtualTopCompleted);
            }
            base.InvokeAsync(this.onBeginEditVirtualTopDelegate, new object[] {
                        import,
                        token}, this.onEndEditVirtualTopDelegate, this.onEditVirtualTopCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.BeginRemoveVirtualTop(int virtualTopId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveVirtualTop(virtualTopId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.LotteryTicketService.OperateResult IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService.EndRemoveVirtualTop(System.IAsyncResult result) {
            return base.Channel.EndRemoveVirtualTop(result);
        }
        
        private System.IAsyncResult OnBeginRemoveVirtualTop(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int virtualTopId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).BeginRemoveVirtualTop(virtualTopId, token, callback, asyncState);
        }
        
        private object[] OnEndRemoveVirtualTop(System.IAsyncResult result) {
            IWorld.Admin.Framework.LotteryTicketService.OperateResult retVal = ((IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService)(this)).EndRemoveVirtualTop(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveVirtualTopCompleted(object state) {
            if ((this.RemoveVirtualTopCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveVirtualTopCompleted(this, new RemoveVirtualTopCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveVirtualTopAsync(int virtualTopId, string token) {
            this.RemoveVirtualTopAsync(virtualTopId, token, null);
        }
        
        public void RemoveVirtualTopAsync(int virtualTopId, string token, object userState) {
            if ((this.onBeginRemoveVirtualTopDelegate == null)) {
                this.onBeginRemoveVirtualTopDelegate = new BeginOperationDelegate(this.OnBeginRemoveVirtualTop);
            }
            if ((this.onEndRemoveVirtualTopDelegate == null)) {
                this.onEndRemoveVirtualTopDelegate = new EndOperationDelegate(this.OnEndRemoveVirtualTop);
            }
            if ((this.onRemoveVirtualTopCompletedDelegate == null)) {
                this.onRemoveVirtualTopCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveVirtualTopCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveVirtualTopDelegate, new object[] {
                        virtualTopId,
                        token}, this.onEndRemoveVirtualTopDelegate, this.onRemoveVirtualTopCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService CreateChannel() {
            return new LotteryTicketServiceClientChannel(this);
        }
        
        private class LotteryTicketServiceClientChannel : ChannelBase<IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService>, IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService {
            
            public LotteryTicketServiceClientChannel(System.ServiceModel.ClientBase<IWorld.Admin.Framework.LotteryTicketService.ILotteryTicketService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetTicketList(string keyword, IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide, int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = keyword;
                _args[1] = isHide;
                _args[2] = page;
                _args[3] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetTicketList", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.PaginationListOfTicketResultp9CVq9mK EndGetTicketList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.PaginationListOfTicketResultp9CVq9mK _result = ((IWorld.Admin.Framework.LotteryTicketService.PaginationListOfTicketResultp9CVq9mK)(base.EndInvoke("GetTicketList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLotteryTimeList(int ticketId, int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ticketId;
                _args[1] = page;
                _args[2] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetLotteryTimeList", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryTimeResultp9CVq9mK EndGetLotteryTimeList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryTimeResultp9CVq9mK _result = ((IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryTimeResultp9CVq9mK)(base.EndInvoke("GetLotteryTimeList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLotteryList(int ticketId, IWorld.Admin.Framework.LotteryTicketService.LotterySourcesSelectType sources, int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = ticketId;
                _args[1] = sources;
                _args[2] = page;
                _args[3] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetLotteryList", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryResultp9CVq9mK EndGetLotteryList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryResultp9CVq9mK _result = ((IWorld.Admin.Framework.LotteryTicketService.PaginationListOfLotteryResultp9CVq9mK)(base.EndInvoke("GetLotteryList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEdotTicket(IWorld.Admin.Framework.LotteryTicketService.EditTicketImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("EdotTicket", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.OperateResult EndEdotTicket(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.OperateResult _result = ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(base.EndInvoke("EdotTicket", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditLotteryTime(int ticketId, System.Collections.Generic.List<IWorld.Admin.Framework.LotteryTicketService.EditLotteryTimeImport> imports, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ticketId;
                _args[1] = imports;
                _args[2] = token;
                System.IAsyncResult _result = base.BeginInvoke("EditLotteryTime", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.OperateResult EndEditLotteryTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.OperateResult _result = ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(base.EndInvoke("EditLotteryTime", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHideTicket(int ticketId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ticketId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("HideTicket", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.OperateResult EndHideTicket(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.OperateResult _result = ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(base.EndInvoke("HideTicket", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginShowTicket(int ticketId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ticketId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("ShowTicket", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.OperateResult EndShowTicket(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.OperateResult _result = ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(base.EndInvoke("ShowTicket", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPlayTagList(int ticketId, string keyword, IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide, int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = ticketId;
                _args[1] = keyword;
                _args[2] = isHide;
                _args[3] = page;
                _args[4] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetPlayTagList", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.PaginationListOfPlayTagResultp9CVq9mK EndGetPlayTagList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.PaginationListOfPlayTagResultp9CVq9mK _result = ((IWorld.Admin.Framework.LotteryTicketService.PaginationListOfPlayTagResultp9CVq9mK)(base.EndInvoke("GetPlayTagList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditPlayTag(IWorld.Admin.Framework.LotteryTicketService.EditPlayTagImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("EditPlayTag", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.OperateResult EndEditPlayTag(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.OperateResult _result = ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(base.EndInvoke("EditPlayTag", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHidePlayTag(int playTagId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = playTagId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("HidePlayTag", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.OperateResult EndHidePlayTag(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.OperateResult _result = ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(base.EndInvoke("HidePlayTag", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginShowPlayTag(int playTagId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = playTagId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("ShowPlayTag", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.OperateResult EndShowPlayTag(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.OperateResult _result = ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(base.EndInvoke("ShowPlayTag", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHowToPlayList(int ticketId, int playTagId, string keyword, IWorld.Admin.Framework.LotteryTicketService.HideOrNotSelectType isHide, int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = ticketId;
                _args[1] = playTagId;
                _args[2] = keyword;
                _args[3] = isHide;
                _args[4] = page;
                _args[5] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetHowToPlayList", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.PaginationListOfHowToPlayResultp9CVq9mK EndGetHowToPlayList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.PaginationListOfHowToPlayResultp9CVq9mK _result = ((IWorld.Admin.Framework.LotteryTicketService.PaginationListOfHowToPlayResultp9CVq9mK)(base.EndInvoke("GetHowToPlayList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditHowToPlay(IWorld.Admin.Framework.LotteryTicketService.EditHowToPlayImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("EditHowToPlay", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.OperateResult EndEditHowToPlay(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.OperateResult _result = ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(base.EndInvoke("EditHowToPlay", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHideHowToPlay(int howToPlayId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = howToPlayId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("HideHowToPlay", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.OperateResult EndHideHowToPlay(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.OperateResult _result = ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(base.EndInvoke("HideHowToPlay", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginShowHowToPlay(int howToPlayId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = howToPlayId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("ShowHowToPlay", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.OperateResult EndShowHowToPlay(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.OperateResult _result = ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(base.EndInvoke("ShowHowToPlay", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVirtualTopList(int ticketId, int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ticketId;
                _args[1] = page;
                _args[2] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetVirtualTopList", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.PaginationListOfVirtualTopResultp9CVq9mK EndGetVirtualTopList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.PaginationListOfVirtualTopResultp9CVq9mK _result = ((IWorld.Admin.Framework.LotteryTicketService.PaginationListOfVirtualTopResultp9CVq9mK)(base.EndInvoke("GetVirtualTopList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddVirtualTop(IWorld.Admin.Framework.LotteryTicketService.AddVirtualTopImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("AddVirtualTop", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.OperateResult EndAddVirtualTop(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.OperateResult _result = ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(base.EndInvoke("AddVirtualTop", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditVirtualTop(IWorld.Admin.Framework.LotteryTicketService.EditVirtualTopImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("EditVirtualTop", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.OperateResult EndEditVirtualTop(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.OperateResult _result = ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(base.EndInvoke("EditVirtualTop", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveVirtualTop(int virtualTopId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = virtualTopId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("RemoveVirtualTop", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.LotteryTicketService.OperateResult EndRemoveVirtualTop(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.LotteryTicketService.OperateResult _result = ((IWorld.Admin.Framework.LotteryTicketService.OperateResult)(base.EndInvoke("RemoveVirtualTop", _args, result)));
                return _result;
            }
        }
    }
}
