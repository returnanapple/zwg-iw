//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18051
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace IWorld.Admin.Framework.ManagerService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperateResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.Framework.ManagerService.PaginationListOfManagerInfoResultp9CVq9mK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.Framework.ManagerService.PaginationListOfManagerGroupResultp9CVq9mK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.Framework.ManagerService.PaginationListOfLandingRecordResultp9CVq9mK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.Framework.ManagerService.PaginationListOfOperatedRecordResultp9CVq9mK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.Framework.ManagerService.LoginResult))]
    public partial class OperateResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfManagerInfoResultp9CVq9mK", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class PaginationListOfManagerInfoResultp9CVq9mK : IWorld.Admin.Framework.ManagerService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Admin.Framework.ManagerService.ManagerInfoResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Admin.Framework.ManagerService.ManagerInfoResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfManagerGroupResultp9CVq9mK", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class PaginationListOfManagerGroupResultp9CVq9mK : IWorld.Admin.Framework.ManagerService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Admin.Framework.ManagerService.ManagerGroupResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Admin.Framework.ManagerService.ManagerGroupResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfLandingRecordResultp9CVq9mK", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class PaginationListOfLandingRecordResultp9CVq9mK : IWorld.Admin.Framework.ManagerService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Admin.Framework.ManagerService.LandingRecordResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Admin.Framework.ManagerService.LandingRecordResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfOperatedRecordResultp9CVq9mK", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class PaginationListOfOperatedRecordResultp9CVq9mK : IWorld.Admin.Framework.ManagerService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Admin.Framework.ManagerService.OperatedRecordResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Admin.Framework.ManagerService.OperatedRecordResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class LoginResult : IWorld.Admin.Framework.ManagerService.OperateResult {
        
        private IWorld.Admin.Framework.ManagerService.ManagerGroupResult GroupField;
        
        private System.DateTime LastLoginTimeField;
        
        private string TokenField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IWorld.Admin.Framework.ManagerService.ManagerGroupResult Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastLoginTime {
            get {
                return this.LastLoginTimeField;
            }
            set {
                if ((this.LastLoginTimeField.Equals(value) != true)) {
                    this.LastLoginTimeField = value;
                    this.RaisePropertyChanged("LastLoginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManagerGroupResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class ManagerGroupResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool CanEditActivitiesField;
        
        private bool CanEditTicketsField;
        
        private bool CanEditUsersField;
        
        private bool CanSettingSiteField;
        
        private bool CanViewActivitiesField;
        
        private bool CanViewAndAddFundsReportsField;
        
        private bool CanViewAndEditManagersField;
        
        private bool CanViewAndEditMessageBoxField;
        
        private bool CanViewDataReportsField;
        
        private bool CanViewTicketsField;
        
        private bool CanViewUsersField;
        
        private int GradeField;
        
        private int GroupIdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEditActivities {
            get {
                return this.CanEditActivitiesField;
            }
            set {
                if ((this.CanEditActivitiesField.Equals(value) != true)) {
                    this.CanEditActivitiesField = value;
                    this.RaisePropertyChanged("CanEditActivities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEditTickets {
            get {
                return this.CanEditTicketsField;
            }
            set {
                if ((this.CanEditTicketsField.Equals(value) != true)) {
                    this.CanEditTicketsField = value;
                    this.RaisePropertyChanged("CanEditTickets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEditUsers {
            get {
                return this.CanEditUsersField;
            }
            set {
                if ((this.CanEditUsersField.Equals(value) != true)) {
                    this.CanEditUsersField = value;
                    this.RaisePropertyChanged("CanEditUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanSettingSite {
            get {
                return this.CanSettingSiteField;
            }
            set {
                if ((this.CanSettingSiteField.Equals(value) != true)) {
                    this.CanSettingSiteField = value;
                    this.RaisePropertyChanged("CanSettingSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewActivities {
            get {
                return this.CanViewActivitiesField;
            }
            set {
                if ((this.CanViewActivitiesField.Equals(value) != true)) {
                    this.CanViewActivitiesField = value;
                    this.RaisePropertyChanged("CanViewActivities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewAndAddFundsReports {
            get {
                return this.CanViewAndAddFundsReportsField;
            }
            set {
                if ((this.CanViewAndAddFundsReportsField.Equals(value) != true)) {
                    this.CanViewAndAddFundsReportsField = value;
                    this.RaisePropertyChanged("CanViewAndAddFundsReports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewAndEditManagers {
            get {
                return this.CanViewAndEditManagersField;
            }
            set {
                if ((this.CanViewAndEditManagersField.Equals(value) != true)) {
                    this.CanViewAndEditManagersField = value;
                    this.RaisePropertyChanged("CanViewAndEditManagers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewAndEditMessageBox {
            get {
                return this.CanViewAndEditMessageBoxField;
            }
            set {
                if ((this.CanViewAndEditMessageBoxField.Equals(value) != true)) {
                    this.CanViewAndEditMessageBoxField = value;
                    this.RaisePropertyChanged("CanViewAndEditMessageBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewDataReports {
            get {
                return this.CanViewDataReportsField;
            }
            set {
                if ((this.CanViewDataReportsField.Equals(value) != true)) {
                    this.CanViewDataReportsField = value;
                    this.RaisePropertyChanged("CanViewDataReports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewTickets {
            get {
                return this.CanViewTicketsField;
            }
            set {
                if ((this.CanViewTicketsField.Equals(value) != true)) {
                    this.CanViewTicketsField = value;
                    this.RaisePropertyChanged("CanViewTickets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewUsers {
            get {
                return this.CanViewUsersField;
            }
            set {
                if ((this.CanViewUsersField.Equals(value) != true)) {
                    this.CanViewUsersField = value;
                    this.RaisePropertyChanged("CanViewUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((this.GradeField.Equals(value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManagerInfoResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class ManagerInfoResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string GroupField;
        
        private int GroupIdField;
        
        private string LastLoginIpField;
        
        private System.DateTime LastLoginTimeField;
        
        private int UserIdField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastLoginIp {
            get {
                return this.LastLoginIpField;
            }
            set {
                if ((object.ReferenceEquals(this.LastLoginIpField, value) != true)) {
                    this.LastLoginIpField = value;
                    this.RaisePropertyChanged("LastLoginIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastLoginTime {
            get {
                return this.LastLoginTimeField;
            }
            set {
                if ((this.LastLoginTimeField.Equals(value) != true)) {
                    this.LastLoginTimeField = value;
                    this.RaisePropertyChanged("LastLoginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LandingRecordResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class LandingRecordResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IpField;
        
        private System.DateTime LandingTimeField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ip {
            get {
                return this.IpField;
            }
            set {
                if ((object.ReferenceEquals(this.IpField, value) != true)) {
                    this.IpField = value;
                    this.RaisePropertyChanged("Ip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LandingTime {
            get {
                return this.LandingTimeField;
            }
            set {
                if ((this.LandingTimeField.Equals(value) != true)) {
                    this.LandingTimeField = value;
                    this.RaisePropertyChanged("LandingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperatedRecordResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class OperatedRecordResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string OperatedField;
        
        private System.DateTime OperatedTimeField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operated {
            get {
                return this.OperatedField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatedField, value) != true)) {
                    this.OperatedField = value;
                    this.RaisePropertyChanged("Operated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OperatedTime {
            get {
                return this.OperatedTimeField;
            }
            set {
                if ((this.OperatedTimeField.Equals(value) != true)) {
                    this.OperatedTimeField = value;
                    this.RaisePropertyChanged("OperatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddManagerGroupImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class AddManagerGroupImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool CanEditActivitiesField;
        
        private bool CanEditTicketsField;
        
        private bool CanEditUsersField;
        
        private bool CanSettingSiteField;
        
        private bool CanViewActivitiesField;
        
        private bool CanViewAndAddFundsReportsField;
        
        private bool CanViewAndEditManagersField;
        
        private bool CanViewAndEditMessageBoxField;
        
        private bool CanViewDataReportsField;
        
        private bool CanViewTicketsField;
        
        private bool CanViewUsersField;
        
        private int GradeField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEditActivities {
            get {
                return this.CanEditActivitiesField;
            }
            set {
                if ((this.CanEditActivitiesField.Equals(value) != true)) {
                    this.CanEditActivitiesField = value;
                    this.RaisePropertyChanged("CanEditActivities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEditTickets {
            get {
                return this.CanEditTicketsField;
            }
            set {
                if ((this.CanEditTicketsField.Equals(value) != true)) {
                    this.CanEditTicketsField = value;
                    this.RaisePropertyChanged("CanEditTickets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEditUsers {
            get {
                return this.CanEditUsersField;
            }
            set {
                if ((this.CanEditUsersField.Equals(value) != true)) {
                    this.CanEditUsersField = value;
                    this.RaisePropertyChanged("CanEditUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanSettingSite {
            get {
                return this.CanSettingSiteField;
            }
            set {
                if ((this.CanSettingSiteField.Equals(value) != true)) {
                    this.CanSettingSiteField = value;
                    this.RaisePropertyChanged("CanSettingSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewActivities {
            get {
                return this.CanViewActivitiesField;
            }
            set {
                if ((this.CanViewActivitiesField.Equals(value) != true)) {
                    this.CanViewActivitiesField = value;
                    this.RaisePropertyChanged("CanViewActivities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewAndAddFundsReports {
            get {
                return this.CanViewAndAddFundsReportsField;
            }
            set {
                if ((this.CanViewAndAddFundsReportsField.Equals(value) != true)) {
                    this.CanViewAndAddFundsReportsField = value;
                    this.RaisePropertyChanged("CanViewAndAddFundsReports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewAndEditManagers {
            get {
                return this.CanViewAndEditManagersField;
            }
            set {
                if ((this.CanViewAndEditManagersField.Equals(value) != true)) {
                    this.CanViewAndEditManagersField = value;
                    this.RaisePropertyChanged("CanViewAndEditManagers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewAndEditMessageBox {
            get {
                return this.CanViewAndEditMessageBoxField;
            }
            set {
                if ((this.CanViewAndEditMessageBoxField.Equals(value) != true)) {
                    this.CanViewAndEditMessageBoxField = value;
                    this.RaisePropertyChanged("CanViewAndEditMessageBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewDataReports {
            get {
                return this.CanViewDataReportsField;
            }
            set {
                if ((this.CanViewDataReportsField.Equals(value) != true)) {
                    this.CanViewDataReportsField = value;
                    this.RaisePropertyChanged("CanViewDataReports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewTickets {
            get {
                return this.CanViewTicketsField;
            }
            set {
                if ((this.CanViewTicketsField.Equals(value) != true)) {
                    this.CanViewTicketsField = value;
                    this.RaisePropertyChanged("CanViewTickets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewUsers {
            get {
                return this.CanViewUsersField;
            }
            set {
                if ((this.CanViewUsersField.Equals(value) != true)) {
                    this.CanViewUsersField = value;
                    this.RaisePropertyChanged("CanViewUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((this.GradeField.Equals(value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditManagerGroupImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class EditManagerGroupImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool CanEditActivitiesField;
        
        private bool CanEditTicketsField;
        
        private bool CanEditUsersField;
        
        private bool CanSettingSiteField;
        
        private bool CanViewActivitiesField;
        
        private bool CanViewAndAddFundsReportsField;
        
        private bool CanViewAndEditMessageBoxField;
        
        private bool CanViewDataReportsField;
        
        private bool CanViewTicketsField;
        
        private bool CanViewUsersField;
        
        private int GradeField;
        
        private int GroupIdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEditActivities {
            get {
                return this.CanEditActivitiesField;
            }
            set {
                if ((this.CanEditActivitiesField.Equals(value) != true)) {
                    this.CanEditActivitiesField = value;
                    this.RaisePropertyChanged("CanEditActivities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEditTickets {
            get {
                return this.CanEditTicketsField;
            }
            set {
                if ((this.CanEditTicketsField.Equals(value) != true)) {
                    this.CanEditTicketsField = value;
                    this.RaisePropertyChanged("CanEditTickets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEditUsers {
            get {
                return this.CanEditUsersField;
            }
            set {
                if ((this.CanEditUsersField.Equals(value) != true)) {
                    this.CanEditUsersField = value;
                    this.RaisePropertyChanged("CanEditUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanSettingSite {
            get {
                return this.CanSettingSiteField;
            }
            set {
                if ((this.CanSettingSiteField.Equals(value) != true)) {
                    this.CanSettingSiteField = value;
                    this.RaisePropertyChanged("CanSettingSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewActivities {
            get {
                return this.CanViewActivitiesField;
            }
            set {
                if ((this.CanViewActivitiesField.Equals(value) != true)) {
                    this.CanViewActivitiesField = value;
                    this.RaisePropertyChanged("CanViewActivities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewAndAddFundsReports {
            get {
                return this.CanViewAndAddFundsReportsField;
            }
            set {
                if ((this.CanViewAndAddFundsReportsField.Equals(value) != true)) {
                    this.CanViewAndAddFundsReportsField = value;
                    this.RaisePropertyChanged("CanViewAndAddFundsReports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewAndEditMessageBox {
            get {
                return this.CanViewAndEditMessageBoxField;
            }
            set {
                if ((this.CanViewAndEditMessageBoxField.Equals(value) != true)) {
                    this.CanViewAndEditMessageBoxField = value;
                    this.RaisePropertyChanged("CanViewAndEditMessageBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewDataReports {
            get {
                return this.CanViewDataReportsField;
            }
            set {
                if ((this.CanViewDataReportsField.Equals(value) != true)) {
                    this.CanViewDataReportsField = value;
                    this.RaisePropertyChanged("CanViewDataReports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewTickets {
            get {
                return this.CanViewTicketsField;
            }
            set {
                if ((this.CanViewTicketsField.Equals(value) != true)) {
                    this.CanViewTicketsField = value;
                    this.RaisePropertyChanged("CanViewTickets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanViewUsers {
            get {
                return this.CanViewUsersField;
            }
            set {
                if ((this.CanViewUsersField.Equals(value) != true)) {
                    this.CanViewUsersField = value;
                    this.RaisePropertyChanged("CanViewUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((this.GradeField.Equals(value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ManagerService.IManagerService")]
    public interface IManagerService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IManagerService/Login", ReplyAction="http://tempuri.org/IManagerService/LoginResponse")]
        System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.ManagerService.LoginResult EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IManagerService/Logout", ReplyAction="http://tempuri.org/IManagerService/LogoutResponse")]
        System.IAsyncResult BeginLogout(string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.ManagerService.OperateResult EndLogout(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IManagerService/Heartbeat", ReplyAction="http://tempuri.org/IManagerService/HeartbeatResponse")]
        System.IAsyncResult BeginHeartbeat(string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.ManagerService.OperateResult EndHeartbeat(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IManagerService/GetList", ReplyAction="http://tempuri.org/IManagerService/GetListResponse")]
        System.IAsyncResult BeginGetList(string keyword, int groupId, int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.ManagerService.PaginationListOfManagerInfoResultp9CVq9mK EndGetList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IManagerService/Add", ReplyAction="http://tempuri.org/IManagerService/AddResponse")]
        System.IAsyncResult BeginAdd(string username, string password, string group, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.ManagerService.OperateResult EndAdd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IManagerService/Remove", ReplyAction="http://tempuri.org/IManagerService/RemoveResponse")]
        System.IAsyncResult BeginRemove(int userId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.ManagerService.OperateResult EndRemove(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IManagerService/ResetPassage", ReplyAction="http://tempuri.org/IManagerService/ResetPassageResponse")]
        System.IAsyncResult BeginResetPassage(int userId, string oldPassword, string newPassword, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.ManagerService.OperateResult EndResetPassage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IManagerService/ChangeGroup", ReplyAction="http://tempuri.org/IManagerService/ChangeGroupResponse")]
        System.IAsyncResult BeginChangeGroup(int userId, int GroupId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.ManagerService.OperateResult EndChangeGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IManagerService/GetGroupList", ReplyAction="http://tempuri.org/IManagerService/GetGroupListResponse")]
        System.IAsyncResult BeginGetGroupList(string keyword, int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.ManagerService.PaginationListOfManagerGroupResultp9CVq9mK EndGetGroupList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IManagerService/AddGroup", ReplyAction="http://tempuri.org/IManagerService/AddGroupResponse")]
        System.IAsyncResult BeginAddGroup(IWorld.Admin.Framework.ManagerService.AddManagerGroupImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.ManagerService.OperateResult EndAddGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IManagerService/EditGroup", ReplyAction="http://tempuri.org/IManagerService/EditGroupResponse")]
        System.IAsyncResult BeginEditGroup(IWorld.Admin.Framework.ManagerService.EditManagerGroupImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.ManagerService.OperateResult EndEditGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IManagerService/RemoveGroup", ReplyAction="http://tempuri.org/IManagerService/RemoveGroupResponse")]
        System.IAsyncResult BeginRemoveGroup(int groupId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.ManagerService.OperateResult EndRemoveGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IManagerService/GetLandingRecordList", ReplyAction="http://tempuri.org/IManagerService/GetLandingRecordListResponse")]
        System.IAsyncResult BeginGetLandingRecordList(int userId, string beginTime, string endTime, int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.ManagerService.PaginationListOfLandingRecordResultp9CVq9mK EndGetLandingRecordList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IManagerService/GetOperatedRecordList", ReplyAction="http://tempuri.org/IManagerService/GetOperatedRecordListResponse")]
        System.IAsyncResult BeginGetOperatedRecordList(int userId, string beginTime, string endTime, int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.ManagerService.PaginationListOfOperatedRecordResultp9CVq9mK EndGetOperatedRecordList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManagerServiceChannel : IWorld.Admin.Framework.ManagerService.IManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.ManagerService.LoginResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.ManagerService.LoginResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.ManagerService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.ManagerService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HeartbeatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HeartbeatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.ManagerService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.ManagerService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.ManagerService.PaginationListOfManagerInfoResultp9CVq9mK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.ManagerService.PaginationListOfManagerInfoResultp9CVq9mK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.ManagerService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.ManagerService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.ManagerService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.ManagerService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResetPassageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ResetPassageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.ManagerService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.ManagerService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangeGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangeGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.ManagerService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.ManagerService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGroupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGroupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.ManagerService.PaginationListOfManagerGroupResultp9CVq9mK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.ManagerService.PaginationListOfManagerGroupResultp9CVq9mK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.ManagerService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.ManagerService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.ManagerService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.ManagerService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.ManagerService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.ManagerService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLandingRecordListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLandingRecordListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.ManagerService.PaginationListOfLandingRecordResultp9CVq9mK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.ManagerService.PaginationListOfLandingRecordResultp9CVq9mK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOperatedRecordListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOperatedRecordListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.ManagerService.PaginationListOfOperatedRecordResultp9CVq9mK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.ManagerService.PaginationListOfOperatedRecordResultp9CVq9mK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManagerServiceClient : System.ServiceModel.ClientBase<IWorld.Admin.Framework.ManagerService.IManagerService>, IWorld.Admin.Framework.ManagerService.IManagerService {
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogoutDelegate;
        
        private EndOperationDelegate onEndLogoutDelegate;
        
        private System.Threading.SendOrPostCallback onLogoutCompletedDelegate;
        
        private BeginOperationDelegate onBeginHeartbeatDelegate;
        
        private EndOperationDelegate onEndHeartbeatDelegate;
        
        private System.Threading.SendOrPostCallback onHeartbeatCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListDelegate;
        
        private EndOperationDelegate onEndGetListDelegate;
        
        private System.Threading.SendOrPostCallback onGetListCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddDelegate;
        
        private EndOperationDelegate onEndAddDelegate;
        
        private System.Threading.SendOrPostCallback onAddCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveDelegate;
        
        private EndOperationDelegate onEndRemoveDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveCompletedDelegate;
        
        private BeginOperationDelegate onBeginResetPassageDelegate;
        
        private EndOperationDelegate onEndResetPassageDelegate;
        
        private System.Threading.SendOrPostCallback onResetPassageCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeGroupDelegate;
        
        private EndOperationDelegate onEndChangeGroupDelegate;
        
        private System.Threading.SendOrPostCallback onChangeGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGroupListDelegate;
        
        private EndOperationDelegate onEndGetGroupListDelegate;
        
        private System.Threading.SendOrPostCallback onGetGroupListCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddGroupDelegate;
        
        private EndOperationDelegate onEndAddGroupDelegate;
        
        private System.Threading.SendOrPostCallback onAddGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditGroupDelegate;
        
        private EndOperationDelegate onEndEditGroupDelegate;
        
        private System.Threading.SendOrPostCallback onEditGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveGroupDelegate;
        
        private EndOperationDelegate onEndRemoveGroupDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLandingRecordListDelegate;
        
        private EndOperationDelegate onEndGetLandingRecordListDelegate;
        
        private System.Threading.SendOrPostCallback onGetLandingRecordListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOperatedRecordListDelegate;
        
        private EndOperationDelegate onEndGetOperatedRecordListDelegate;
        
        private System.Threading.SendOrPostCallback onGetOperatedRecordListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ManagerServiceClient() {
        }
        
        public ManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<LogoutCompletedEventArgs> LogoutCompleted;
        
        public event System.EventHandler<HeartbeatCompletedEventArgs> HeartbeatCompleted;
        
        public event System.EventHandler<GetListCompletedEventArgs> GetListCompleted;
        
        public event System.EventHandler<AddCompletedEventArgs> AddCompleted;
        
        public event System.EventHandler<RemoveCompletedEventArgs> RemoveCompleted;
        
        public event System.EventHandler<ResetPassageCompletedEventArgs> ResetPassageCompleted;
        
        public event System.EventHandler<ChangeGroupCompletedEventArgs> ChangeGroupCompleted;
        
        public event System.EventHandler<GetGroupListCompletedEventArgs> GetGroupListCompleted;
        
        public event System.EventHandler<AddGroupCompletedEventArgs> AddGroupCompleted;
        
        public event System.EventHandler<EditGroupCompletedEventArgs> EditGroupCompleted;
        
        public event System.EventHandler<RemoveGroupCompletedEventArgs> RemoveGroupCompleted;
        
        public event System.EventHandler<GetLandingRecordListCompletedEventArgs> GetLandingRecordListCompleted;
        
        public event System.EventHandler<GetOperatedRecordListCompletedEventArgs> GetOperatedRecordListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.ManagerService.IManagerService.BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.ManagerService.LoginResult IWorld.Admin.Framework.ManagerService.IManagerService.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).BeginLogin(username, password, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            IWorld.Admin.Framework.ManagerService.LoginResult retVal = ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        public void LoginAsync(string username, string password, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        username,
                        password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.ManagerService.IManagerService.BeginLogout(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogout(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.ManagerService.OperateResult IWorld.Admin.Framework.ManagerService.IManagerService.EndLogout(System.IAsyncResult result) {
            return base.Channel.EndLogout(result);
        }
        
        private System.IAsyncResult OnBeginLogout(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).BeginLogout(token, callback, asyncState);
        }
        
        private object[] OnEndLogout(System.IAsyncResult result) {
            IWorld.Admin.Framework.ManagerService.OperateResult retVal = ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).EndLogout(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLogoutCompleted(object state) {
            if ((this.LogoutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogoutCompleted(this, new LogoutCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogoutAsync(string token) {
            this.LogoutAsync(token, null);
        }
        
        public void LogoutAsync(string token, object userState) {
            if ((this.onBeginLogoutDelegate == null)) {
                this.onBeginLogoutDelegate = new BeginOperationDelegate(this.OnBeginLogout);
            }
            if ((this.onEndLogoutDelegate == null)) {
                this.onEndLogoutDelegate = new EndOperationDelegate(this.OnEndLogout);
            }
            if ((this.onLogoutCompletedDelegate == null)) {
                this.onLogoutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogoutCompleted);
            }
            base.InvokeAsync(this.onBeginLogoutDelegate, new object[] {
                        token}, this.onEndLogoutDelegate, this.onLogoutCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.ManagerService.IManagerService.BeginHeartbeat(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHeartbeat(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.ManagerService.OperateResult IWorld.Admin.Framework.ManagerService.IManagerService.EndHeartbeat(System.IAsyncResult result) {
            return base.Channel.EndHeartbeat(result);
        }
        
        private System.IAsyncResult OnBeginHeartbeat(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).BeginHeartbeat(token, callback, asyncState);
        }
        
        private object[] OnEndHeartbeat(System.IAsyncResult result) {
            IWorld.Admin.Framework.ManagerService.OperateResult retVal = ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).EndHeartbeat(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHeartbeatCompleted(object state) {
            if ((this.HeartbeatCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HeartbeatCompleted(this, new HeartbeatCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HeartbeatAsync(string token) {
            this.HeartbeatAsync(token, null);
        }
        
        public void HeartbeatAsync(string token, object userState) {
            if ((this.onBeginHeartbeatDelegate == null)) {
                this.onBeginHeartbeatDelegate = new BeginOperationDelegate(this.OnBeginHeartbeat);
            }
            if ((this.onEndHeartbeatDelegate == null)) {
                this.onEndHeartbeatDelegate = new EndOperationDelegate(this.OnEndHeartbeat);
            }
            if ((this.onHeartbeatCompletedDelegate == null)) {
                this.onHeartbeatCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHeartbeatCompleted);
            }
            base.InvokeAsync(this.onBeginHeartbeatDelegate, new object[] {
                        token}, this.onEndHeartbeatDelegate, this.onHeartbeatCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.ManagerService.IManagerService.BeginGetList(string keyword, int groupId, int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetList(keyword, groupId, page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.ManagerService.PaginationListOfManagerInfoResultp9CVq9mK IWorld.Admin.Framework.ManagerService.IManagerService.EndGetList(System.IAsyncResult result) {
            return base.Channel.EndGetList(result);
        }
        
        private System.IAsyncResult OnBeginGetList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keyword = ((string)(inValues[0]));
            int groupId = ((int)(inValues[1]));
            int page = ((int)(inValues[2]));
            string token = ((string)(inValues[3]));
            return ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).BeginGetList(keyword, groupId, page, token, callback, asyncState);
        }
        
        private object[] OnEndGetList(System.IAsyncResult result) {
            IWorld.Admin.Framework.ManagerService.PaginationListOfManagerInfoResultp9CVq9mK retVal = ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).EndGetList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListCompleted(object state) {
            if ((this.GetListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListCompleted(this, new GetListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAsync(string keyword, int groupId, int page, string token) {
            this.GetListAsync(keyword, groupId, page, token, null);
        }
        
        public void GetListAsync(string keyword, int groupId, int page, string token, object userState) {
            if ((this.onBeginGetListDelegate == null)) {
                this.onBeginGetListDelegate = new BeginOperationDelegate(this.OnBeginGetList);
            }
            if ((this.onEndGetListDelegate == null)) {
                this.onEndGetListDelegate = new EndOperationDelegate(this.OnEndGetList);
            }
            if ((this.onGetListCompletedDelegate == null)) {
                this.onGetListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListCompleted);
            }
            base.InvokeAsync(this.onBeginGetListDelegate, new object[] {
                        keyword,
                        groupId,
                        page,
                        token}, this.onEndGetListDelegate, this.onGetListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.ManagerService.IManagerService.BeginAdd(string username, string password, string group, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAdd(username, password, group, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.ManagerService.OperateResult IWorld.Admin.Framework.ManagerService.IManagerService.EndAdd(System.IAsyncResult result) {
            return base.Channel.EndAdd(result);
        }
        
        private System.IAsyncResult OnBeginAdd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string group = ((string)(inValues[2]));
            string token = ((string)(inValues[3]));
            return ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).BeginAdd(username, password, group, token, callback, asyncState);
        }
        
        private object[] OnEndAdd(System.IAsyncResult result) {
            IWorld.Admin.Framework.ManagerService.OperateResult retVal = ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).EndAdd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddCompleted(object state) {
            if ((this.AddCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddCompleted(this, new AddCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAsync(string username, string password, string group, string token) {
            this.AddAsync(username, password, group, token, null);
        }
        
        public void AddAsync(string username, string password, string group, string token, object userState) {
            if ((this.onBeginAddDelegate == null)) {
                this.onBeginAddDelegate = new BeginOperationDelegate(this.OnBeginAdd);
            }
            if ((this.onEndAddDelegate == null)) {
                this.onEndAddDelegate = new EndOperationDelegate(this.OnEndAdd);
            }
            if ((this.onAddCompletedDelegate == null)) {
                this.onAddCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCompleted);
            }
            base.InvokeAsync(this.onBeginAddDelegate, new object[] {
                        username,
                        password,
                        group,
                        token}, this.onEndAddDelegate, this.onAddCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.ManagerService.IManagerService.BeginRemove(int userId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemove(userId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.ManagerService.OperateResult IWorld.Admin.Framework.ManagerService.IManagerService.EndRemove(System.IAsyncResult result) {
            return base.Channel.EndRemove(result);
        }
        
        private System.IAsyncResult OnBeginRemove(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).BeginRemove(userId, token, callback, asyncState);
        }
        
        private object[] OnEndRemove(System.IAsyncResult result) {
            IWorld.Admin.Framework.ManagerService.OperateResult retVal = ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).EndRemove(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveCompleted(object state) {
            if ((this.RemoveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveCompleted(this, new RemoveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveAsync(int userId, string token) {
            this.RemoveAsync(userId, token, null);
        }
        
        public void RemoveAsync(int userId, string token, object userState) {
            if ((this.onBeginRemoveDelegate == null)) {
                this.onBeginRemoveDelegate = new BeginOperationDelegate(this.OnBeginRemove);
            }
            if ((this.onEndRemoveDelegate == null)) {
                this.onEndRemoveDelegate = new EndOperationDelegate(this.OnEndRemove);
            }
            if ((this.onRemoveCompletedDelegate == null)) {
                this.onRemoveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveDelegate, new object[] {
                        userId,
                        token}, this.onEndRemoveDelegate, this.onRemoveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.ManagerService.IManagerService.BeginResetPassage(int userId, string oldPassword, string newPassword, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResetPassage(userId, oldPassword, newPassword, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.ManagerService.OperateResult IWorld.Admin.Framework.ManagerService.IManagerService.EndResetPassage(System.IAsyncResult result) {
            return base.Channel.EndResetPassage(result);
        }
        
        private System.IAsyncResult OnBeginResetPassage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            string oldPassword = ((string)(inValues[1]));
            string newPassword = ((string)(inValues[2]));
            string token = ((string)(inValues[3]));
            return ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).BeginResetPassage(userId, oldPassword, newPassword, token, callback, asyncState);
        }
        
        private object[] OnEndResetPassage(System.IAsyncResult result) {
            IWorld.Admin.Framework.ManagerService.OperateResult retVal = ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).EndResetPassage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnResetPassageCompleted(object state) {
            if ((this.ResetPassageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetPassageCompleted(this, new ResetPassageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetPassageAsync(int userId, string oldPassword, string newPassword, string token) {
            this.ResetPassageAsync(userId, oldPassword, newPassword, token, null);
        }
        
        public void ResetPassageAsync(int userId, string oldPassword, string newPassword, string token, object userState) {
            if ((this.onBeginResetPassageDelegate == null)) {
                this.onBeginResetPassageDelegate = new BeginOperationDelegate(this.OnBeginResetPassage);
            }
            if ((this.onEndResetPassageDelegate == null)) {
                this.onEndResetPassageDelegate = new EndOperationDelegate(this.OnEndResetPassage);
            }
            if ((this.onResetPassageCompletedDelegate == null)) {
                this.onResetPassageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetPassageCompleted);
            }
            base.InvokeAsync(this.onBeginResetPassageDelegate, new object[] {
                        userId,
                        oldPassword,
                        newPassword,
                        token}, this.onEndResetPassageDelegate, this.onResetPassageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.ManagerService.IManagerService.BeginChangeGroup(int userId, int GroupId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeGroup(userId, GroupId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.ManagerService.OperateResult IWorld.Admin.Framework.ManagerService.IManagerService.EndChangeGroup(System.IAsyncResult result) {
            return base.Channel.EndChangeGroup(result);
        }
        
        private System.IAsyncResult OnBeginChangeGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            int GroupId = ((int)(inValues[1]));
            string token = ((string)(inValues[2]));
            return ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).BeginChangeGroup(userId, GroupId, token, callback, asyncState);
        }
        
        private object[] OnEndChangeGroup(System.IAsyncResult result) {
            IWorld.Admin.Framework.ManagerService.OperateResult retVal = ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).EndChangeGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangeGroupCompleted(object state) {
            if ((this.ChangeGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeGroupCompleted(this, new ChangeGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeGroupAsync(int userId, int GroupId, string token) {
            this.ChangeGroupAsync(userId, GroupId, token, null);
        }
        
        public void ChangeGroupAsync(int userId, int GroupId, string token, object userState) {
            if ((this.onBeginChangeGroupDelegate == null)) {
                this.onBeginChangeGroupDelegate = new BeginOperationDelegate(this.OnBeginChangeGroup);
            }
            if ((this.onEndChangeGroupDelegate == null)) {
                this.onEndChangeGroupDelegate = new EndOperationDelegate(this.OnEndChangeGroup);
            }
            if ((this.onChangeGroupCompletedDelegate == null)) {
                this.onChangeGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeGroupCompleted);
            }
            base.InvokeAsync(this.onBeginChangeGroupDelegate, new object[] {
                        userId,
                        GroupId,
                        token}, this.onEndChangeGroupDelegate, this.onChangeGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.ManagerService.IManagerService.BeginGetGroupList(string keyword, int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGroupList(keyword, page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.ManagerService.PaginationListOfManagerGroupResultp9CVq9mK IWorld.Admin.Framework.ManagerService.IManagerService.EndGetGroupList(System.IAsyncResult result) {
            return base.Channel.EndGetGroupList(result);
        }
        
        private System.IAsyncResult OnBeginGetGroupList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keyword = ((string)(inValues[0]));
            int page = ((int)(inValues[1]));
            string token = ((string)(inValues[2]));
            return ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).BeginGetGroupList(keyword, page, token, callback, asyncState);
        }
        
        private object[] OnEndGetGroupList(System.IAsyncResult result) {
            IWorld.Admin.Framework.ManagerService.PaginationListOfManagerGroupResultp9CVq9mK retVal = ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).EndGetGroupList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGroupListCompleted(object state) {
            if ((this.GetGroupListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGroupListCompleted(this, new GetGroupListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGroupListAsync(string keyword, int page, string token) {
            this.GetGroupListAsync(keyword, page, token, null);
        }
        
        public void GetGroupListAsync(string keyword, int page, string token, object userState) {
            if ((this.onBeginGetGroupListDelegate == null)) {
                this.onBeginGetGroupListDelegate = new BeginOperationDelegate(this.OnBeginGetGroupList);
            }
            if ((this.onEndGetGroupListDelegate == null)) {
                this.onEndGetGroupListDelegate = new EndOperationDelegate(this.OnEndGetGroupList);
            }
            if ((this.onGetGroupListCompletedDelegate == null)) {
                this.onGetGroupListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGroupListCompleted);
            }
            base.InvokeAsync(this.onBeginGetGroupListDelegate, new object[] {
                        keyword,
                        page,
                        token}, this.onEndGetGroupListDelegate, this.onGetGroupListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.ManagerService.IManagerService.BeginAddGroup(IWorld.Admin.Framework.ManagerService.AddManagerGroupImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddGroup(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.ManagerService.OperateResult IWorld.Admin.Framework.ManagerService.IManagerService.EndAddGroup(System.IAsyncResult result) {
            return base.Channel.EndAddGroup(result);
        }
        
        private System.IAsyncResult OnBeginAddGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.Framework.ManagerService.AddManagerGroupImport import = ((IWorld.Admin.Framework.ManagerService.AddManagerGroupImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).BeginAddGroup(import, token, callback, asyncState);
        }
        
        private object[] OnEndAddGroup(System.IAsyncResult result) {
            IWorld.Admin.Framework.ManagerService.OperateResult retVal = ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).EndAddGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddGroupCompleted(object state) {
            if ((this.AddGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddGroupCompleted(this, new AddGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddGroupAsync(IWorld.Admin.Framework.ManagerService.AddManagerGroupImport import, string token) {
            this.AddGroupAsync(import, token, null);
        }
        
        public void AddGroupAsync(IWorld.Admin.Framework.ManagerService.AddManagerGroupImport import, string token, object userState) {
            if ((this.onBeginAddGroupDelegate == null)) {
                this.onBeginAddGroupDelegate = new BeginOperationDelegate(this.OnBeginAddGroup);
            }
            if ((this.onEndAddGroupDelegate == null)) {
                this.onEndAddGroupDelegate = new EndOperationDelegate(this.OnEndAddGroup);
            }
            if ((this.onAddGroupCompletedDelegate == null)) {
                this.onAddGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddGroupCompleted);
            }
            base.InvokeAsync(this.onBeginAddGroupDelegate, new object[] {
                        import,
                        token}, this.onEndAddGroupDelegate, this.onAddGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.ManagerService.IManagerService.BeginEditGroup(IWorld.Admin.Framework.ManagerService.EditManagerGroupImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditGroup(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.ManagerService.OperateResult IWorld.Admin.Framework.ManagerService.IManagerService.EndEditGroup(System.IAsyncResult result) {
            return base.Channel.EndEditGroup(result);
        }
        
        private System.IAsyncResult OnBeginEditGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.Framework.ManagerService.EditManagerGroupImport import = ((IWorld.Admin.Framework.ManagerService.EditManagerGroupImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).BeginEditGroup(import, token, callback, asyncState);
        }
        
        private object[] OnEndEditGroup(System.IAsyncResult result) {
            IWorld.Admin.Framework.ManagerService.OperateResult retVal = ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).EndEditGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditGroupCompleted(object state) {
            if ((this.EditGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditGroupCompleted(this, new EditGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditGroupAsync(IWorld.Admin.Framework.ManagerService.EditManagerGroupImport import, string token) {
            this.EditGroupAsync(import, token, null);
        }
        
        public void EditGroupAsync(IWorld.Admin.Framework.ManagerService.EditManagerGroupImport import, string token, object userState) {
            if ((this.onBeginEditGroupDelegate == null)) {
                this.onBeginEditGroupDelegate = new BeginOperationDelegate(this.OnBeginEditGroup);
            }
            if ((this.onEndEditGroupDelegate == null)) {
                this.onEndEditGroupDelegate = new EndOperationDelegate(this.OnEndEditGroup);
            }
            if ((this.onEditGroupCompletedDelegate == null)) {
                this.onEditGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditGroupCompleted);
            }
            base.InvokeAsync(this.onBeginEditGroupDelegate, new object[] {
                        import,
                        token}, this.onEndEditGroupDelegate, this.onEditGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.ManagerService.IManagerService.BeginRemoveGroup(int groupId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveGroup(groupId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.ManagerService.OperateResult IWorld.Admin.Framework.ManagerService.IManagerService.EndRemoveGroup(System.IAsyncResult result) {
            return base.Channel.EndRemoveGroup(result);
        }
        
        private System.IAsyncResult OnBeginRemoveGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).BeginRemoveGroup(groupId, token, callback, asyncState);
        }
        
        private object[] OnEndRemoveGroup(System.IAsyncResult result) {
            IWorld.Admin.Framework.ManagerService.OperateResult retVal = ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).EndRemoveGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveGroupCompleted(object state) {
            if ((this.RemoveGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveGroupCompleted(this, new RemoveGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveGroupAsync(int groupId, string token) {
            this.RemoveGroupAsync(groupId, token, null);
        }
        
        public void RemoveGroupAsync(int groupId, string token, object userState) {
            if ((this.onBeginRemoveGroupDelegate == null)) {
                this.onBeginRemoveGroupDelegate = new BeginOperationDelegate(this.OnBeginRemoveGroup);
            }
            if ((this.onEndRemoveGroupDelegate == null)) {
                this.onEndRemoveGroupDelegate = new EndOperationDelegate(this.OnEndRemoveGroup);
            }
            if ((this.onRemoveGroupCompletedDelegate == null)) {
                this.onRemoveGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveGroupCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveGroupDelegate, new object[] {
                        groupId,
                        token}, this.onEndRemoveGroupDelegate, this.onRemoveGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.ManagerService.IManagerService.BeginGetLandingRecordList(int userId, string beginTime, string endTime, int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLandingRecordList(userId, beginTime, endTime, page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.ManagerService.PaginationListOfLandingRecordResultp9CVq9mK IWorld.Admin.Framework.ManagerService.IManagerService.EndGetLandingRecordList(System.IAsyncResult result) {
            return base.Channel.EndGetLandingRecordList(result);
        }
        
        private System.IAsyncResult OnBeginGetLandingRecordList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            string beginTime = ((string)(inValues[1]));
            string endTime = ((string)(inValues[2]));
            int page = ((int)(inValues[3]));
            string token = ((string)(inValues[4]));
            return ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).BeginGetLandingRecordList(userId, beginTime, endTime, page, token, callback, asyncState);
        }
        
        private object[] OnEndGetLandingRecordList(System.IAsyncResult result) {
            IWorld.Admin.Framework.ManagerService.PaginationListOfLandingRecordResultp9CVq9mK retVal = ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).EndGetLandingRecordList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLandingRecordListCompleted(object state) {
            if ((this.GetLandingRecordListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLandingRecordListCompleted(this, new GetLandingRecordListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLandingRecordListAsync(int userId, string beginTime, string endTime, int page, string token) {
            this.GetLandingRecordListAsync(userId, beginTime, endTime, page, token, null);
        }
        
        public void GetLandingRecordListAsync(int userId, string beginTime, string endTime, int page, string token, object userState) {
            if ((this.onBeginGetLandingRecordListDelegate == null)) {
                this.onBeginGetLandingRecordListDelegate = new BeginOperationDelegate(this.OnBeginGetLandingRecordList);
            }
            if ((this.onEndGetLandingRecordListDelegate == null)) {
                this.onEndGetLandingRecordListDelegate = new EndOperationDelegate(this.OnEndGetLandingRecordList);
            }
            if ((this.onGetLandingRecordListCompletedDelegate == null)) {
                this.onGetLandingRecordListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLandingRecordListCompleted);
            }
            base.InvokeAsync(this.onBeginGetLandingRecordListDelegate, new object[] {
                        userId,
                        beginTime,
                        endTime,
                        page,
                        token}, this.onEndGetLandingRecordListDelegate, this.onGetLandingRecordListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.ManagerService.IManagerService.BeginGetOperatedRecordList(int userId, string beginTime, string endTime, int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOperatedRecordList(userId, beginTime, endTime, page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.ManagerService.PaginationListOfOperatedRecordResultp9CVq9mK IWorld.Admin.Framework.ManagerService.IManagerService.EndGetOperatedRecordList(System.IAsyncResult result) {
            return base.Channel.EndGetOperatedRecordList(result);
        }
        
        private System.IAsyncResult OnBeginGetOperatedRecordList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            string beginTime = ((string)(inValues[1]));
            string endTime = ((string)(inValues[2]));
            int page = ((int)(inValues[3]));
            string token = ((string)(inValues[4]));
            return ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).BeginGetOperatedRecordList(userId, beginTime, endTime, page, token, callback, asyncState);
        }
        
        private object[] OnEndGetOperatedRecordList(System.IAsyncResult result) {
            IWorld.Admin.Framework.ManagerService.PaginationListOfOperatedRecordResultp9CVq9mK retVal = ((IWorld.Admin.Framework.ManagerService.IManagerService)(this)).EndGetOperatedRecordList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOperatedRecordListCompleted(object state) {
            if ((this.GetOperatedRecordListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOperatedRecordListCompleted(this, new GetOperatedRecordListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOperatedRecordListAsync(int userId, string beginTime, string endTime, int page, string token) {
            this.GetOperatedRecordListAsync(userId, beginTime, endTime, page, token, null);
        }
        
        public void GetOperatedRecordListAsync(int userId, string beginTime, string endTime, int page, string token, object userState) {
            if ((this.onBeginGetOperatedRecordListDelegate == null)) {
                this.onBeginGetOperatedRecordListDelegate = new BeginOperationDelegate(this.OnBeginGetOperatedRecordList);
            }
            if ((this.onEndGetOperatedRecordListDelegate == null)) {
                this.onEndGetOperatedRecordListDelegate = new EndOperationDelegate(this.OnEndGetOperatedRecordList);
            }
            if ((this.onGetOperatedRecordListCompletedDelegate == null)) {
                this.onGetOperatedRecordListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOperatedRecordListCompleted);
            }
            base.InvokeAsync(this.onBeginGetOperatedRecordListDelegate, new object[] {
                        userId,
                        beginTime,
                        endTime,
                        page,
                        token}, this.onEndGetOperatedRecordListDelegate, this.onGetOperatedRecordListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IWorld.Admin.Framework.ManagerService.IManagerService CreateChannel() {
            return new ManagerServiceClientChannel(this);
        }
        
        private class ManagerServiceClientChannel : ChannelBase<IWorld.Admin.Framework.ManagerService.IManagerService>, IWorld.Admin.Framework.ManagerService.IManagerService {
            
            public ManagerServiceClientChannel(System.ServiceModel.ClientBase<IWorld.Admin.Framework.ManagerService.IManagerService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.ManagerService.LoginResult EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.ManagerService.LoginResult _result = ((IWorld.Admin.Framework.ManagerService.LoginResult)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogout(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("Logout", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.ManagerService.OperateResult EndLogout(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.ManagerService.OperateResult _result = ((IWorld.Admin.Framework.ManagerService.OperateResult)(base.EndInvoke("Logout", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHeartbeat(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("Heartbeat", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.ManagerService.OperateResult EndHeartbeat(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.ManagerService.OperateResult _result = ((IWorld.Admin.Framework.ManagerService.OperateResult)(base.EndInvoke("Heartbeat", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetList(string keyword, int groupId, int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = keyword;
                _args[1] = groupId;
                _args[2] = page;
                _args[3] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetList", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.ManagerService.PaginationListOfManagerInfoResultp9CVq9mK EndGetList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.ManagerService.PaginationListOfManagerInfoResultp9CVq9mK _result = ((IWorld.Admin.Framework.ManagerService.PaginationListOfManagerInfoResultp9CVq9mK)(base.EndInvoke("GetList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAdd(string username, string password, string group, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = username;
                _args[1] = password;
                _args[2] = group;
                _args[3] = token;
                System.IAsyncResult _result = base.BeginInvoke("Add", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.ManagerService.OperateResult EndAdd(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.ManagerService.OperateResult _result = ((IWorld.Admin.Framework.ManagerService.OperateResult)(base.EndInvoke("Add", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemove(int userId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("Remove", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.ManagerService.OperateResult EndRemove(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.ManagerService.OperateResult _result = ((IWorld.Admin.Framework.ManagerService.OperateResult)(base.EndInvoke("Remove", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginResetPassage(int userId, string oldPassword, string newPassword, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = userId;
                _args[1] = oldPassword;
                _args[2] = newPassword;
                _args[3] = token;
                System.IAsyncResult _result = base.BeginInvoke("ResetPassage", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.ManagerService.OperateResult EndResetPassage(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.ManagerService.OperateResult _result = ((IWorld.Admin.Framework.ManagerService.OperateResult)(base.EndInvoke("ResetPassage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginChangeGroup(int userId, int GroupId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userId;
                _args[1] = GroupId;
                _args[2] = token;
                System.IAsyncResult _result = base.BeginInvoke("ChangeGroup", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.ManagerService.OperateResult EndChangeGroup(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.ManagerService.OperateResult _result = ((IWorld.Admin.Framework.ManagerService.OperateResult)(base.EndInvoke("ChangeGroup", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGroupList(string keyword, int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = keyword;
                _args[1] = page;
                _args[2] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetGroupList", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.ManagerService.PaginationListOfManagerGroupResultp9CVq9mK EndGetGroupList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.ManagerService.PaginationListOfManagerGroupResultp9CVq9mK _result = ((IWorld.Admin.Framework.ManagerService.PaginationListOfManagerGroupResultp9CVq9mK)(base.EndInvoke("GetGroupList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddGroup(IWorld.Admin.Framework.ManagerService.AddManagerGroupImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("AddGroup", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.ManagerService.OperateResult EndAddGroup(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.ManagerService.OperateResult _result = ((IWorld.Admin.Framework.ManagerService.OperateResult)(base.EndInvoke("AddGroup", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditGroup(IWorld.Admin.Framework.ManagerService.EditManagerGroupImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("EditGroup", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.ManagerService.OperateResult EndEditGroup(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.ManagerService.OperateResult _result = ((IWorld.Admin.Framework.ManagerService.OperateResult)(base.EndInvoke("EditGroup", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveGroup(int groupId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = groupId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("RemoveGroup", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.ManagerService.OperateResult EndRemoveGroup(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.ManagerService.OperateResult _result = ((IWorld.Admin.Framework.ManagerService.OperateResult)(base.EndInvoke("RemoveGroup", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLandingRecordList(int userId, string beginTime, string endTime, int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = userId;
                _args[1] = beginTime;
                _args[2] = endTime;
                _args[3] = page;
                _args[4] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetLandingRecordList", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.ManagerService.PaginationListOfLandingRecordResultp9CVq9mK EndGetLandingRecordList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.ManagerService.PaginationListOfLandingRecordResultp9CVq9mK _result = ((IWorld.Admin.Framework.ManagerService.PaginationListOfLandingRecordResultp9CVq9mK)(base.EndInvoke("GetLandingRecordList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOperatedRecordList(int userId, string beginTime, string endTime, int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = userId;
                _args[1] = beginTime;
                _args[2] = endTime;
                _args[3] = page;
                _args[4] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetOperatedRecordList", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.ManagerService.PaginationListOfOperatedRecordResultp9CVq9mK EndGetOperatedRecordList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.ManagerService.PaginationListOfOperatedRecordResultp9CVq9mK _result = ((IWorld.Admin.Framework.ManagerService.PaginationListOfOperatedRecordResultp9CVq9mK)(base.EndInvoke("GetOperatedRecordList", _args, result)));
                return _result;
            }
        }
    }
}
