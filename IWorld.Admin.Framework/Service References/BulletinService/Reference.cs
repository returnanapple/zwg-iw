//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18051
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace IWorld.Admin.Framework.BulletinService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegularlyStatusSelectType", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public enum RegularlyStatusSelectType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        全部 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        未过期 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        正常 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        暂停 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        已过期 = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperateResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IWorld.Admin.Framework.BulletinService.PaginationListOfBulletinResultp9CVq9mK))]
    public partial class OperateResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationListOfBulletinResultp9CVq9mK", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class PaginationListOfBulletinResultp9CVq9mK : IWorld.Admin.Framework.BulletinService.OperateResult {
        
        private System.Collections.Generic.List<IWorld.Admin.Framework.BulletinService.BulletinResult> ContentField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalField;
        
        private int TotalOfPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IWorld.Admin.Framework.BulletinService.BulletinResult> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOfPage {
            get {
                return this.TotalOfPageField;
            }
            set {
                if ((this.TotalOfPageField.Equals(value) != true)) {
                    this.TotalOfPageField = value;
                    this.RaisePropertyChanged("TotalOfPage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BulletinResult", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class BulletinResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AutoDeleteField;
        
        private System.DateTime BeginTimeField;
        
        private int BulletinIdField;
        
        private string ContextField;
        
        private int DaysField;
        
        private System.DateTime EndTimeField;
        
        private bool HideField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoDelete {
            get {
                return this.AutoDeleteField;
            }
            set {
                if ((this.AutoDeleteField.Equals(value) != true)) {
                    this.AutoDeleteField = value;
                    this.RaisePropertyChanged("AutoDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BeginTime {
            get {
                return this.BeginTimeField;
            }
            set {
                if ((this.BeginTimeField.Equals(value) != true)) {
                    this.BeginTimeField = value;
                    this.RaisePropertyChanged("BeginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BulletinId {
            get {
                return this.BulletinIdField;
            }
            set {
                if ((this.BulletinIdField.Equals(value) != true)) {
                    this.BulletinIdField = value;
                    this.RaisePropertyChanged("BulletinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Days {
            get {
                return this.DaysField;
            }
            set {
                if ((this.DaysField.Equals(value) != true)) {
                    this.DaysField = value;
                    this.RaisePropertyChanged("Days");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hide {
            get {
                return this.HideField;
            }
            set {
                if ((this.HideField.Equals(value) != true)) {
                    this.HideField = value;
                    this.RaisePropertyChanged("Hide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddBulletinImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class AddBulletinImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AutoDeleteField;
        
        private string BeginTimeField;
        
        private string ContextField;
        
        private int DaysField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoDelete {
            get {
                return this.AutoDeleteField;
            }
            set {
                if ((this.AutoDeleteField.Equals(value) != true)) {
                    this.AutoDeleteField = value;
                    this.RaisePropertyChanged("AutoDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeginTime {
            get {
                return this.BeginTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.BeginTimeField, value) != true)) {
                    this.BeginTimeField = value;
                    this.RaisePropertyChanged("BeginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Days {
            get {
                return this.DaysField;
            }
            set {
                if ((this.DaysField.Equals(value) != true)) {
                    this.DaysField = value;
                    this.RaisePropertyChanged("Days");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditBulletinImport", Namespace="http://schemas.datacontract.org/2004/07/IWorld.Contract.Admin")]
    public partial class EditBulletinImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AutoDeleteField;
        
        private int BulletinIdField;
        
        private string ContextField;
        
        private int DaysField;
        
        private bool HideField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoDelete {
            get {
                return this.AutoDeleteField;
            }
            set {
                if ((this.AutoDeleteField.Equals(value) != true)) {
                    this.AutoDeleteField = value;
                    this.RaisePropertyChanged("AutoDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BulletinId {
            get {
                return this.BulletinIdField;
            }
            set {
                if ((this.BulletinIdField.Equals(value) != true)) {
                    this.BulletinIdField = value;
                    this.RaisePropertyChanged("BulletinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Days {
            get {
                return this.DaysField;
            }
            set {
                if ((this.DaysField.Equals(value) != true)) {
                    this.DaysField = value;
                    this.RaisePropertyChanged("Days");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hide {
            get {
                return this.HideField;
            }
            set {
                if ((this.HideField.Equals(value) != true)) {
                    this.HideField = value;
                    this.RaisePropertyChanged("Hide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BulletinService.IBulletinService")]
    public interface IBulletinService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBulletinService/GetBulletinList", ReplyAction="http://tempuri.org/IBulletinService/GetBulletinListResponse")]
        System.IAsyncResult BeginGetBulletinList(string keyword, IWorld.Admin.Framework.BulletinService.RegularlyStatusSelectType status, int page, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.BulletinService.PaginationListOfBulletinResultp9CVq9mK EndGetBulletinList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBulletinService/AddBulletin", ReplyAction="http://tempuri.org/IBulletinService/AddBulletinResponse")]
        System.IAsyncResult BeginAddBulletin(IWorld.Admin.Framework.BulletinService.AddBulletinImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.BulletinService.OperateResult EndAddBulletin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBulletinService/EditBulletin", ReplyAction="http://tempuri.org/IBulletinService/EditBulletinResponse")]
        System.IAsyncResult BeginEditBulletin(IWorld.Admin.Framework.BulletinService.EditBulletinImport import, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.BulletinService.OperateResult EndEditBulletin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBulletinService/RemoveBulletin", ReplyAction="http://tempuri.org/IBulletinService/RemoveBulletinResponse")]
        System.IAsyncResult BeginRemoveBulletin(int bulletinId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.BulletinService.OperateResult EndRemoveBulletin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBulletinService/HideBulletin", ReplyAction="http://tempuri.org/IBulletinService/HideBulletinResponse")]
        System.IAsyncResult BeginHideBulletin(int bulletinId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.BulletinService.OperateResult EndHideBulletin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBulletinService/ShowBulletin", ReplyAction="http://tempuri.org/IBulletinService/ShowBulletinResponse")]
        System.IAsyncResult BeginShowBulletin(int bulletinId, string token, System.AsyncCallback callback, object asyncState);
        
        IWorld.Admin.Framework.BulletinService.OperateResult EndShowBulletin(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBulletinServiceChannel : IWorld.Admin.Framework.BulletinService.IBulletinService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBulletinListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBulletinListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.BulletinService.PaginationListOfBulletinResultp9CVq9mK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.BulletinService.PaginationListOfBulletinResultp9CVq9mK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.BulletinService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.BulletinService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.BulletinService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.BulletinService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.BulletinService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.BulletinService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HideBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HideBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.BulletinService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.BulletinService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShowBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ShowBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IWorld.Admin.Framework.BulletinService.OperateResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IWorld.Admin.Framework.BulletinService.OperateResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BulletinServiceClient : System.ServiceModel.ClientBase<IWorld.Admin.Framework.BulletinService.IBulletinService>, IWorld.Admin.Framework.BulletinService.IBulletinService {
        
        private BeginOperationDelegate onBeginGetBulletinListDelegate;
        
        private EndOperationDelegate onEndGetBulletinListDelegate;
        
        private System.Threading.SendOrPostCallback onGetBulletinListCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddBulletinDelegate;
        
        private EndOperationDelegate onEndAddBulletinDelegate;
        
        private System.Threading.SendOrPostCallback onAddBulletinCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditBulletinDelegate;
        
        private EndOperationDelegate onEndEditBulletinDelegate;
        
        private System.Threading.SendOrPostCallback onEditBulletinCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveBulletinDelegate;
        
        private EndOperationDelegate onEndRemoveBulletinDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveBulletinCompletedDelegate;
        
        private BeginOperationDelegate onBeginHideBulletinDelegate;
        
        private EndOperationDelegate onEndHideBulletinDelegate;
        
        private System.Threading.SendOrPostCallback onHideBulletinCompletedDelegate;
        
        private BeginOperationDelegate onBeginShowBulletinDelegate;
        
        private EndOperationDelegate onEndShowBulletinDelegate;
        
        private System.Threading.SendOrPostCallback onShowBulletinCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public BulletinServiceClient() {
        }
        
        public BulletinServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BulletinServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BulletinServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BulletinServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetBulletinListCompletedEventArgs> GetBulletinListCompleted;
        
        public event System.EventHandler<AddBulletinCompletedEventArgs> AddBulletinCompleted;
        
        public event System.EventHandler<EditBulletinCompletedEventArgs> EditBulletinCompleted;
        
        public event System.EventHandler<RemoveBulletinCompletedEventArgs> RemoveBulletinCompleted;
        
        public event System.EventHandler<HideBulletinCompletedEventArgs> HideBulletinCompleted;
        
        public event System.EventHandler<ShowBulletinCompletedEventArgs> ShowBulletinCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.BulletinService.IBulletinService.BeginGetBulletinList(string keyword, IWorld.Admin.Framework.BulletinService.RegularlyStatusSelectType status, int page, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBulletinList(keyword, status, page, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.BulletinService.PaginationListOfBulletinResultp9CVq9mK IWorld.Admin.Framework.BulletinService.IBulletinService.EndGetBulletinList(System.IAsyncResult result) {
            return base.Channel.EndGetBulletinList(result);
        }
        
        private System.IAsyncResult OnBeginGetBulletinList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keyword = ((string)(inValues[0]));
            IWorld.Admin.Framework.BulletinService.RegularlyStatusSelectType status = ((IWorld.Admin.Framework.BulletinService.RegularlyStatusSelectType)(inValues[1]));
            int page = ((int)(inValues[2]));
            string token = ((string)(inValues[3]));
            return ((IWorld.Admin.Framework.BulletinService.IBulletinService)(this)).BeginGetBulletinList(keyword, status, page, token, callback, asyncState);
        }
        
        private object[] OnEndGetBulletinList(System.IAsyncResult result) {
            IWorld.Admin.Framework.BulletinService.PaginationListOfBulletinResultp9CVq9mK retVal = ((IWorld.Admin.Framework.BulletinService.IBulletinService)(this)).EndGetBulletinList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBulletinListCompleted(object state) {
            if ((this.GetBulletinListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBulletinListCompleted(this, new GetBulletinListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBulletinListAsync(string keyword, IWorld.Admin.Framework.BulletinService.RegularlyStatusSelectType status, int page, string token) {
            this.GetBulletinListAsync(keyword, status, page, token, null);
        }
        
        public void GetBulletinListAsync(string keyword, IWorld.Admin.Framework.BulletinService.RegularlyStatusSelectType status, int page, string token, object userState) {
            if ((this.onBeginGetBulletinListDelegate == null)) {
                this.onBeginGetBulletinListDelegate = new BeginOperationDelegate(this.OnBeginGetBulletinList);
            }
            if ((this.onEndGetBulletinListDelegate == null)) {
                this.onEndGetBulletinListDelegate = new EndOperationDelegate(this.OnEndGetBulletinList);
            }
            if ((this.onGetBulletinListCompletedDelegate == null)) {
                this.onGetBulletinListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBulletinListCompleted);
            }
            base.InvokeAsync(this.onBeginGetBulletinListDelegate, new object[] {
                        keyword,
                        status,
                        page,
                        token}, this.onEndGetBulletinListDelegate, this.onGetBulletinListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.BulletinService.IBulletinService.BeginAddBulletin(IWorld.Admin.Framework.BulletinService.AddBulletinImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddBulletin(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.BulletinService.OperateResult IWorld.Admin.Framework.BulletinService.IBulletinService.EndAddBulletin(System.IAsyncResult result) {
            return base.Channel.EndAddBulletin(result);
        }
        
        private System.IAsyncResult OnBeginAddBulletin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.Framework.BulletinService.AddBulletinImport import = ((IWorld.Admin.Framework.BulletinService.AddBulletinImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.BulletinService.IBulletinService)(this)).BeginAddBulletin(import, token, callback, asyncState);
        }
        
        private object[] OnEndAddBulletin(System.IAsyncResult result) {
            IWorld.Admin.Framework.BulletinService.OperateResult retVal = ((IWorld.Admin.Framework.BulletinService.IBulletinService)(this)).EndAddBulletin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddBulletinCompleted(object state) {
            if ((this.AddBulletinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddBulletinCompleted(this, new AddBulletinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddBulletinAsync(IWorld.Admin.Framework.BulletinService.AddBulletinImport import, string token) {
            this.AddBulletinAsync(import, token, null);
        }
        
        public void AddBulletinAsync(IWorld.Admin.Framework.BulletinService.AddBulletinImport import, string token, object userState) {
            if ((this.onBeginAddBulletinDelegate == null)) {
                this.onBeginAddBulletinDelegate = new BeginOperationDelegate(this.OnBeginAddBulletin);
            }
            if ((this.onEndAddBulletinDelegate == null)) {
                this.onEndAddBulletinDelegate = new EndOperationDelegate(this.OnEndAddBulletin);
            }
            if ((this.onAddBulletinCompletedDelegate == null)) {
                this.onAddBulletinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddBulletinCompleted);
            }
            base.InvokeAsync(this.onBeginAddBulletinDelegate, new object[] {
                        import,
                        token}, this.onEndAddBulletinDelegate, this.onAddBulletinCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.BulletinService.IBulletinService.BeginEditBulletin(IWorld.Admin.Framework.BulletinService.EditBulletinImport import, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditBulletin(import, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.BulletinService.OperateResult IWorld.Admin.Framework.BulletinService.IBulletinService.EndEditBulletin(System.IAsyncResult result) {
            return base.Channel.EndEditBulletin(result);
        }
        
        private System.IAsyncResult OnBeginEditBulletin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IWorld.Admin.Framework.BulletinService.EditBulletinImport import = ((IWorld.Admin.Framework.BulletinService.EditBulletinImport)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.BulletinService.IBulletinService)(this)).BeginEditBulletin(import, token, callback, asyncState);
        }
        
        private object[] OnEndEditBulletin(System.IAsyncResult result) {
            IWorld.Admin.Framework.BulletinService.OperateResult retVal = ((IWorld.Admin.Framework.BulletinService.IBulletinService)(this)).EndEditBulletin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditBulletinCompleted(object state) {
            if ((this.EditBulletinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditBulletinCompleted(this, new EditBulletinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditBulletinAsync(IWorld.Admin.Framework.BulletinService.EditBulletinImport import, string token) {
            this.EditBulletinAsync(import, token, null);
        }
        
        public void EditBulletinAsync(IWorld.Admin.Framework.BulletinService.EditBulletinImport import, string token, object userState) {
            if ((this.onBeginEditBulletinDelegate == null)) {
                this.onBeginEditBulletinDelegate = new BeginOperationDelegate(this.OnBeginEditBulletin);
            }
            if ((this.onEndEditBulletinDelegate == null)) {
                this.onEndEditBulletinDelegate = new EndOperationDelegate(this.OnEndEditBulletin);
            }
            if ((this.onEditBulletinCompletedDelegate == null)) {
                this.onEditBulletinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditBulletinCompleted);
            }
            base.InvokeAsync(this.onBeginEditBulletinDelegate, new object[] {
                        import,
                        token}, this.onEndEditBulletinDelegate, this.onEditBulletinCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.BulletinService.IBulletinService.BeginRemoveBulletin(int bulletinId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveBulletin(bulletinId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.BulletinService.OperateResult IWorld.Admin.Framework.BulletinService.IBulletinService.EndRemoveBulletin(System.IAsyncResult result) {
            return base.Channel.EndRemoveBulletin(result);
        }
        
        private System.IAsyncResult OnBeginRemoveBulletin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int bulletinId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.BulletinService.IBulletinService)(this)).BeginRemoveBulletin(bulletinId, token, callback, asyncState);
        }
        
        private object[] OnEndRemoveBulletin(System.IAsyncResult result) {
            IWorld.Admin.Framework.BulletinService.OperateResult retVal = ((IWorld.Admin.Framework.BulletinService.IBulletinService)(this)).EndRemoveBulletin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveBulletinCompleted(object state) {
            if ((this.RemoveBulletinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveBulletinCompleted(this, new RemoveBulletinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveBulletinAsync(int bulletinId, string token) {
            this.RemoveBulletinAsync(bulletinId, token, null);
        }
        
        public void RemoveBulletinAsync(int bulletinId, string token, object userState) {
            if ((this.onBeginRemoveBulletinDelegate == null)) {
                this.onBeginRemoveBulletinDelegate = new BeginOperationDelegate(this.OnBeginRemoveBulletin);
            }
            if ((this.onEndRemoveBulletinDelegate == null)) {
                this.onEndRemoveBulletinDelegate = new EndOperationDelegate(this.OnEndRemoveBulletin);
            }
            if ((this.onRemoveBulletinCompletedDelegate == null)) {
                this.onRemoveBulletinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveBulletinCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveBulletinDelegate, new object[] {
                        bulletinId,
                        token}, this.onEndRemoveBulletinDelegate, this.onRemoveBulletinCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.BulletinService.IBulletinService.BeginHideBulletin(int bulletinId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHideBulletin(bulletinId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.BulletinService.OperateResult IWorld.Admin.Framework.BulletinService.IBulletinService.EndHideBulletin(System.IAsyncResult result) {
            return base.Channel.EndHideBulletin(result);
        }
        
        private System.IAsyncResult OnBeginHideBulletin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int bulletinId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.BulletinService.IBulletinService)(this)).BeginHideBulletin(bulletinId, token, callback, asyncState);
        }
        
        private object[] OnEndHideBulletin(System.IAsyncResult result) {
            IWorld.Admin.Framework.BulletinService.OperateResult retVal = ((IWorld.Admin.Framework.BulletinService.IBulletinService)(this)).EndHideBulletin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHideBulletinCompleted(object state) {
            if ((this.HideBulletinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HideBulletinCompleted(this, new HideBulletinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HideBulletinAsync(int bulletinId, string token) {
            this.HideBulletinAsync(bulletinId, token, null);
        }
        
        public void HideBulletinAsync(int bulletinId, string token, object userState) {
            if ((this.onBeginHideBulletinDelegate == null)) {
                this.onBeginHideBulletinDelegate = new BeginOperationDelegate(this.OnBeginHideBulletin);
            }
            if ((this.onEndHideBulletinDelegate == null)) {
                this.onEndHideBulletinDelegate = new EndOperationDelegate(this.OnEndHideBulletin);
            }
            if ((this.onHideBulletinCompletedDelegate == null)) {
                this.onHideBulletinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHideBulletinCompleted);
            }
            base.InvokeAsync(this.onBeginHideBulletinDelegate, new object[] {
                        bulletinId,
                        token}, this.onEndHideBulletinDelegate, this.onHideBulletinCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IWorld.Admin.Framework.BulletinService.IBulletinService.BeginShowBulletin(int bulletinId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginShowBulletin(bulletinId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IWorld.Admin.Framework.BulletinService.OperateResult IWorld.Admin.Framework.BulletinService.IBulletinService.EndShowBulletin(System.IAsyncResult result) {
            return base.Channel.EndShowBulletin(result);
        }
        
        private System.IAsyncResult OnBeginShowBulletin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int bulletinId = ((int)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((IWorld.Admin.Framework.BulletinService.IBulletinService)(this)).BeginShowBulletin(bulletinId, token, callback, asyncState);
        }
        
        private object[] OnEndShowBulletin(System.IAsyncResult result) {
            IWorld.Admin.Framework.BulletinService.OperateResult retVal = ((IWorld.Admin.Framework.BulletinService.IBulletinService)(this)).EndShowBulletin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnShowBulletinCompleted(object state) {
            if ((this.ShowBulletinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ShowBulletinCompleted(this, new ShowBulletinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ShowBulletinAsync(int bulletinId, string token) {
            this.ShowBulletinAsync(bulletinId, token, null);
        }
        
        public void ShowBulletinAsync(int bulletinId, string token, object userState) {
            if ((this.onBeginShowBulletinDelegate == null)) {
                this.onBeginShowBulletinDelegate = new BeginOperationDelegate(this.OnBeginShowBulletin);
            }
            if ((this.onEndShowBulletinDelegate == null)) {
                this.onEndShowBulletinDelegate = new EndOperationDelegate(this.OnEndShowBulletin);
            }
            if ((this.onShowBulletinCompletedDelegate == null)) {
                this.onShowBulletinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnShowBulletinCompleted);
            }
            base.InvokeAsync(this.onBeginShowBulletinDelegate, new object[] {
                        bulletinId,
                        token}, this.onEndShowBulletinDelegate, this.onShowBulletinCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IWorld.Admin.Framework.BulletinService.IBulletinService CreateChannel() {
            return new BulletinServiceClientChannel(this);
        }
        
        private class BulletinServiceClientChannel : ChannelBase<IWorld.Admin.Framework.BulletinService.IBulletinService>, IWorld.Admin.Framework.BulletinService.IBulletinService {
            
            public BulletinServiceClientChannel(System.ServiceModel.ClientBase<IWorld.Admin.Framework.BulletinService.IBulletinService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetBulletinList(string keyword, IWorld.Admin.Framework.BulletinService.RegularlyStatusSelectType status, int page, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = keyword;
                _args[1] = status;
                _args[2] = page;
                _args[3] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetBulletinList", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.BulletinService.PaginationListOfBulletinResultp9CVq9mK EndGetBulletinList(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.BulletinService.PaginationListOfBulletinResultp9CVq9mK _result = ((IWorld.Admin.Framework.BulletinService.PaginationListOfBulletinResultp9CVq9mK)(base.EndInvoke("GetBulletinList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddBulletin(IWorld.Admin.Framework.BulletinService.AddBulletinImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("AddBulletin", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.BulletinService.OperateResult EndAddBulletin(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.BulletinService.OperateResult _result = ((IWorld.Admin.Framework.BulletinService.OperateResult)(base.EndInvoke("AddBulletin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditBulletin(IWorld.Admin.Framework.BulletinService.EditBulletinImport import, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = import;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("EditBulletin", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.BulletinService.OperateResult EndEditBulletin(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.BulletinService.OperateResult _result = ((IWorld.Admin.Framework.BulletinService.OperateResult)(base.EndInvoke("EditBulletin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveBulletin(int bulletinId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = bulletinId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("RemoveBulletin", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.BulletinService.OperateResult EndRemoveBulletin(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.BulletinService.OperateResult _result = ((IWorld.Admin.Framework.BulletinService.OperateResult)(base.EndInvoke("RemoveBulletin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHideBulletin(int bulletinId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = bulletinId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("HideBulletin", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.BulletinService.OperateResult EndHideBulletin(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.BulletinService.OperateResult _result = ((IWorld.Admin.Framework.BulletinService.OperateResult)(base.EndInvoke("HideBulletin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginShowBulletin(int bulletinId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = bulletinId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("ShowBulletin", _args, callback, asyncState);
                return _result;
            }
            
            public IWorld.Admin.Framework.BulletinService.OperateResult EndShowBulletin(System.IAsyncResult result) {
                object[] _args = new object[0];
                IWorld.Admin.Framework.BulletinService.OperateResult _result = ((IWorld.Admin.Framework.BulletinService.OperateResult)(base.EndInvoke("ShowBulletin", _args, result)));
                return _result;
            }
        }
    }
}
